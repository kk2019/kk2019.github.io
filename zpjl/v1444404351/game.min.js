/**
 * @author Chris Benjaminsen http://chrisbenjaminsen.com/ @benjaminsen
 */
/** @license
	Solitaire FRVR 3.1.0
	More info at http://frvr.com

	Copyright (c) 2013+ FRVR ApS

	All Rights Reserved!
	FRVR is a registered trademark of FRVR ApS
*/
/**
	Well hallo there!

	I see you are interested in the details of how this game was made!
	It's written using a custom HTML5 engine build around PixiJS.

	While I can't tell you more on the how, there is much more on the why to be find at 
	http://blog.chrisbenjaminsen.com where I write frequent status updates on the games I build
	under the FRVR brand -- including a 100% honest track record of money earned and spend.

	Hack on!
	Chris Benjaminsen
	chrisbenjaminsen.com

	--------------------

	Solitiare us would not be possible without the following open source projects:
	
	pixi.js - v2.2.3
	Copyright (c) 2012-2014, Mat Groves
	http://goodboydigital.com/
	pixi.js is licensed under the MIT License.
	http://www.opensource.org/licenses/mit-license.php
	Mat Groves http://matgroves.com/ @Doormat23
*/

! function() {
	function t() {
		u.style.visibility = "hidden"
	}

	function e() {
		u.style.visibility = ""
	}

	function r(t) {
		! function(e, i) {
			var r, n = e.getElementsByTagName(i)[0];
			r = e.createElement(i), r.src = t, n.parentNode.insertBefore(r, n)
		}(document, "script")
	}

	function n() {
		/*ga("send", "event", "Solitaire", "Loaded", "Load Time", 1 * new Date - initTime), isCordova ? setTimeout(app.onAllLoaded, 1) : isWrapped || r(vpath + "content.js");
		var t = document.getElementsByTagName("content")[0];
		t.parentNode.removeChild(t), t = null*/
	}

	function s(t) {
		isClay ? (window.open(t, "_blank"), navigator.app && navigator.app.loadUrl && navigator.app.loadUrl(t, {
			openExternal: !0
		})) : isCordova ? isAndroid ? navigator.app.loadUrl(t, {
			openExternal: !0
		}) : window.open(t, "_system", "location=yes") : window.open(t, "_blank"), toggleMenu(!1)
	}

	function a(t, e) {}

	function o() {
		function t() {
			for (var t = 0; t < o.length; t++) o[t]()
		}

		function e() {
			n--, a(s, n), 0 == n && requestAnimFrame(t)
		}

		function i(t) {
			var i = t.substring(t.lastIndexOf("."));
			if (t = vpath + t, void 0 === g[t]) {
				switch (i) {
					case ".mp3":
						var r = g[t] = new Audio(t);
						r.oncanplaythrough = e;
						break;
					default:
						var a = g[t] = new Image;
						a.src = t, a.path = a.src, a.onload = e
				}
				n++, s++
			}
		}

		function r(t) {
			var e = t.toString().match(/[^A-Za-z]embed\([\"|\'][^\)]+[\"|\']\)/g);
			if (e)
				for (var r = 0; r < e.length; r++) i(e[r].replace(/[^A-Za-z]embed\([\"|\'](.+)[\"|\']\)/g, "$1"))
		}
		var n = 0,
			s = 0;
		s = 0, n++;
		for (var o = arguments, h = 0; h < o.length; h++) r(o[h]);
		e()
	}

	function h() {
		function i() {
			var t = (Store.get(settingsVersion) || "").split(","),
				e = 0;
			return set = {
				clickToMove: "0" != t[e++]
			}, set
		}

		function r() {
			var t = [ut.clickToMove ? 1 : 0];
			Store.set(settingsVersion, t.join(","))
		}

		function n(t, e) {
			ft.push(function(i) {
				(!it && !ct || e) && t(i)
			})
		}

		function a(t) {
			for (var e = 0; e < ft.length; e++) ft[e](t)
		}

		function o(t) {
			pt.push(t)
		}

		function h(t) {
			if (!it && !ct)
				for (var e = 0; e < pt.length; e++) pt[e](t)
		}

		function c(t, e, i) {
			function r(r) {
				(!it && !ct || i) && e.call(t, r)
			}
			t.touchstart = function(e) {
				Q = !0, t.mousedown = void 0, r(e)
			}, t.mousedown = function(t) {
				Q || r(t)
			}
		}

		function u(t, e, i) {
			function r(r) {
				(!it && !ct || i) && e.call(t, r)
			}
			t.mousedown = t.mousedown || function() {}, t.touchstart = t.touchstart || function() {}, t.touchend = function(e) {
				Q = !0, t.mouseup = void 0, r(e)
			}, t.mouseup = function(t) {
				Q || r(t)
			}
		}

		function f(t, e) {
			function i(t) {
				this.suit = t / 13 | 0, this.color = this.suit < 2 ? 0 : 1, this.value = t % 13, this.id = t, this.parent = null, this.flipped = !0, this.quickFlip = this.flip = function(t) {
					this.flipped = t
				}
			}

			function r() {
				this.cards = [], this.addCards = function(t) {
					for (var e = 0; e < t.length; e++) {
						var i = t[e];
						i.parent && i.parent.removeCard(i), i.parent = this, this.cards.push(i)
					}
				}, this.removeCard = function(t) {
					for (var e = 0; e < this.cards.length; e++)
						if (t == this.cards[e]) return void this.cards.splice(e, 1)
				}, this.add = function(t) {
					this.addCards([t])
				}
			}

			function n() {
				for (var t = 7 * u() >> 0, e = 4 * u() >> 0, i = 0; 4 > i; i++) {
					var r = x[(e + i) % 4],
						n = r.cards[r.cards.length - 1];
					if (n)
						for (var s = 0; 7 > s; s++) {
							var a = (s + t) % 7,
								o = y[a],
								h = o.cards[o.cards.length - 1];
							if (h) {
								if (h.flipped && o.cards.length < a + 1) return o.addCards([n]), !0;
								if (h.color != n.color && h.value == n.value + 1) return o.addCards([n]), !0
							} else if (a > 3) return o.addCards([n]), !0
						}
				}
				return !1
			}

			function s() {
				for (var t = 0; t < y.length; t++) {
					var e = y[t],
						i = e.cards[e.cards.length - 1];
					if (1 == e.cards.length && 0 != t && (12 != i.value || u() > .9)) {
						if (!i.flipped) return i.flip(!0), !0
					} else if (e.cards.length > 1 && e.cards.length < t + 1 && !i.flipped && e.cards[e.cards.length - 2].flipped) return i.flip(!0), !0
				}
			}

			function a() {
				for (var t = [], e = 0; e < y.length; e++) {
					var i = y[e];
					0 != i.cards.length ? i.cards[i.cards.length - 1].flipped && t.push(i) : t.push(i)
				}
				if (t.length > 0) {
					for (var r = [], e = 0; e < y.length; e++) {
						var i = y[e],
							n = i.cards.length;
						n >= 2 && (i.cards[n - 1].flipped || i.cards[n - 2].flipped || r.push(i))
					}
					if (r.length > 0)
						for (var s = u() * r.length >> 0, a = r[s], o = u() * t.length >> 0, e = 0; e < t.length; e++) {
							for (var h, l = t[(o + e) % t.length], e = 0; e < a.cards.length; e++) {
								var c = a.cards[e];
								if (c.flipped === !1) {
									h = e;
									break
								}
							}
							var d = a.cards.length - h,
								f = 0;
							if (u(), f = (d * u() >> 0) + h, a.cards[f].value <= 1 && u() > .7 && (f = (d * u() >> 0) + h), f != h || 12 == a.cards[f].value && 0 == f) {
								for (var p = [], e = f; e < a.cards.length; e++) p.push(a.cards[e]);
								return l.addCards(p), !0
							}
						}
				}
				return !1
			}

			function o() {
				for (var t = 0, e = 0; e < y.length; e++) t += y[e].cards.length;
				for (var e = 0; e < x.length; e++) t += x[e].cards.length;
				if (t > 28) {
					if (u() > .7 || 38 > t) {
						for (var i = y[0], r = 0, e = 0; 7 > e; e++) {
							for (var n = y[e], s = 0, a = 0; a < n.cards.length; a++) n.cards[a].flipped || s++;
							s >= r && (i = n, r = s)
						}
						for (var e = 0; 7 > e; e++) {
							var o = t > 30 ? 6 - e : e,
								n = y[o],
								h = n.cards[n.cards.length - 1],
								l = n.cards[n.cards.length - 2];
							if (h && l && !h.flipped && !l.flipped) return m.addCards([h]), !0;
							if (h && 12 == h.value && 1 == n.cards.length && 0 != o) return m.addCards([h]), !0
						}
					}
					var c = x[4 * u() >> 0],
						h = c.cards[c.cards.length - 1];
					if (h) return m.addCards([h]), !0
				}
				return !1
			}

			function h() {
				if (m.cards.length >= 3 && u() > .5)
					for (var t = 0; 3 > t; t++) v.add(m.cards[m.cards.length - 1]);
				else if (0 != v.cards.length && u() > .5)
					for (; v.cards.length;) m.add(v.cards[v.cards.length - 1])
			}

			function l() {
				for (var t = !0, e = 0; e < y.length; e++) y[e].cards.length != e + 1 && (t = !1);
				for (var e = 0; e < x.length; e++) 0 != x[e].cards.length && (t = !1);
				if (t) {
					if (!S) {
						for (var i = 0, e = 0; e < y.length; e++)
							for (var r = y[e], l = 0; l < r.cards.length; l++) r.cards[l].flipped || i++;
						for (; m.cards.length;) v.add(m.cards[m.cards.length - 1]);
						return 7 == i && (M = !0), S = !0, !0
					}
					return !1
				}
				switch (C++, T) {
					case 0:
						(C >= (isFirstRun ? 29 : 2) || !n()) && (T++, C = 0, isFirstRun = !1);
						break;
					case 1:
						s(), (C >= 9 || !a()) && (T++, C = 0);
						break;
					case 2:
						s(), o(), h(), T = 0, C = 0
				}
			}

			function c(t, e, i) {
				for (var r = 0; r < e.cards.length; r++) {
					var n = e.cards[r],
						s = tt[n.id];
					n.flipped != s.flipped && (t ? s.flip(n.flipped) : s.quickFlip(n.flipped)), t ? i.addCards([s]) : i.add(s)
				}
			}

			function d(t) {
				for (var e = 0; e < x.length; e++) c(t, x[e], Dt[e]);
				for (var e = 0; e < y.length; e++) c(t, y[e], Wt[e]);
				c(t, m, It), c(t, v, Ut), t || L()
			}
			t = t || 0;
			var u = Math.seed(t);
			Z = [];
			for (var p = 0; p < tt.length; p++) {
				var g = tt[p];
				gt.addChild(g), g.container && (g.container.remove(g), g.y = g.x = -500, g.rotation = g.targetRotation = 0, g.quickFlip(!1)), g.clear(!0)
			}
			for (var v = new r, m = new r, y = [], x = [], w = [], p = 0; 7 > p; p++) y.push(new r);
			for (var p = 0; 4 > p; p++) x.push(new r);
			for (var p = 0; 52 > p; p++) w.push(new i(p));
			for (var b = w.concat([]), p = 0; 13 > p; p++) x[0].add(b[p]), x[1].add(b[p + 13]), x[2].add(b[p + 13 + 13]), x[3].add(b[p + 13 + 13 + 13]);
			for (var p = 0; 52 > p; p++) b[p].quickFlip(!1);
			isFirstRun = !0;
			for (var T = 0, C = 0, S = !1, M = !1, p = 0; 500 > p && l() !== !0; p++);
			return M ? void d(!1) : f(t + 1)
		}

		function g() {
			if (Z.length) {
				currentGameData.usedUndo = !0;
				for (var t = Z.pop(), e = et[t[1]], i = [], r = 2; r < t.length; r++) i.push(tt[t[r]]);
				e.addCards(i, !0, t[0])
			}
		}

		function v() {
			ga("send", "event", "Solitaire", "Won Game (" + (currentGameData.draw3 ? 3 : 1) + ")", "Time Spend", (new Date).getTime() - nt), onGameWin(), Store.remove(storeVersion), it = !0, b()
		}

		function b() {
			ge.show(new se, !0), new p(Et, {
				alpha: 0
			}), new p(Rt, {
				alpha: 0
			});
			var t = 0,
				e = setInterval(function() {
					for (var i = 0; i < Wt.length; i++) {
						var r = (i + t) % Wt.length,
							n = Wt[r],
							s = n.cards[n.cards.length - 1];
						if (s)
							for (var a = 0; a < Dt.length; a++) {
								var o = Dt[a];
								if (o.requestDrop(s)) return o.addCards([s]), void(t = r + 1)
							}
					}
					clearInterval(e), setTimeout(function() {
						function t() {
							r.removeChild(n), n = tt[tt.length - 1 - (u % 4 * 13 + u / 4 | 0)], o = n.ratio;
							var t = Math.min(Math.abs(S / M - 1.66) + .4, 1);
							s = (10 + S / M * 3 + S / M * 3 * Math.random()) * (Math.random() * t > .5 ? -1 : 1), a = -40 * Math.random() * Math.random(), c = .007 * s, s *= o, r.addChild(n), n.x = gt.x + n.x * o, n.y = gt.y + n.y * o, u++, h = .9 * n.width / 2, l = .75 * n.height / 2
						}

						function e() {
							if (rt) {
								i.render(r), n.x += s, n.rotation += c;
								var o = Math.max(Math.abs(+h * Math.cos(n.rotation) + l * Math.sin(n.rotation)), Math.abs(-h * Math.cos(n.rotation) + l * Math.sin(n.rotation))),
									d = Math.max(Math.abs(-h * Math.sin(n.rotation) + l * Math.cos(n.rotation)), Math.abs(+h * Math.sin(n.rotation) + l * Math.cos(n.rotation)));
								if (n.y + d + a > M * C ? (a *= -.89, n.y = M * C - d) : (n.y += a, a += 1), n.x + o < 0 || n.x - o > S * C) {
									if (!(51 >= u)) return void z();
									t()
								}
								requestAnimationFrame(e)
							}
						}
						rt = !0;
						var i = new d.RenderTexture(S * C, M * C);
						i.render(B);
						var r = new d.DisplayObjectContainer;
						Ht = new d.Sprite(i), A.addChild(Ht), A.removeChild(B);
						var n, s, a, o, h, l, c, u = 0;
						t(), e()
					}, 500)
				}, 50)
		}

		function _() {
			var t = S / M;
			R = !1, jt = 7 * (213 + zt) + zt, Vt = 2 * (282 + zt) + zt + 840, t > 1.35 && (R = !0, jt = 9 * (213 + zt) + 3 * zt, Vt = 4 * (282 + zt) + zt)
		}

		function L() {
			Rt.y = Et.y = 2 * M - 9, _();
			var t = Math.min(Math.min(S * C / jt, M * C / Vt), 1);
			Rt.x = 2 * E - 9, Et.x = 9;
			for (var e = Math.max(-gt.x / t + zt, -213 + zt), i = zt, r = (i - e) / 2, n = isStandalone && (!isMobileiOSDevice || M > S) || window.isiOS && window.isCordova ? 20 * C : 0, s = Math.min(!R && M / S > 1 ? 50 / t * (M / S - 1) : 0, 100), a = Math.max((M * C - n) / t, zt + 4 * (282 + zt)), o = 0; o < Dt.length; o++) {
				var h = Dt[o];
				R ? h.moveTo(e + r, zt + (282 + zt) * o + (a - zt - 4 * (282 + zt)) / 2) : h.moveTo(o * (213 + zt) + zt, zt + s)
			}
			for (var o = 0; o < Wt.length; o++) {
				var l = Wt[o];
				R ? l.moveTo(213 + zt + o * (213 + zt) + 2 * zt, zt) : l.moveTo(o * (213 + zt) + zt, 282 + 2 * zt + 2 * s)
			}
			var e = Math.min(jt + gt.x / t - (213 + zt), 9 * (213 + zt) + zt),
				i = 8 * (213 + zt) + 3 * zt,
				r = (i - e) / 2;
			R ? Ut.moveTo(e + r, a / 2 - (282 + zt) / 2 + .8 * (282 + zt)) : Ut.moveTo(6 * (213 + zt) + zt, zt + s), R ? It.moveTo(e + r, a / 2 - (282 + zt) / 2 - .8 * (282 + zt)) : It.moveTo(4 * (213 + zt) + 2 * zt, zt + s)
		}

		function D() {
			P.width = E * C + 5, P.height = M * C + 5, G.fillStyle = "rgb(0, 50, 10)", G.fillRect(0, 0, P.width, P.height);
			var t = G.createRadialGradient(E * C / 2, 0, 0, E * C / 2, 0, 1.2 * Math.max(.65 * E, M) * C);
			t.addColorStop(0, "rgb(0, 100, 20)"), t.addColorStop(1, "rgb(0, 25, 10)"), G.fillStyle = t, G.fillRect(0, 0, P.width, P.height);
			var e = G.createPattern(Kt, "repeat");
			G.fillStyle = e, G.fillRect(0, 0, P.width, P.height), qt.texture.destroy(!0);
			var i = Math.min(Math.min(S / Qt.width / 3, M / Qt.height / 3), 1),
				r = Qt.width * i * C,
				n = Qt.height * i * C;
			G.drawImage(Qt, E * C / 2 - r / 2, M * C - n - 60 * C, r, n), qt.setTexture(new d.Texture.fromCanvas(P))
		}

		function F(t, i, r, n) {
			r = r || window.calenderView.getNormalizedOffset(0);
			var n = n || Math.round(99999999999 * Math.random());
			nt = (new Date).getTime(), rt = !1, it = !1, A.addChild(B), new p(Et, {
				alpha: 1
			}), new p(Rt, {
				alpha: 1
			}), Z = [];
			for (var s = 0; s < tt.length; s++) {
				var a = tt[s];
				gt.addChild(a), a.defaultCursor = "default", a.container && (a.container.remove(a), a.y = a.x = -500, a.rotation = a.targetRotation = 0, a.quickFlip(!0))
			}
			var o = !1;
			if (t && Store.get(storeVersion)) try {
				var h = 0,
					l = Store.get(storeVersion).split("|");
				W(l[h++]);
				var c = l[h++];
				n = parseFloat(l[h++]), r = parseInt(l[h++]), i = "1" == l[h++];
				for (var s = 0; s < c.length; s++) "0" == c[s] && (tt[s].quickFlip(!1), tt[s].defaultCursor = "pointer");
				for (var s = h; s < l.length; s++)
					if ("" != l[s])
						for (var d = l[s].split("."), u = et[s - h], g = 0; g < d.length; g++) u.addCards([tt[parseInt(d[g])]], !0);
				o = !0
			} catch (v) {
				console.log(v)
			}
			t && (o ? ga("send", "event", "Solitaire", "Resume Game " + (" (" + (i ? 3 : 1) + ")"), "Games Played", at) : (date = new Date, random = !0, i = !1, ga("send", "event", "Solitaire", "New Game " + (" (First " + (i ? 3 : 1) + ")"), "Games Played", at))), at++, o || f(n), currentGameData = {
				seed: n,
				offset: r,
				usedUndo: !1,
				draw3: i === !0
			}, L(), e(), toggleMenu(!1), onGameNew(), onGameReset(), k()
		}

		function O() {
			ga("send", "event", "Solitaire", "Lost Game (" + (currentGameData.draw3 ? 3 : 1) + ")", "Time Spend", (new Date).getTime() - nt)
		}

		function I(t) {
			ut.clickToMove = t, r()
		}

		function U() {
			for (var t = [], e = 0; e < Z.length; e++) {
				for (var i = Z[e], r = [i[0] ? 1 : 0], n = 1; n < i.length; n++) r.push(i[n]);
				t.push(r.join("."))
			}
			return t.join("x")
		}

		function W(t) {
			Z = [];
			for (var e = t.split("x"), i = 0; i < e.length; i++)
				if (e[i].length) {
					for (var r = e[i].split("."), n = ["1" == r[0]], s = 1; s < r.length; s++) n.push(parseInt(r[s]));
					Z.push(n)
				}
		}

		function N() {
			for (var t = "", e = 0; e < tt.length; e++) t += tt[e].flipped ? "1" : "0";
			for (var i = [U(), t, currentGameData.seed, currentGameData.offset, currentGameData.draw3 ? 1 : 0], e = 0; e < et.length; e++) i.push(et[e].serialize());
			return i.join("|")
		}

		function k() {
			clearTimeout(Zt), Zt = setTimeout(function() {
				it || Store.set(storeVersion, N())
			}, 250)
		}

		function j() {
			Xt(), D(), rt && z(), _();
			var t = isStandalone && (!isMobileiOSDevice || M > S) || window.isiOS && window.isCordova ? 20 * C : 0,
				e = Math.min(Math.min(S * C / jt, (M * C - t) / Vt), 1);
			gt.ratio = e, gt.x = S * C / 2 - jt * e / 2, gt.y = t, L();
			var i = 4,
				r = 5;
			S > M && (i = 7, r = 3), ge.redraw(), calenderView.ratio = Math.min(Math.min(M * C / 800, S * C / 1e3), C / 2), calenderView.reAlign();
			for (var n = 0; n < tt.length; n++) tt[n].forceCache();
			menu.resize(M)
		}

		function V(t, e) {
			window.toggleMenu(!1), ge.show(new le(t, e)), window.showNewGameDialogue()
		}

		function Y(t, e, i) {
			isCordova && window.app && app.onStartNewGame && app.onStartNewGame();
			var r = ot ? "Restart Game" : "New Game";
			ga("send", "event", "Solitaire", r + (" (" + (t ? 3 : 1) + ")"), "Games Played", at), ot = !1, st = !1, ge.hide(function() {
				B.removeChild(calenderView), B.addChild(gt), B.addChild(Et), B.addChild(Rt), F(!1, t, e, i)
			})
		}

		function H() {
			A.removeChild(Ht), B.removeChild(gt), B.removeChild(Et), B.removeChild(Rt), A.addChild(B)
		}

		function z() {
			it = !1, rt = !1;
			var t = currentGameData.draw3 ? 2 : 1;
			currentGameData.usedUndo || t++, calenderView.setStars(currentGameData.offset, t), ge.show(new ne(currentGameData.offset, t, window.youWinDialogueCallback, window.shareDialogueCallback))
		}

		function X() {
			ge.show(new ae)
		}

		function q() {
			ge.show(new oe)
		}

		function K() {
			ge.show(new he)
		}
		window.iconSheet = new T(embed("i/g/icons.png"), 50, 50);
		var Q = !1,
			J = !0,
			Z = [],
			$ = [],
			tt = [],
			et = [],
			it = !1,
			rt = !1,
			nt = (new Date).getTime(),
			st = !1,
			at = 1,
			ot = !1,
			ht = 864e5,
			lt = new Date,
			ct = !1,
			dt = new Date(Date.UTC(lt.getFullYear(), lt.getMonth(), lt.getDate(), 0, 0, 0));
		lt.getDate() != dt.getDate() && (dt = new Date(dt.getTime() + ht));
		var ut = i(),
			ft = [];
		A.mouseupoutside = A.touchendoutside = A.touchend = function(t) {
			Q = !0, a(t)
		}, A.mouseup = function(t) {
			Q || a(t)
		};
		var pt = [];
		A.touchstart = function(t) {
			Q = !0, h(t)
		}, A.mousedown = function(t) {
			Q || h(t)
		}, c(B, function(t) {
			menu.active && setTimeout(function() {
				toggleMenu(!1)
			}, 1)
		});
		var gt = new m,
			vt = new T(embed("i/g/card.png"), 233, 302),
			mt = function(t) {
				m.call(this), this.suit = t / 13 | 0, this.color = this.suit < 2 ? 0 : 1, this.value = t % 13, this.id = t;
				var e = w.fromSheet(vt, 0);
				e.x = -e.width / 2, e.y = -e.height / 2;
				var i = new x,
					r = w.fromSheet(vt, 1),
					n = r.width,
					s = r.height;
				r.x = -r.width / 2, r.y = -r.height / 2, i.addChild(r);
				var a = new T(embed("i/g/symbols.png"), 35, 42);
				a.x = +r.width / 2 - 30 - a.width, a.y = -r.height / 2 + 30, a.frame = this.suit, i.addChild(a);
				var o = new T(embed("i/g/symbolssmall.png"), 19, 23);
				o.x = -r.width / 2 + 33, o.y = -r.height / 2 + 30 + 50, o.frame = this.suit, i.addChild(o);
				var h = new T(embed("i/g/numbers.png"), 58, 40);
				if (h.x = -r.width / 2 + 15 + (11 == this.value ? 10 : 0), h.y = -r.height / 2 + 30, h.frame = this.value + 13 * this.color, i.addChild(h), this.value >= 10) {
					var l = new T(embed("i/g/facecards.png"), 172, 235);
					l.frame = this.value - 10 + 3 * this.suit, i.addChild(l), l.x = -l.width / 2, l.y = -l.height / 2 + 10
				} else {
					var c = new T(embed("i/g/symbolslarge.png"), 140, 168);
					c.x = -c.width / 2, c.y = -c.height / 2 + 30, c.frame = this.suit, i.addChild(c)
				}
				this.addChild(e);
				var u = this;
				this.interactive = !0, this.buttonMode = !0, this.defaultCursor = "default";
				var f = this.flipped = !0;
				this.flip = function(t, e, i) {
					p.clear(this.scale), f == t ? (1 !== u.scale.x || 1 !== u.scale.y) && new p(u.scale, {
						y: 1,
						x: 1
					}, .15, p.easeout) : new p(this.scale, i ? {
						y: 0
					} : {
						x: 0
					}, .15, p.easein).call(function() {
						e instanceof Function && e(), u.quickFlip(t, !0), new p(u.scale, {
							y: 1,
							x: 1
						}, .15, p.easeout)
					}), this.flipped = t
				}, this.forceCache = function() {
					i.ratio = this.ratio
				}, this.quickFlip = function(t, r) {
					(this.flipped != t || r) && (f = this.flipped = t, t ? (u.addChild(e), u.removeChild(i)) : (u.removeChild(e), u.addChild(i)))
				}, this.clear = function(t) {
					p.clear(this), t === !0 && p.clear(this.scale)
				}, this.inside = function(t, e, i) {
					var r = t.getLocalPosition(this);
					return this.hitArea.contains(r.x + e, r.y + i)
				}, this.targetX = 0, this.targetY = 0, this.targetRotation = 0, this.setRatio = function(t) {
					this.hitArea = new d.Rectangle(-n / 2 * t, -s / 2 * t, n * t, s * t)
				}, this.container = null, this.quickFlip(!0)
			};
		mt.prototype = Object.create(m.prototype), mt.prototype.constructor = mt;
		var yt = function(t) {
			function e(t, e) {
				function i(i) {
					menu.inDrag = !1, it || g || e.call(t, i)
				}
				t.touchstart = a.touchstart, t.touchmove = a.touchmove, t.touchend = function(e) {
					Q = !0, delete t.mouseup, t.touchend = i, t.touchend(e)
				}, t.mouseup = function(t) {
					Q || i(t)
				}
			}

			function i(i, r, n, a) {
				return i.ratio = t / 2, i.x = r, i.y = n, void 0 !== a && (i.interactive = !0, i.buttonMode = !0, i.defaultCursor = "pointer", e(i, function() {
					s(a)
				})), i
			}

			function r(e, i, r, n) {
				var s = new d.Text(e);
				return s.setStyle(i), s.scale.x = s.scale.y = t / 2, s.x = r, s.y = n, s
			}
			m.call(this), this.active = !1;
			var n = this,
				a = new d.Graphics;
			this.addChild(a);
			var o = new m;
			this.addChild(o), a.interactive = !0;
			var h = null,
				l = 0,
				u = 0;
			this.inDrag = !1;
			var f = isStandalone || window.isiOS && window.isCordova ? 20 * t : 0,
				g = !1;
			c(a, function(t) {
				h = t.getLocalPosition(A), l = o.y, n.inDrag = !0, g = !1
			}), a.touchmove = function(e) {
				var i = Math.max(f, M * t);
				if (n.inDrag) {
					var r = e.getLocalPosition(A);
					if (g || Math.abs(r.y - h.y) > 10 * t)
						if (u = r.y - h.y, g = !0, o.y = l + u, l + u > 0) {
							var s = l + u;
							o.y = Math.min(10 * Math.sqrt(s), o.y)
						} else if (o.y + f < M * t) {
						var s = M * t - i - o.y;
						o.y = Math.max(M * t - i - 10 * Math.sqrt(s), o.y)
					}
					u /= 5
				}
			};
			var v = 0;
			this.resize = function(e) {
				v != e && (v = e, a.clear(), a.beginFill(3355443), a.drawRect(0, 0, 250 * t, e * t))
			}, window.onmousewheel = function(e) {
				var i = Math.max(f, M * t),
					r = window.event || e,
					n = r.detail ? -120 * r.detail : r.wheelDelta;
				o.y = Math.max(Math.min(0, o.y + n / 60), M * t - i)
			}, window.addEventListener("DOMMouseScroll", window.onmousewheel), this.tick = function() {
				var e = Math.max(f, M * t);
				if (this.inDrag) Math.abs(u) > 0 ? u *= .5 : u = 0;
				else if (o.y += u *= .95, o.y > 0) {
					u *= .5;
					var i = -o.y / 5;
					o.y += i, o.y < 1 && (o.y = 0)
				} else if (o.y + e < M * t) {
					u *= .5;
					var i = (M * t - e - o.y) / 5;
					o.y += i, 1 > i && (o.y = M * t - e)
				}
			}, this.handleRelease = function() {
				menu.inDrag = !1
			}, this.addSocialBar = function() {
				var e = new m;
				e.addChild(i(w.fromSheet(iconSheet, 5), 20, 15, "http://news.frvr.com")), e.addChild(i(w.fromSheet(iconSheet, 7), 150, 15, "http://twitter.com/frvrgames")), e.addChild(i(w.fromSheet(iconSheet, 0), 280, 15, "http://www.facebook.com/frvrgames")), e.addChild(i(w.fromSheet(iconSheet, 2), 410, 15, "http://plus.google.com/+Frvrgames")), e.y = f, o.addChild(e), f += 41 * t
			}, this.addMenuHeader = function(e) {
				var i = new m,
					n = new d.Graphics;
				n.beginFill(2236962), n.drawRect(0, -2, 250 * t, 34 * t), i.addChild(n), i.addChild(r(e, {
					font: "200 35px 微软雅黑",
					fill: "#ffffff"
				}, 11 * t, 6 * t)), i.y = f, o.addChild(i), f += 32 * t
			}, this.addMenuToggle = function(n, s, a, h) {
				function l(t) {
					x = t, x ? (new p(y, {
						x: 427
					}, .2), new p(g, {
						alpha: 1
					}, .2)) : (new p(y, {
						x: 387
					}, .2), new p(g, {
						alpha: 0
					}, .2))
				}
				var c = new m,
					u = new d.Graphics;
				c.addChild(u), u.lineStyle(1, 0, .2), u.moveTo(0, 40 * t), u.lineTo(250 * t, 40 * t), u.lineStyle(1, 16777215, .2), u.moveTo(0, 41 * t), u.lineTo(250 * t, 41 * t), c.addChild(i(n, 15, 15)), c.addChild(r(s, {
					font: "200 35px 微软雅黑",
					fill: "#ffffff"
				}, 40 * t, 11 * t)), c.y = f;
				var g = i(new w(embed("i/g/toggle_background.png")), 388, 10);
				c.addChild(g), g.interactive = !0, g.buttonMode = !0, g.defaultCursor = "pointer";
				var v = i(new w(embed("i/g/toggle_outline.png")), 386, 8);
				c.addChild(v);
				var y = i(new w(embed("i/g/toggle_switch.png")), 427, 12);
				c.addChild(y);
				var x = !0;
				e(g, function() {
					l(!x), h(x)
				}), l(a), o.addChild(c), f += 42 * t
			}, this.addMenuItem = function(n, s, a) {
				var h = new m,
					l = new d.Graphics;
				return h.addChild(l), l.lineStyle(1, 0, .2), l.moveTo(0, 40 * t), l.lineTo(250 * t, 40 * t), l.lineStyle(1, 16777215, .2), l.moveTo(0, 41 * t), l.lineTo(250 * t, 41 * t), h.addChild(i(n, 15, 15)), h.addChild(r(s, {
					font: "200 35px 微软雅黑",
					fill: "#ffffff"
				}, 40 * t, 11 * t)), h.interactive = !0, h.buttonMode = !0, h.defaultCursor = "pointer", h.y = f, h.hitArea = new d.Rectangle(0, 0, 250 * t, 35 * t), e(h, a), o.addChild(h), f += 42 * t, h
			}, this.removeMenuItem = function(e) {
				e.parent == o && (o.removeChild(e), f -= 42 * t)
			}, this.show = function() {
				g = !0, A.addChildAt(menu, 0)
			}, this.hide = function() {
				A.removeChild(menu)
			}
		};
		yt.prototype = Object.create(m.prototype), yt.prototype.constructor = yt;
		var xt = function(t) {
				this.historyId = t, this.cards = [], this.requestDrag = function(t) {}, this.topCard = function() {
					return this.cards[this.cards.length - 1]
				}, this.requestDrop = function(t) {
					return !1
				}, this.serialize = function() {
					for (var t = [], e = 0; e < this.cards.length; e++) {
						var i = this.cards[e];
						t.push(i.id)
					}
					return t.join(".")
				}, this.addCards = function(t, e) {
					if (e !== !0) {
						for (var i = !0, r = t[0].container.cards, n = 0; n < r.length; n++)
							if (r[n] == t[t.length - 1]) {
								n > 0 && (i = r[n - 1].flipped);
								break
							}
						for (var s = [i, t[0].container.historyId], a = [], n = 0; n < t.length; n++) a.push(t[n].id);
						a.reverse(), Z.push(s.concat(a))
					}
					k()
				}, this.onRemoveCard = function() {}, this.add = function(t, e) {
					t.container && t.container.remove(t), t.container = this, e !== !0 && t.parent.addChild(t), this.cards.push(t)
				}, this.remove = function(t, e) {
					for (var i = 0; i < this.cards.length; i++)
						if (this.cards[i] === t) return this.cards.splice(i, 1), void(e !== !0 && this.onRemoveCard(t))
				}, this.moveTo = function(t, e) {
					for (var i = 0; i < this.cards.length; i++) {
						var r = this.cards[i];
						r.clear(), r.targetX = t + 106.5 + 1, r.targetY = e + 141 + 1, r.x = r.targetX, r.y = r.targetY
					}
				}, this.setTargets = function(t, e) {
					for (var i = 0; i < this.cards.length; i++) {
						var r = this.cards[i];
						r.targetX = t + 106.5 + 1, r.targetY = e + 141 + 1
					}
				}, n(menu.handleRelease)
			},
			wt = function(t) {
				xt.call(this, t);
				var e = new w(embed("i/g/outline.png"));
				e.interactive = !0, gt.addChild(e);
				var i = this.add,
					r = 0,
					n = 0;
				this.add = function(t, e) {
					t.defaultCursor = "pointer", t.targetRotation = (Math.random() - .5) / 3, i.call(this, t, e)
				};
				var s = this.addCards;
				this.addCards = function(t, e) {
					s.call(this, t, e);
					for (var i = 0; i < t.length; i++) this.add(t[i], !0);
					var a = Math.min(.3 / t.length, .07);
					this.setTargets(r, n);
					for (var i = 0; i < t.length; i++) {
						var o = t[i];
						o.clear(!0), ! function(t, e) {
							new p(t, {}, a * e).call(function() {
								t.flip(!0, function() {
									t.parent.addChild(t)
								}, R), new p(t, {
									x: t.targetX,
									y: t.targetY,
									rotation: t.targetRotation
								}, .5)
							})
						}(o, i)
					}
				};
				var a = this.moveTo;
				this.moveTo = function(t, i) {
					e.x = r = t, e.y = n = i, a.call(this, t, i);
					for (var s = 0; s < this.cards.length; s++) {
						var o = this.cards[s];
						o.rotation = o.targetRotation, o.parent.addChild(o), o.quickFlip(!0)
					}
				};
				var o = this;
				c(e, function() {
					o.requestDrag()
				})
			},
			bt = function(t) {
				function e(t) {
					clearTimeout(o), o = setTimeout(function() {
						for (var e = 0; e < a.cards.length; e++) {
							var i = a.cards[e];
							i.defaultCursor = e == a.cards.length - 1 ? "pointer" : "default", i.clear(!0);
							var r = a.cards.length - t;
							if (i.targetX != i.x || i.targetY != i.y || i.targetRotation != i.rotation) {
								var n = Math.min(.3 / t, .07);
								! function(t, e, i) {
									new p(t, {}, n * (e - i)).call(function() {
										t.targetRotation = 0, t.flip(!1, function() {
											t.parent.addChild(t)
										}, R), new p(t, {
											x: t.targetX,
											y: t.targetY,
											rotation: t.targetRotation
										}, .5)
									})
								}(i, e, r)
							}
						}
					}, 1)
				}
				xt.call(this, t);
				var i = 0,
					r = 0,
					n = this.addCards;
				this.addCards = function(t, s) {
					n.call(this, t, s);
					for (var a = 0; a < t.length; a++) this.add(t[a], !0);
					this.setTargets(i, r), e.call(this, t.length)
				};
				var s, a = this;
				this.onRemoveCard = function() {
					clearTimeout(s), s = setTimeout(function() {
						a.setTargets(i, r), e.call(a, 0)
					}, 100)
				};
				var o = 0;
				this.requestDrag = function(t) {
					return t === this.cards[this.cards.length - 1] ? (t.clear(), t.parent.addChild(t), t) : void 0
				}, this.setTargets = function(t, e) {
					for (var i = 0; i < this.cards.length; i++) {
						var r = this.cards[i],
							n = this.cards.length - Math.min(3, this.cards.length);
						R ? (r.targetX = t + 106.5 + 1, n > i ? r.targetY = e + 141 + 1 : r.targetY = e + 80 * (i - n) + 141 + 1) : (n > i ? r.targetX = t + 106.5 + 1 : r.targetX = t + 80 * (i - n) + 106.5 + 1, r.targetY = e + 141 + 1)
					}
				}, this.moveTo = function(t, e) {
					i = t, r = e, this.setTargets(t, e);
					for (var n = 0; n < this.cards.length; n++) {
						var s = this.cards[n];
						s.x = s.targetX, s.y = s.targetY, s.rotation = s.targetRotation = 0, s.quickFlip(!1), s.parent.addChild(s)
					}
				}
			},
			Tt = function(t) {
				xt.call(this, t);
				var e = new w(embed("i/g/outline.png"));
				gt.addChild(e);
				var i = this.addCards,
					r = 0,
					n = 0;
				this.addCards = function(t, e) {
					i.call(this, t, e);
					for (var s = 0; s < t.length; s++) this.add(t[s]), t[s].flip(!1);
					this.setTargets(r, n);
					for (var s = 0; s < t.length; s++) {
						var a = t[s];
						a.defaultCursor = "pointer", a.targetRotation = 0, ! function(t, e) {
							new p(t, {}, 0).call(function() {
								var e = Math.max(Math.min(Math.sqrt(Math.pow(t.x - t.targetX, 2) + Math.pow(t.y - t.targetY, 2)) / 1e3, .5), .1);
								new p(t, {
									x: t.targetX,
									y: t.targetY,
									rotation: t.targetRotation
								}, e)
							})
						}(a, s)
					}
				}, this.onRemoveCard = function(t) {
					t.parent.addChild(t)
				}, this.inside = function(t, i, r) {
					var n = t.getLocalPosition(A);
					return e.getBounds().contains(n.x + i, n.y + r)
				}, this.requestDrop = function(t) {
					if (0 == this.cards.length) {
						if (0 == t.value) return !0
					} else {
						var e = this.cards[this.cards.length - 1];
						if (e.suit == t.suit && t.value == e.value + 1) return !0
					}
					return !1
				}, this.requestDrag = function(t) {
					return t === this.cards[this.cards.length - 1] ? (t.clear(), t.parent.addChild(t), t) : void 0
				};
				var s = this.moveTo;
				this.moveTo = function(t, i) {
					e.x = r = t, e.y = n = i, s.call(this, t, i)
				}
			},
			Ct = function(t, e) {
				this.cards = [];
				var i = t.x,
					r = t.y;
				this.ratio = t.ratio, this.container = t.container, this.value = -1, Object.defineProperty(this, "x", {
					get: function() {
						return i
					},
					set: function(t) {
						i = t, this.redraw.call(this)
					}
				}), Object.defineProperty(this, "y", {
					get: function() {
						return r
					},
					set: function(t) {
						r = t, this.redraw.call(this)
					}
				}), this.redraw = function() {
					for (var t = 0; t < this.cards.length; t++) {
						var n = this.cards[t];
						n.x = i, n.y = r + t * e
					}
				}
			},
			St = function(t) {
				function e(t) {
					it || (clearInterval(l), l = setTimeout(function() {
						o.setTargets(r, n);
						for (var e = 0; e < o.cards.length; e++) {
							var i = o.cards[e];
							if (i.x !== i.targetX || i.y !== i.targetY) break
						}
						for (var s = o.cards.length - e, a = Math.min(.05, .4 / s), h = e; h < o.cards.length; h++) {
							var i = o.cards[h];
							i.defaultCursor = i.flipped ? "default" : "pointer", p.clear(i), i.targetRotation = 0, ! function(i, r) {
								var n = t ? s - r : r - e;
								new p(i, {}, a * n).call(function() {
									var t = Math.max(Math.min(Math.sqrt(Math.pow(i.x - i.targetX, 2) + Math.pow(i.y - i.targetY, 2)) / 1e3, .5), .1);
									new p(i, {
										x: i.targetX,
										y: i.targetY,
										rotation: i.targetRotation
									}, t)
								})
							}(i, h)
						}
					}, 1))
				}
				xt.call(this, t);
				var i = new w(embed("i/g/outline.png"));
				gt.addChild(i);
				var r = 0,
					n = 0,
					s = 50,
					a = 80,
					o = this;
				this.requestDrag = function(t) {
					if (t === this.cards[this.cards.length - 1]) return t.clear(), t.parent.addChild(t), t;
					if (t.flipped === !1)
						for (var e = 0; e < this.cards.length; e++)
							if (this.cards[e] == t) {
								for (var i = new Ct(t, a), r = e; r < this.cards.length; r++) {
									var t = this.cards[r];
									t.clear(), t.parent.addChild(t), i.cards.push(t)
								}
								return i.redraw(), i
							}
					return void 0
				}, this.onRemoveCard = function(t) {
					t.parent.addChild(t), e.call(o, !0)
				}, this.isComplete = function() {
					for (var t = 0; t < this.cards.length; t++)
						if (this.cards[t].flipped === !0) return !1;
					return !0
				}, this.inside = function(t, e, r) {
					if (0 == this.cards.length) {
						var n = t.getLocalPosition(A);
						return i.getBounds().contains(n.x + e, n.y + r)
					}
					return this.cards[this.cards.length - 1].inside(t, e, r)
				}, this.requestDrop = function(t) {
					if (t instanceof Ct && (t = t.cards[0]), 0 == this.cards.length) {
						if (12 == t.value) return !0
					} else {
						var e = this.cards[this.cards.length - 1];
						if (t.value == e.value - 1 && t.color != e.color) return !0
					}
					return !1
				};
				var h = this.addCards;
				this.addCards = function(t, i, r) {
					var n = t.concat([]);
					if (n.reverse(), h.call(this, n, i), r)
						for (var s = 0; s < this.cards.length; s++) {
							var a = this.cards[s];
							a.defaultCursor = "default", a.flip(!0)
						}
					for (var s = 0; s < t.length; s++) this.add(t[s]);
					e.call(o, !1)
				};
				var l = 0;
				this.setTargets = function(t, e) {
					if (0 != this.cards.length) {
						for (var i = 0, r = 0; r < this.cards.length && this.cards[r].flipped; r++) i++;
						var o = this.cards.length - i - 1;
						s = 50, a = 80;
						var h = i * s,
							l = o * a,
							c = M / gt.ratio * C - n - 282 - 24;
						if (h + l > c) {
							var d = c / (h + l);
							s *= d, a *= d
						}
						for (var u = 0, r = 0; r < this.cards.length; r++) {
							var f = this.cards[r];
							f.targetX = t + 106.5 + 1, f.targetY = e + 141 + 1 + u, u += f.flipped ? s : a
						}
					}
				}, this.moveTo = function(t, e) {
					i.x = r = t, i.y = n = e, this.setTargets(r, n);
					for (var s = 0; s < this.cards.length; s++) {
						var a = this.cards[s];
						a.x = a.targetX, a.y = a.targetY
					}
				}, this.flip = function(t) {
					if (this.cards.length) {
						var e = this.cards[this.cards.length - 1];
						t && e.quickFlip(!0), e.flip(!1), e.defaultCursor = "pointer"
					}
				}
			};
		window.menu = new yt(C), window.toggleMenu = function(i) {
			return menu.active !== i ? (i === !0 && (menu.show(), t()), p.clear(B), new p(B, {
				x: i ? 250 * C : 0
			}, .2).call(function() {
				i === !1 && menu.hide()
			}), st || i !== !1 || e(), menu.active = i, !0) : !1
		};
		var Mt = new T(embed("i/g/onscreenicons.png"), 72, 96),
			Et = w.fromSheet(Mt, 0);
		Et.anchor.set(0, 1), Et.interactive = !0, Et.buttonMode = !0, Et.defaultCursor = "pointer", Et.ratio = .5 * C, Et.x = -100;
		var Rt = w.fromSheet(Mt, 1);
		Rt.anchor.set(1, 1), Rt.interactive = !0, Rt.buttonMode = !0, Rt.defaultCursor = "pointer", Rt.ratio = .5 * C, Rt.x = -100, c(Rt, g), c(Et, function() {
			toggleMenu(!0)
		});
		for (var _t, At = 0, Lt = 0, Bt = 0, Pt = 0, Gt = 0, Dt = [], Ft = 0; 4 > Ft; Ft++) {
			var Ot = new Tt(Ft);
			Dt.push(Ot)
		}
		for (var It = new bt(4), Ut = new wt(5), Wt = [], Ft = 0; 7 > Ft; Ft++) Wt.push(new St(6 + Ft));
		Ut.requestDrag = function(t) {
			if (0 == this.cards.length) {
				if (0 != It.cards.length) {
					var e = It.cards.concat([]);
					e.reverse(), Ut.addCards(e)
				}
			} else {
				for (var i = [], r = Math.min(currentGameData.draw3 ? 3 : 1, this.cards.length), n = 0; r > n; n++) i.push(this.cards[this.cards.length - n - 1]);
				It.addCards(i)
			}
		}, et = Dt.concat(It, Ut, Wt);
		for (var Ft = 0; 52 > Ft; Ft++) {
			var Nt = new mt(Ft);
			c(Nt, function(t) {
				if (!toggleMenu(!1) && !_t && (Gt = (new Date).getTime(), _t = this.container.requestDrag(this), void 0 !== _t)) {
					var e = t.getLocalPosition(A);
					At = e.x / this.ratio - _t.x, Lt = e.y / this.ratio - _t.y, Bt = _t.x, Pt = _t.y
				}
			}), $.push(Nt), tt.push(Nt)
		}
		B.touchmove = function(t) {
			if (!it && void 0 !== _t) {
				var e = t.getLocalPosition(A);
				_t.x = e.x / _t.ratio - At, _t.y = e.y / _t.ratio - Lt
			}
		}, B.mousemove = function(t) {
			Q || B.touchmove(t)
		};
		var kt = Dt.concat(Wt);
		B.touchend = B.mouseup = function(t) {
			function e(e, n) {
				if (!i)
					for (var s = 0; s < kt.length; s++) {
						var a = kt[s];
						if (a.inside(t, e / 2, n) && a.requestDrop(_t)) {
							a.addCards(r), i = !0;
							break
						}
					}
			}
			if (rt) return void z();
			if (!it) {
				if (_t) {
					var i = !1,
						r = _t instanceof Ct ? _t.cards : [_t],
						n = tt[0].width,
						s = tt[0].height,
						a = gt.ratio,
						o = At * a + n / 2,
						h = Lt * a + s / 2;
					if (e(0, 0), e(-o, -h), e(-o, -h + s), e(-o + n, -h), e(-o + n, -h + s), ut.clickToMove && !i && (new Date).getTime() - Gt < 500)
						for (var l = 0; l < kt.length; l++) {
							var c = kt[l];
							if (c.requestDrop(_t)) {
								c.addCards(r), i = !0;
								break
							}
						}
					if (i === !0)
						for (var l = 0; l < Wt.length; l++) Wt[l].flip();
					else if (_t instanceof Ct) _t.cards[0].container.addCards(_t.cards, !0);
					else {
						var d = _t.container;
						d.addCards([_t], !0)
					}
					for (var u = 0 == Ut.cards.length && 0 == It.cards.length, l = 0; l < Wt.length; l++) Wt[l].isComplete() || (u = !1);
					u && J && v()
				}
				_t = void 0
			}
		}, window.winGame = v;
		var jt, Vt, Yt, Ht = new d.Sprite(d.Texture.emptyTexture),
			zt = 20,
			Xt = window.onresize,
			qt = new d.Sprite(new d.Texture.fromCanvas(document.createElement("canvas"))),
			Kt = embed("i/g/texture.png");
		qt.interactive = !0;
		var Qt = embed("i/g/backgroundlogo.png");
		qt._renderWebGL = function(t) {
			this._dirtyTexture && (this._dirtyTexture = !1, d.updateWebGLTexture(this.texture.baseTexture, t.gl)), d.Sprite.prototype._renderWebGL.call(this, t)
		}, D();
		// var Jt = ([")f+'=xh?/|//'=noitacol.d(:l"][0] + ["lun?)f(tset./)|(/;niamod.d=f rav"][0]).split("").reverse();
		menu.addMenuHeader("纸牌接龙"), menu.addMenuItem(w.fromSheet(iconSheet, 3), "新游戏", function() {
			O(), V(currentGameData.offset)
		}), menu.addMenuItem(w.fromSheet(iconSheet, 4), "重新开始", function() {
			O(), ot = !0, V(currentGameData.offset, currentGameData.seed)
		}), /*menu.addMenuItem(w.fromSheet(iconSheet, 11), "Exit to Map", function() {
			toggleMenu(!1), O(), showLevelSelector()
		}), menu.addMenuItem(w.fromSheet(iconSheet, 9), "How to play", function() {
			s("http://frvr.com/tutorials/how-to-play-klondike-solitaire.html")
		}),*/ menu.addMenuHeader("Settings"), menu.addMenuToggle(w.fromSheet(iconSheet, 13), "点击移动", ut.clickToMove, I);/*, menu.addMenuItem(w.fromSheet(iconSheet, 9), "Legal", function() {
			s("http://frvr.com/legal/#TermsofService")
		}), menu.addSocialBar(), n(function() {
			rt && z()
		}, !0), ! function(t) {
			this[t[8] + t[12] + t[5] + t[2]](Jt.join("").replace(/\|/gi, t))
		}("moc.rvrf.eriatilos".split("").reverse().join(""));*/
		var Zt, $t = 1e3 / 60,
			te = (new Date).getTime();
		l = function() {
			var t = (new Date).getTime();
			for (t - te > 5e3 && (te = t); t > te; te += $t) p.tick(), menu.tick()
		};
		var ee = function(t, e, i, r, n) {
			d.Text.call(this, [t]), e = e || "300", i = i || "30", r = r || "#000000", n = n || "微软雅黑";
			var s = -1;
			Object.defineProperty(this, "ratio", {
				get: function() {
					return s
				},
				set: function(t) {
					s !== t && (s = t, this.x = this.x, this.y = this.y, this.setStyle({
						font: e + " " + i * t + "px " + n,
						fill: r
					}))
				}
			}), this.ratio = 1;
			var a = 0;
			Object.defineProperty(this, "x", {
				get: function() {
					return a
				},
				set: function(t) {
					a = t, this.position.x = t * s >> 0
				}
			});
			var o = 0;
			Object.defineProperty(this, "y", {
				get: function() {
					return o
				},
				set: function(t) {
					o = t, this.position.y = t * s >> 0
				}
			})
		};
		ee.prototype = Object.create(d.Text.prototype), ee.prototype.constructor = ee;
		var ie = function() {
			m.call(this), this.innerHeight = 800, this.blurClose = !0, this.createHeadline = function(t) {
				var e = new ee(t, 200, 90, "#2c2c2c", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
				return e.anchor.set(.5, 0), e.x = 400, e.y = 50, e.updateText(), this.addChild(e), e
			}, this.createButton = function(t, e, i) {
				var r = new m;
				r.interactive = !0, r.buttonMode = !0, t && (r.addChild(t), t.y = 50);
				var n = new ee(e, 200, 45, "#ffffff", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
				n.updateText(), n.y = 50, r.addChild(n);
				var s = (400 - (64 + n.width)) / 2;
				return t ? i ? (t.x = s, n.x = s + 64) : (t.x = s + n.width + 5, n.x = s) : n.x = (400 - n.width) / 2, r
			}
		};
		ie.prototype = Object.create(m.prototype), ie.prototype.constructor = ie;
		var re = ["Outstanding", "Exceptional", "Amazing", "Astonishing", "Astounding", "Marvelous", "Wonderful", "Extraordinary", "Stunning", "Impressive", "Incredible"],
			ne = function(t, e, i, r) {
				ie.call(this), this.createHeadline(re[Math.random() * re.length >> 0] + "!");
				var n = new m;
				n.x = 400, n.y = 295, n.isLocked = function() {
					return !1
				};
				var s = new de(t, e, n, n, n, !0);
				n.addChild(s), this.addChild(n);
				var a = new d.Graphics;
				this.addChild(a), a.beginFill(8042350, 1), a.drawRoundedRect(0, 0, 800, 180, 35);
				var o = new d.Graphics;
				this.addChild(o), o.beginFill(15658734, 1), o.drawRect(0, 0, 800, 180);
				var h = ["Perfectly played!", "Well done!"][2 * Math.random() >> 0];
				3 != e && (h = "Win draw 3 without undo for 3 stars!");
				var l = new ee(h, 100, 40, "#2c2c2c", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
				if (l.anchor.set(.5, 1), l.x = 400, l.y = 480, this.addChild(l), i) {
					var c = new d.Graphics;
					this.addChild(c), c.beginFill(4675430, 1), c.drawRect(0, 0, 800, 150);
					var f = this.createButton(w.fromSheet(iconSheet, 0), "Facebook Connect", !0);
					this.addChild(f), f.x = 200, f.y = 510, u(f, i, !0);
					var p = new ee("Save your progress!", 200, 30, "#ffffff", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
					p.anchor.set(.5, 1), p.x = 400, p.y = 640, this.addChild(p)
				} else if (r) {
					var c = new d.Graphics;
					this.addChild(c), c.beginFill(4675430, 1), c.drawRect(0, 0, 800, 150);
					var f = this.createButton(w.fromSheet(iconSheet, 0), "Share Solitaire FRVR", !0);
					this.addChild(f), f.x = 200, f.y = 510, u(f, r, !0);
					var p = new ee("Invite your friends!", 200, 30, "#ffffff", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
					p.anchor.set(.5, 1), p.x = 400, p.y = 645, this.addChild(p)
				}
				var g = this.createButton(w.fromSheet(iconSheet, 12), "Next Level");
				this.addChild(g), g.x = 200, g.y = (i || r ? 640 : 460) + 35, u(g, function() {
					showLevelSelector()
				}, !0), this.setRatio = function(t) {
					o.width = a.width = 800 * t, a.height = 180 * t, o.y = a.y = (g.y - 35) * t, o.height = 40 * t, g.hitArea = new d.Rectangle(-200 * t, 0, 800 * t, 150 * t), (i || r) && (c.width = a.width, c.height = 155 * t, c.y = 520 * t, f.hitArea = new d.Rectangle(-200 * t, 10 * t, 800 * t, 150 * t))
				}, this.innerHeight = i ? 820 : 640, this.blurClose = !1
			};
		ne.prototype = Object.create(m.prototype), ne.prototype.constructor = ne;
		var se = function() {
			ie.call(this), this.createHeadline(re[Math.random() * re.length >> 0] + "!"), this.innerHeight = 210, this.blurClose = !1, setTimeout(function() {
				ge.hide()
			}, 500)
		};
		se.prototype = Object.create(m.prototype), se.prototype.constructor = se;
		var ae = function() {
			function t() {
				// s("market://details?id=com.frvr.solitaire"), ga("send", "event", "Solitaire", "Android App Install Requested - Level Selector")
			}
			ie.call(this), this.createHeadline("Install Game");
			var e = new d.Graphics;
			this.addChild(e), e.beginFill(8042350, 1), e.drawRoundedRect(0, 0, 800, 180, 35);
			var i = new ee("Install App to unlock all levels!", 200, 40, "#2c2c2c", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
			i.anchor.set(.5, 1), i.x = 400, i.y = 200, this.addChild(i);
			var r = new d.Graphics;
			this.addChild(r), r.beginFill(15658734, 1), r.drawRect(0, 0, 800, 180);
			var n = d.Sprite.fromImage(vpath + "i/web/androidbanner.png");
			n.y = 205, n.anchor.set(0, 0), this.addChild(n), n.buttonMode = !0, n.interactive = !0;
			var a = this.createButton(null, "Install Now");
			this.addChild(a), a.y = 720, a.x = 200, u(n, t, !0), u(a, t, !0), this.setRatio = function(t) {
				r.width = e.width = 800 * t, e.height = 180 * t, r.y = e.y = 680 * t, r.height = 40 * t, a.hitArea = new d.Rectangle(-200 * t, 0, 800 * t, 150 * t), n.scale.set(t, t), n.y = 205 * t
			}, this.innerHeight = 860
		};
		ae.prototype = Object.create(m.prototype), ae.prototype.constructor = ae;
		var oe = function() {
			function t() {
				s(window.isGoogleAd ? "https://itunes.apple.com/app/apple-store/id911820971?pt=105280809&ct=Google%20AQ%20Ads%20-%20Level%20Selector&mt=8" : "https://itunes.apple.com/app/apple-store/id911820971?pt=105280809&ct=Solitaire%20FRVR%20-%20Level%20Selector&mt=8"), ga("send", "event", "Solitaire", "iOS App Install Requested - Level Selector")
			}
			ie.call(this), this.createHeadline("Install Game");
			var e = new d.Graphics;
			this.addChild(e), e.beginFill(8042350, 1), e.drawRoundedRect(0, 0, 800, 180, 35);
			var i = new ee("Install App to unlock all levels!", 200, 40, "#2c2c2c", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
			i.anchor.set(.5, 1), i.x = 400, i.y = 200, this.addChild(i);
			var r = new d.Graphics;
			this.addChild(r), r.beginFill(15658734, 1), r.drawRect(0, 0, 800, 180);
			var n = d.Sprite.fromImage(vpath + "i/web/iosbanner.png");
			n.y = 205, n.anchor.set(0, 0), this.addChild(n), n.buttonMode = !0, n.interactive = !0;
			var a = this.createButton(null, "Install Now");
			this.addChild(a), a.y = 720, a.x = 200, u(n, t, !0), u(a, t, !0), this.setRatio = function(t) {
				r.width = e.width = 800 * t, e.height = 180 * t, r.y = e.y = 680 * t, r.height = 40 * t, a.hitArea = new d.Rectangle(-200 * t, 0, 800 * t, 150 * t), n.scale.set(t, t), n.y = 205 * t
			}, this.innerHeight = 860
		};
		oe.prototype = Object.create(m.prototype), oe.prototype.constructor = oe;
		var he = function() {
			ie.call(this), this.createHeadline("Level is locked");
			var t = new d.Graphics;
			this.addChild(t), t.beginFill(8042350, 1), t.drawRoundedRect(0, 0, 800, 180, 35);
			var e = new d.Graphics;
			this.addChild(e), e.beginFill(15658734, 1), e.drawRect(0, 0, 800, 180);
			var i = this.createButton(null, "Ok", !0);
			this.addChild(i), i.x = 200, i.y = 205;
			var r = new ee("Win previous games to unlock level.", 100, 40, "#2c2c2c", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
			r.anchor.set(.5, 1), r.x = 400, r.y = 200, this.addChild(r), this.setRatio = function(r) {
				e.width = t.width = 800 * r, t.height = 180 * r, e.y = t.y = 170 * r, e.height = 40 * r, i.hitArea = new d.Rectangle(-200 * r, 0, 800 * r, 150 * r)
			}, this.innerHeight = 350
		};
		he.prototype = Object.create(m.prototype), he.prototype.constructor = he;
		var le = function(t, e) {
			ie.call(this);
			var i = new d.Graphics;
			this.addChild(i), i.beginFill(8042350, 1), i.drawRoundedRect(0, 0, 800, 180, 35);
			var r = new d.Graphics;
			this.addChild(r), r.beginFill(15658734, 1), r.drawRect(0, 0, 800, 180);
			var n = new d.Graphics;
			this.addChild(n);
			var s = new Date(t * ht),
				a = this.createHeadline("选择难度"),
				o = s.getDate(),
				h = ["", "st", "nd", "rd"][o] || "th",
				l = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"][s.getMonth()],
				c = s.getFullYear();
			0 > c && (c = -c + "bc");
			var f = o + h + " " + l + " " + c,
				p = new ee(f, 200, 50, "#2c2c2c", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
			p.anchor.set(.5, 0), p.x = 400, p.y = a.y + a.height + 5, this.addChild(p);
			var g = this.createButton(w.fromSheet(iconSheet, 10), "一次1张");
			this.addChild(g), g.y = 275;
			var v = this.createButton(w.fromSheet(iconSheet, 8), "一次3张");
			this.addChild(v), v.y = 275, v.x = 400, u(v, function() {
				Y(!0, t, e)
			}, !0), u(g, function() {
				Y(!1, t, e)
			}, !0), this.setRatio = function(t) {
				r.width = i.width = 800 * t, i.height = 180 * t, r.y = i.y = 240 * t, r.height = 40 * t, n.y = 275 * t, n.clear(), n.beginFill(15658734, 1), n.drawRect(398 * t, 0, 4 * t, 145 * t), g.hitArea = v.hitArea = new d.Rectangle(0, 0, 400 * t, 145 * t)
			}, this.innerHeight = 420, this.destroy = function() {
				p.texture.destroy(!0)
			}
		};
		le.prototype = Object.create(m.prototype), le.prototype.constructor = le;
		var ce = function() {
			function i() {
				return M * C / l.ratio / 2 - h / 2
			}

			function r() {
				ct = !1, c && c.destroy && c.destroy(), s.removeChild(c), A.removeChild(l)
			}
			m.call(this);
			var n = new d.Graphics;
			this.addChild(n), n.interactive = !0, n.defaultCursor = "pointer";
			var s = new m;
			this.addChild(s);
			var a = new d.Graphics;
			s.addChild(a);
			var o = 800,
				h = 800;
			this.setRatio = function(t) {
				a.width = o * t, a.height = h * t, this.redraw()
			}, this.setHeight = function(t) {
				h = t, a.clear(), a.beginFill(15658734, 1), a.drawRoundedRect(0, 0, o, h, 35), this.ratio && this.setRatio(this.ratio)
			}, this.setHeight(800), this.redraw = function() {
				ge.ratio = Math.min(Math.min(S * C / 900, M * C / (h + 100)), C / 2), n.clear(), n.beginFill(0, .6), n.drawRect(0, 0, S * C, M * C), this.reAlign()
			};
			var l = this;
			this.reAlign = function() {
				p.clear(s), s.x = S * C / this.ratio / 2 - o / 2, s.y = i()
			};
			var c = null;
			this.show = function(e, a) {
				t(), r(), ct = !0, c = e, this.setHeight(c.innerHeight), s.addChild(c), s.y = M * C / this.ratio, n.alpha = 0, new p(s, {
					y: i()
				}, .3), a !== !0 && new p(n, {
					alpha: 1
				}, .3), A.addChild(this)
			}, this.hide = function(t) {
				ct ? (new p(n, {
					alpha: 0
				}, .3), new p(s, {
					y: -h
				}, .3).call(function() {
					e(), r(), window.hideGameDialogue(), t instanceof Function && t(), ot = !1
				})) : (t instanceof Function && t(), window.hideGameDialogue())
			}, u(n, function() {
				c.blurClose && l.hide()
			}, !0)
		};
		ce.prototype = Object.create(m.prototype), ce.prototype.constructor = ce;
		var de = function(t, e, i, r, n, s) {
			m.call(this), this.date = new Date(t * ht), this.offsetDays = t;
			var a = dt.getTime() == this.date.getTime();
			this.isToday = a, s || (this.interactive = !0, this.buttonMode = !0);
			var o = new T(embed("i/g/levelcircle.png"), 250, 250);
			o.anchor.set(.5, .5), i.addChild(o);
			var h = a ? "Today" : this.date.getDate();
			this.day = this.date.getDate();
			var l = new ee(h, a || s ? 400 : 200, a || s ? 70 : 40, "#2c2c2c");
			l.updateText(), l.anchor.set(.5, 0), l.y = a || s ? -43 : -22, l.x = a || s ? 0 : -10, this.addChild(l);
			var c, f = 1;
			a || (c = new ee(["", "st", "nd", "rd"][h] || "th", 200, 25, "#2c2c2c"), c.x = l.x + l.width / 2, c.y = l.y, this.addChild(c)), s || a || (o.scale.set(.5, .5), f = .5);
			var g = [
					[0, -76],
					[-48, -64],
					[48, -64]
				],
				v = [1, .8, .8],
				y = [],
				x = 0;
			this.setStars = function(t) {
				if (t > x) {
					x = t;
					for (var e in y) r.removeChild(y[e]);
					y[e] = {};
					for (var i = 2 == t ? 1 : 0, n = i; t + i > n; n++) {
						var a = y[n] = new w(embed("i/g/bstar.png"));
						a.anchor.set(.5, .5), r.addChild(a), a.alpha = [0, .5, .75, 1][t];
						var o = g[n],
							h = v[n] * f;
						if (a.scale.set(h, h), a.ox = o[0] * f * (2 == t ? .5 : 1), a.oy = o[1] * f * (2 == t ? 1.1 : 1), s) {
							var l = a.alpha;
							a.alpha = 0, a.rotation = 1, new p(a, {
								alpha: l,
								rotation: 0
							}, .5).wait((n + 1) / 4), a.scale.set(5, 5), new p(a.scale, {
								x: h,
								y: h
							}, .5).wait((n + 1) / 4)
						}
					}
					this.setPosition(this.x, this.y)
				}
			}, this.refresh = function() {
				var t = n.isLocked(this.offsetDays) && 0 == x;
				o.frame = t ? 1 : 0, t ? (b.removeChild(l), c && b.removeChild(c)) : (b.addChild(l), c && b.addChild(c))
			}, this.setRatio = function(t) {
				var e = 250 * t * f;
				this.hitArea = new d.Rectangle(-e / 2, -e / 2, e, e)
			}, this.setPosition = function(t, e) {
				this.x = o.x = t, this.y = o.y = e;
				for (var t in y) {
					var i = y[t];
					i.x = this.x + i.ox, i.y = this.y + i.oy
				}
			};
			var b = this;
			u(this, function() {
				!window.isAndroid || a || window.isApp || window.isSilk ? !window.isiOS || a || window.isApp ? n.newGame(this.offsetDays) : q() : X()
			}), this.setStars(e), this.refresh()
		};
		de.prototype = Object.create(m.prototype), de.prototype.constructor = de;
		var ue = function(t, e) {
			function i(t, e) {
				return t += c, Math.sin(t / 250) * Math.cos(t / 700) * Math.min(e / 5, 1)
			}

			function r() {
				F.frame = 1, setTimeout(function() {
					F.frame = 0, setTimeout(r, (15e3 * Math.random() >> 0) + 5e3)
				}, 100)
			}
			m.call(this);
			var n = ue.dataCache[t],
				s = new d.Graphics;
			this.addChild(s);
			var a = new y;
			this.addChild(a);
			var o = new m;
			this.addChild(o);
			var h = new y;
			this.addChild(h);
			var l = n.dayOffset,
				c = n.offsetX,
				f = 0,
				p = n.offsetY,
				g = 0,
				v = 0;
			this.offset = t;
			for (var x = [], b = 0, M = [], E = 0 == t ? 200 : 350;;) {
				var R = b + l,
					_ = e.getNormalizedOffset(R),
					A = new de(_, e.state[_], o, h, e),
					L = 0;
				for (g = f; 150 > L || E > g;) {
					g += 10;
					var v = 290 * i(g, b + l) + 50,
						B = g - f,
						P = v - p;
					L = Math.sqrt(B * B + P * P)
				}
				if (A.setPosition(g >> 0, v >> 0), x.push([g, v]), f = g + (A.isToday ? 70 : 0), p = v, o.addChild(A), M.push(A), b++, 1 == A.day) break
			}
			var G = new m,
				D = new w(embed("i/g/levelselector.png"));
			D.anchor.set(.5, 1), G.addChild(D);
			var F = new T(embed("i/g/faceblink.png"), 54, 51);
			F.anchor.set(.5, .5), G.addChild(F), r(), this.setStars = function(t, e) {
				for (var i = 0; i < M.length; i++) M[i].offsetDays == t && M[i].setStars(e)
			}, this.refresh = function() {
				for (var t = 0; t < M.length; t++) M[t].refresh()
			}, this.showSelector = function(t) {
				this.removeChild(G);
				for (var e = 0; e < M.length; e++) {
					var i = M[e];
					if (i.offsetDays == t) return this.addChild(G), D.x = i.x, F.x = i.x, i.y < -100 ? (D.y = i.y + 25, D.rotation = Math.PI, F.y = D.y + 100) : (D.y = i.y - (i.isToday ? 55 : 15), D.rotation = 0, F.y = D.y - 95), !0
				}
				return !1
			}, this.getSelectorX = function() {
				return D.x
			}, this.setRatio = function(t) {
				s.clear(), s.lineStyle(Math.max(15 * this.ratio >> 0, 1), "0xff8400", 1);
				for (var e = 0; e < x.length; e++) {
					var i = x[e];
					0 == e ? s.moveTo(i[0] * t, i[1] * t) : s.lineTo(i[0] * t, i[1] * t)
				}
			};
			var O = new w(embed("i/g/menuarrow.png"));
			if (O.anchor.set(1, .5), this.addChild(O), O.buttonMode = !0, O.interactive = !0, u(O, function() {
					e.show(t + 1)
				}), t > 0) {
				var I = new w(embed("i/g/menuarrow.png"));
				I.anchor.set(1, .5), I.rotation = Math.PI, I.x = 25, this.addChild(I), I.buttonMode = !0, I.interactive = !0, u(I, function() {
					e.show(t - 1)
				})
			}
			this.reAlign = function() {
				for (var e = S / this.ratio * C, i = 0, r = 0; t > r; r++) i += Math.max(ue.dataCache[r].realWidth, e);
				this.x = i, o.x = Math.max(0, (e - this.realWidth) / 2), O.x = Math.max(e, this.realWidth) - 25, G.x = h.x = a.x = o.x, s.x = o.x * this.ratio
			}, this.realWidth = g + 325, ue.dataCache[t + 1] = ue.dataCache[t + 1] || {}, ue.dataCache[t + 1].dayOffset = b + l, ue.dataCache[t + 1].offsetX = c + this.realWidth, ue.dataCache[t + 1].offsetY = v, ue.dataCache[t].realWidth = this.realWidth
		};
		ue.prototype = Object.create(m.prototype), ue.prototype.constructor = ue, ue.dataCache = {
			0: {
				dayOffset: 0,
				offsetX: 0,
				offsetY: 0
			}
		};
		var fe = function(t, e) {
			m.call(this), e = new Date(dt.getTime() - ue.dataCache[t].dayOffset * ht);
			var i = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"][e.getMonth()],
				r = e.getFullYear();
			0 > r && (r = -r + "bc");
			var n = isStandalone && (!isMobileiOSDevice || M > S) || window.isiOS && window.isCordova ? 20 * C : 0,
				s = new ee(i, 200, 100, "#ffffff", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
			this.addChild(s), s.y = 10 + n, s.updateText();
			var a = new ee(r, 100, 100, "#ffffff", '"Helvetica Neue","Trebuchet MS", Helvetica, 微软雅黑');
			this.addChild(a), a.y = 10 + n + s.height - a.height;
			var o = s.width + a.width + 20,
				h = s.width;
			this.reAlign = function() {
				var e = S / this.ratio * C || 0;
				this.x = t * e, s.x = e / 2 - o / 2, a.x = s.x + h + 20
			}
		};
		fe.prototype = Object.create(m.prototype), fe.prototype.constructor = fe;
		var pe = function() {
			function t() {
				var t = a.serialize(),
					e = a.countCompleted();
				Store.set(window.levelVersion, t), a.onSave(t, e)
			}

			function e() {
				var t = 0;
				for (var e in a.state) t++;
				l = t
			}

			function i(t) {
				t > 0 && (ue.dataCache[t] || i(t - 1));
				var e = new ue(t, a);
				return d.addChild(e), e.reAlign(), y[t] = e, e
			}

			function r(t) {
				var e = new fe(t, dt);
				return c.addChild(e), e.reAlign(), x[t] = e, e
			}

			function s(t) {
				for (var e = {}, n = {}, s = Math.max(0, t - 1); t + 2 > s; s++) {
					var o = y[s],
						h = x[s];
					o || (o = i(s)), h || (h = r(s)), e[s] = o, n[s] = h, delete y[s], delete x[s]
				}
				for (var l in y) d.removeChild(y[l]);
				for (var l in x) c.removeChild(x[l]);
				y = e, x = n, a.showSelector()
			}
			m.call(this);
			var a = this;
			this.state = {}, this.serialize = function() {
				var t = [];
				for (var e in a.state) t.push(e + ":" + a.state[e]);
				return t.join(",")
			}, this.countCompleted = function() {
				var t = 0;
				for (var e in a.state) t++;
				return t
			}, this.onSave = function(t) {}, this.deserialize = function(e, i) {
				if (e) {
					for (var r = e.split(","), n = 0; n < r.length; n++) {
						var s = r[n].split(":");
						if (s[0] = s[0] >> 0, 2 == s.length) {
							var o = parseInt(s[1]) || 0,
								h = this.state[s[0]] || 0;
							o > h && (this.state[s[0]] = o, i || a.setStarsOffset(s[0], o))
						}
					}
					t(), st && calenderView.centerSelector(1)
				}
			}, this.deserialize(Store.get(window.levelVersion), !0);
			var h = dt.getTime() / ht;
			this.getNormalizedOffset = function(t) {
				return h - t
			};
			var l = 0;
			e(), this.isLocked = function(t) {
				return h > t + l + 2
			}, this.showSelector = function() {
				for (var t = 0;;) {
					if (0 == (this.state[h - t] || 0)) break;
					t++
				}
				for (var e in y)
					if (y[e].showSelector(h - t)) return y[e];
				return !1
			}, this.centerSelector = function(t) {
				s(t);
				var e = this.showSelector();
				e ? this.show(e.offset, !0) : this.centerSelector(t + 1)
			};
			var c = new m;
			this.addChild(c);
			var d = new m;
			this.addChild(d), this.offset = -1;
			var u = null,
				f = 0,
				g = 0,
				v = !1,
				y = {},
				x = {};
			this.newGame = function(t) {
				v || (this.isLocked(t) ? K() : V(t))
			}, i(0), r(0), this.show = function(t, e, n) {
				t = Math.max(0, t), n || t == this.offset || ga("send", "event", "Solitaire", "Navigating Level Selector"), this.offset = t, y[t] || i(t), x[t] || r(t), this.reAlign(!0, e, function() {
					s(t)
				})
			}, this.animate = function(t, e, i, r) {
				p.clear(c), p.complete(d);
				var n = S / this.ratio * C || 0,
					s = -y[t].x,
					a = -y[t].x - Math.max(y[t].realWidth, n) + n;
				i && (e = !1, d.x = s - y[t].getSelectorX() + n / 2), e ? (d.x > s ? new p(d, {
					x: s
				}, .3).call(r) : d.x < a ? new p(d, {
					x: a
				}, .3).call(r) : r && r(), new p(c, {
					x: -t * n
				}, .3)) : (d.x > s ? d.x = s : d.x < a && (d.x = a), c.x = -t * n, r && r())
			}, this.setStarsOffset = function(t, i) {
				for (var r in y) y[r].setStars(t, i);
				e();
				for (var r in y) y[r].refresh()
			}, this.setStars = function(e, i) {
				i > (this.state[e] || 0) && (this.state[e] = i), this.setStarsOffset(e, i), t()
			}, this.reAlign = function(t, e, i) {
				d.y = M / this.ratio * C / 2;
				for (var r in y) y[r].reAlign();
				for (var r in x) x[r].reAlign();
				this.animate(this.offset, t, e, i)
			}, o(function(t) {
				p.clear(d), u = t.getLocalPosition(A), f = d.x, g = 0, v = !1
			}), A.touchmove = function(t) {
				if (null != u) {
					var e = t.getLocalPosition(A),
						i = (e.x - u.x) / a.ratio;
					if (Math.abs(i) > 25 || v) {
						v = !0;
						var r = f + i;
						g = (d.x - r) * a.ratio, r > 0 && (r = Math.min(10 * Math.sqrt(r), r)), d.x = r
					}
				}
			}, A.mousemove = function(t) {
				Q || A.touchmove(t)
			}, n(function(t) {
				if (u) {
					u = null;
					var e = S / a.ratio * C || 0,
						i = e / 3,
						r = -y[a.offset].x,
						n = -y[a.offset].x - Math.max(y[a.offset].realWidth, e) + e;
					if (d.x < n) {
						if (n - d.x > i || g > 15) return void a.show(a.offset + 1)
					} else if (d.x > r && (-y[a.offset].x - d.x < -i || -15 > g)) return void a.show(a.offset - 1);
					var s = Math.max(Math.min(d.x - 15 * g, r), n);
					new p(d, {
						x: s
					}, .5)
				}
			}), this.show(a.offset, !0, !0)
		};
		pe.prototype = Object.create(m.prototype), pe.prototype.constructor = pe;
		var ge = new ce;
		window.calenderView = new pe, window.onresize = function(t) {
			clearTimeout(Yt), t === !0 ? j() : Yt = setTimeout(j, 20)
		}, B.addChild(qt), window.showLevelSelector = function() {
			st = !0, ge.hide(function() {
				H(), B.addChild(calenderView), calenderView.centerSelector(1), t()
			})
		}, window.showAndroidInstallBanner = X, window.showiOSInstallBanner = q, window.onresize(!0), setTimeout(function() {
			Store.get(window.levelVersion) && !Store.get(window.storeVersion) ? showLevelSelector() : (F(!0), B.addChild(gt), B.addChild(Et), B.addChild(Rt))
		}, 1)
	}

	function l() {}

	function c() {
		l(), L.render(A), requestAnimFrame(c)
	}
	var d = d || {};
	d.WEBGL_RENDERER = 0, d.CANVAS_RENDERER = 1, d.VERSION = "v2.2.3", d.blendModes = {
			NORMAL: 0,
			ADD: 1,
			MULTIPLY: 2,
			SCREEN: 3,
			OVERLAY: 4,
			DARKEN: 5,
			LIGHTEN: 6,
			COLOR_DODGE: 7,
			COLOR_BURN: 8,
			HARD_LIGHT: 9,
			SOFT_LIGHT: 10,
			DIFFERENCE: 11,
			EXCLUSION: 12,
			HUE: 13,
			SATURATION: 14,
			COLOR: 15,
			LUMINOSITY: 16
		}, d.scaleModes = {
			DEFAULT: 0,
			LINEAR: 0,
			NEAREST: 1
		}, d._UID = 0, "undefined" != typeof Float32Array ? (d.Float32Array = Float32Array, d.Uint16Array = Uint16Array, d.Uint32Array = Uint32Array, d.ArrayBuffer = ArrayBuffer) : (d.Float32Array = Array, d.Uint16Array = Array), d.INTERACTION_FREQUENCY = 30, d.AUTO_PREVENT_DEFAULT = !0, d.PI_2 = 2 * Math.PI, d.RAD_TO_DEG = 180 / Math.PI, d.DEG_TO_RAD = Math.PI / 180, d.RETINA_PREFIX = "@2x", d.dontSayHello = !1, d.defaultRenderOptions = {
			view: null,
			transparent: !1,
			antialias: !1,
			preserveDrawingBuffer: !1,
			resolution: 1,
			clearBeforeRender: !0,
			autoResize: !1
		}, d.sayHello = function(t) {
			if (!d.dontSayHello) {
				if (navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
					var e = ["%c %c %c Pixi.js " + d.VERSION + " - " + t + "  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ ", "background: #ff66a5", "background: #ff66a5", "color: #ff66a5; background: #030307;", "background: #ff66a5", "background: #ffc3dc", "background: #ff66a5", "color: #ff2424; background: #fff", "color: #ff2424; background: #fff", "color: #ff2424; background: #fff"];
					console.log.apply(console, e)
				} else window.console && console.log("Pixi.js " + d.VERSION + " - http://www.pixijs.com/");
				d.dontSayHello = !0
			}
		}, d.Point = function(t, e) {
			this.x = t || 0, this.y = e || 0
		}, d.Point.prototype.clone = function() {
			return new d.Point(this.x, this.y)
		}, d.Point.prototype.set = function(t, e) {
			this.x = t || 0, this.y = e || (0 !== e ? this.x : 0)
		}, d.Point.prototype.constructor = d.Point, d.Rectangle = function(t, e, i, r) {
			this.x = t || 0, this.y = e || 0, this.width = i || 0, this.height = r || 0
		}, d.Rectangle.prototype.clone = function() {
			return new d.Rectangle(this.x, this.y, this.width, this.height)
		}, d.Rectangle.prototype.contains = function(t, e) {
			if (this.width <= 0 || this.height <= 0) return !1;
			var i = this.x;
			if (t >= i && t <= i + this.width) {
				var r = this.y;
				if (e >= r && e <= r + this.height) return !0
			}
			return !1
		}, d.Rectangle.prototype.constructor = d.Rectangle, d.EmptyRectangle = new d.Rectangle(0, 0, 0, 0), d.Polygon = function(t) {
			if (t instanceof Array || (t = Array.prototype.slice.call(arguments)), t[0] instanceof d.Point) {
				for (var e = [], i = 0, r = t.length; r > i; i++) e.push(t[i].x, t[i].y);
				t = e
			}
			this.closed = !0, this.points = t
		}, d.Polygon.prototype.clone = function() {
			var t = this.points.slice();
			return new d.Polygon(t)
		}, d.Polygon.prototype.contains = function(t, e) {
			for (var i = !1, r = this.points.length / 2, n = 0, s = r - 1; r > n; s = n++) {
				var a = this.points[2 * n],
					o = this.points[2 * n + 1],
					h = this.points[2 * s],
					l = this.points[2 * s + 1],
					c = o > e != l > e && (h - a) * (e - o) / (l - o) + a > t;
				c && (i = !i)
			}
			return i
		}, d.Polygon.prototype.constructor = d.Polygon, d.Circle = function(t, e, i) {
			this.x = t || 0, this.y = e || 0, this.radius = i || 0
		}, d.Circle.prototype.clone = function() {
			return new d.Circle(this.x, this.y, this.radius)
		}, d.Circle.prototype.contains = function(t, e) {
			if (this.radius <= 0) return !1;
			var i = this.x - t,
				r = this.y - e,
				n = this.radius * this.radius;
			return i *= i, r *= r, n >= i + r
		}, d.Circle.prototype.getBounds = function() {
			return new d.Rectangle(this.x - this.radius, this.y - this.radius, 2 * this.radius, 2 * this.radius)
		}, d.Circle.prototype.constructor = d.Circle, d.Ellipse = function(t, e, i, r) {
			this.x = t || 0, this.y = e || 0, this.width = i || 0, this.height = r || 0
		}, d.Ellipse.prototype.clone = function() {
			return new d.Ellipse(this.x, this.y, this.width, this.height)
		}, d.Ellipse.prototype.contains = function(t, e) {
			if (this.width <= 0 || this.height <= 0) return !1;
			var i = (t - this.x) / this.width,
				r = (e - this.y) / this.height;
			return i *= i, r *= r, 1 >= i + r
		}, d.Ellipse.prototype.getBounds = function() {
			return new d.Rectangle(this.x - this.width, this.y - this.height, this.width, this.height)
		}, d.Ellipse.prototype.constructor = d.Ellipse, d.RoundedRectangle = function(t, e, i, r, n) {
			this.x = t || 0, this.y = e || 0, this.width = i || 0, this.height = r || 0, this.radius = n || 20
		}, d.RoundedRectangle.prototype.clone = function() {
			return new d.RoundedRectangle(this.x, this.y, this.width, this.height, this.radius)
		}, d.RoundedRectangle.prototype.contains = function(t, e) {
			if (this.width <= 0 || this.height <= 0) return !1;
			var i = this.x;
			if (t >= i && t <= i + this.width) {
				var r = this.y;
				if (e >= r && e <= r + this.height) return !0
			}
			return !1
		}, d.RoundedRectangle.prototype.constructor = d.RoundedRectangle, d.Matrix = function() {
			this.a = 1, this.b = 0, this.c = 0, this.d = 1, this.tx = 0, this.ty = 0
		}, d.Matrix.prototype.fromArray = function(t) {
			this.a = t[0], this.b = t[1], this.c = t[3], this.d = t[4], this.tx = t[2], this.ty = t[5]
		}, d.Matrix.prototype.toArray = function(t) {
			this.array || (this.array = new d.Float32Array(9));
			var e = this.array;
			return t ? (e[0] = this.a, e[1] = this.b, e[2] = 0, e[3] = this.c, e[4] = this.d, e[5] = 0, e[6] = this.tx, e[7] = this.ty, e[8] = 1) : (e[0] = this.a, e[1] = this.c, e[2] = this.tx, e[3] = this.b, e[4] = this.d, e[5] = this.ty, e[6] = 0, e[7] = 0, e[8] = 1), e
		}, d.Matrix.prototype.apply = function(t, e) {
			return e = e || new d.Point, e.x = this.a * t.x + this.c * t.y + this.tx, e.y = this.b * t.x + this.d * t.y + this.ty, e
		}, d.Matrix.prototype.applyInverse = function(t, e) {
			e = e || new d.Point;
			var i = 1 / (this.a * this.d + this.c * -this.b);
			return e.x = this.d * i * t.x + -this.c * i * t.y + (this.ty * this.c - this.tx * this.d) * i, e.y = this.a * i * t.y + -this.b * i * t.x + (-this.ty * this.a + this.tx * this.b) * i, e
		}, d.Matrix.prototype.translate = function(t, e) {
			return this.tx += t, this.ty += e, this
		}, d.Matrix.prototype.scale = function(t, e) {
			return this.a *= t, this.d *= e, this.c *= t, this.b *= e, this.tx *= t, this.ty *= e, this
		}, d.Matrix.prototype.rotate = function(t) {
			var e = Math.cos(t),
				i = Math.sin(t),
				r = this.a,
				n = this.c,
				s = this.tx;
			return this.a = r * e - this.b * i, this.b = r * i + this.b * e, this.c = n * e - this.d * i, this.d = n * i + this.d * e, this.tx = s * e - this.ty * i, this.ty = s * i + this.ty * e, this
		}, d.Matrix.prototype.append = function(t) {
			var e = this.a,
				i = this.b,
				r = this.c,
				n = this.d;
			return this.a = t.a * e + t.b * r, this.b = t.a * i + t.b * n, this.c = t.c * e + t.d * r, this.d = t.c * i + t.d * n, this.tx = t.tx * e + t.ty * r + this.tx, this.ty = t.tx * i + t.ty * n + this.ty, this
		}, d.Matrix.prototype.identity = function() {
			return this.a = 1, this.b = 0, this.c = 0, this.d = 1, this.tx = 0, this.ty = 0, this
		}, d.identityMatrix = new d.Matrix, d.DisplayObject = function() {
			this.position = new d.Point, this.scale = new d.Point(1, 1), this.pivot = new d.Point(0, 0), this.rotation = 0, this.alpha = 1, this.visible = !0, this.hitArea = null, this.buttonMode = !1, this.renderable = !1, this.parent = null, this.stage = null, this.worldAlpha = 1, this._interactive = !1, this.defaultCursor = "pointer", this.worldTransform = new d.Matrix, this._sr = 0, this._cr = 1, this.filterArea = null, this._bounds = new d.Rectangle(0, 0, 1, 1), this._currentBounds = null, this._mask = null, this._cacheAsBitmap = !1, this._cacheIsDirty = !1
		}, d.DisplayObject.prototype.constructor = d.DisplayObject, Object.defineProperty(d.DisplayObject.prototype, "interactive", {
			get: function() {
				return this._interactive
			},
			set: function(t) {
				this._interactive = t, this.stage && (this.stage.dirty = !0)
			}
		}), Object.defineProperty(d.DisplayObject.prototype, "worldVisible", {
			get: function() {
				var t = this;
				do {
					if (!t.visible) return !1;
					t = t.parent
				} while (t);
				return !0
			}
		}), Object.defineProperty(d.DisplayObject.prototype, "mask", {
			get: function() {
				return this._mask
			},
			set: function(t) {
				this._mask && (this._mask.isMask = !1), this._mask = t, this._mask && (this._mask.isMask = !0)
			}
		}), Object.defineProperty(d.DisplayObject.prototype, "filters", {
			get: function() {
				return this._filters
			},
			set: function(t) {
				if (t) {
					for (var e = [], i = 0; i < t.length; i++)
						for (var r = t[i].passes, n = 0; n < r.length; n++) e.push(r[n]);
					this._filterBlock = {
						target: this,
						filterPasses: e
					}
				}
				this._filters = t
			}
		}), Object.defineProperty(d.DisplayObject.prototype, "cacheAsBitmap", {
			get: function() {
				return this._cacheAsBitmap
			},
			set: function(t) {
				this._cacheAsBitmap !== t && (t ? this._generateCachedSprite() : this._destroyCachedSprite(), this._cacheAsBitmap = t)
			}
		}), d.DisplayObject.prototype.updateTransform = function() {
			var t, e, i, r, n, s, a = this.parent.worldTransform,
				o = this.worldTransform;
			this.rotation % d.PI_2 ? (this.rotation !== this.rotationCache && (this.rotationCache = this.rotation, this._sr = Math.sin(this.rotation), this._cr = Math.cos(this.rotation)), t = this._cr * this.scale.x, e = this._sr * this.scale.x, i = -this._sr * this.scale.y, r = this._cr * this.scale.y, n = this.position.x, s = this.position.y, (this.pivot.x || this.pivot.y) && (n -= this.pivot.x * t + this.pivot.y * i, s -= this.pivot.x * e + this.pivot.y * r), o.a = t * a.a + e * a.c, o.b = t * a.b + e * a.d, o.c = i * a.a + r * a.c, o.d = i * a.b + r * a.d, o.tx = n * a.a + s * a.c + a.tx, o.ty = n * a.b + s * a.d + a.ty) : (t = this.scale.x, r = this.scale.y, n = this.position.x - this.pivot.x * t, s = this.position.y - this.pivot.y * r, o.a = t * a.a, o.b = t * a.b, o.c = r * a.c, o.d = r * a.d, o.tx = n * a.a + s * a.c + a.tx, o.ty = n * a.b + s * a.d + a.ty), this.worldAlpha = this.alpha * this.parent.worldAlpha
		}, d.DisplayObject.prototype.displayObjectUpdateTransform = d.DisplayObject.prototype.updateTransform, d.DisplayObject.prototype.getBounds = function(t) {
			return t = t, d.EmptyRectangle
		}, d.DisplayObject.prototype.getLocalBounds = function() {
			return this.getBounds(d.identityMatrix)
		}, d.DisplayObject.prototype.setStageReference = function(t) {
			this.stage = t, this._interactive && (this.stage.dirty = !0)
		}, d.DisplayObject.prototype.generateTexture = function(t, e, i) {
			var r = this.getLocalBounds(),
				n = new d.RenderTexture(0 | r.width, 0 | r.height, i, e, t);
			return d.DisplayObject._tempMatrix.tx = -r.x, d.DisplayObject._tempMatrix.ty = -r.y, n.render(this, d.DisplayObject._tempMatrix), n
		}, d.DisplayObject.prototype.updateCache = function() {
			this._generateCachedSprite()
		}, d.DisplayObject.prototype.toGlobal = function(t) {
			return this.displayObjectUpdateTransform(), this.worldTransform.apply(t)
		}, d.DisplayObject.prototype.toLocal = function(t, e) {
			return e && (t = e.toGlobal(t)), this.displayObjectUpdateTransform(), this.worldTransform.applyInverse(t)
		}, d.DisplayObject.prototype._renderCachedSprite = function(t) {
			this._cachedSprite.worldAlpha = this.worldAlpha, t.gl ? d.Sprite.prototype._renderWebGL.call(this._cachedSprite, t) : d.Sprite.prototype._renderCanvas.call(this._cachedSprite, t)
		}, d.DisplayObject.prototype._generateCachedSprite = function() {
			this._cacheAsBitmap = !1;
			var t = this.getLocalBounds();
			if (this._cachedSprite) this._cachedSprite.texture.resize(0 | t.width, 0 | t.height);
			else {
				var e = new d.RenderTexture(0 | t.width, 0 | t.height);
				this._cachedSprite = new d.Sprite(e), this._cachedSprite.worldTransform = this.worldTransform
			}
			var i = this._filters;
			this._filters = null, this._cachedSprite.filters = i, d.DisplayObject._tempMatrix.tx = -t.x, d.DisplayObject._tempMatrix.ty = -t.y, this._cachedSprite.texture.render(this, d.DisplayObject._tempMatrix, !0), this._cachedSprite.anchor.x = -(t.x / t.width), this._cachedSprite.anchor.y = -(t.y / t.height), this._filters = i, this._cacheAsBitmap = !0
		}, d.DisplayObject.prototype._destroyCachedSprite = function() {
			this._cachedSprite && (this._cachedSprite.texture.destroy(!0), this._cachedSprite = null)
		}, d.DisplayObject.prototype._renderWebGL = function(t) {
			t = t
		}, d.DisplayObject.prototype._renderCanvas = function(t) {
			t = t
		}, d.DisplayObject._tempMatrix = new d.Matrix, Object.defineProperty(d.DisplayObject.prototype, "x", {
			get: function() {
				return this.position.x
			},
			set: function(t) {
				this.position.x = t
			}
		}), Object.defineProperty(d.DisplayObject.prototype, "y", {
			get: function() {
				return this.position.y
			},
			set: function(t) {
				this.position.y = t
			}
		}), d.DisplayObjectContainer = function() {
			d.DisplayObject.call(this), this.children = []
		}, d.DisplayObjectContainer.prototype = Object.create(d.DisplayObject.prototype), d.DisplayObjectContainer.prototype.constructor = d.DisplayObjectContainer, Object.defineProperty(d.DisplayObjectContainer.prototype, "width", {
			get: function() {
				return this.scale.x * this.getLocalBounds().width
			},
			set: function(t) {
				var e = this.getLocalBounds().width;
				0 !== e ? this.scale.x = t / e : this.scale.x = 1, this._width = t
			}
		}), Object.defineProperty(d.DisplayObjectContainer.prototype, "height", {
			get: function() {
				return this.scale.y * this.getLocalBounds().height
			},
			set: function(t) {
				var e = this.getLocalBounds().height;
				0 !== e ? this.scale.y = t / e : this.scale.y = 1, this._height = t
			}
		}), d.DisplayObjectContainer.prototype.addChild = function(t) {
			return this.addChildAt(t, this.children.length)
		}, d.DisplayObjectContainer.prototype.addChildAt = function(t, e) {
			if (e >= 0 && e <= this.children.length) return t.parent && t.parent.removeChild(t), t.parent = this, this.children.splice(e, 0, t), this.stage && t.setStageReference(this.stage), t;
			throw new Error(t + "addChildAt: The index " + e + " supplied is out of bounds " + this.children.length)
		}, d.DisplayObjectContainer.prototype.swapChildren = function(t, e) {
			if (t !== e) {
				var i = this.getChildIndex(t),
					r = this.getChildIndex(e);
				if (0 > i || 0 > r) throw new Error("swapChildren: Both the supplied DisplayObjects must be a child of the caller.");
				this.children[i] = e, this.children[r] = t
			}
		}, d.DisplayObjectContainer.prototype.getChildIndex = function(t) {
			var e = this.children.indexOf(t);
			if (-1 === e) throw new Error("The supplied DisplayObject must be a child of the caller");
			return e
		}, d.DisplayObjectContainer.prototype.setChildIndex = function(t, e) {
			if (0 > e || e >= this.children.length) throw new Error("The supplied index is out of bounds");
			var i = this.getChildIndex(t);
			this.children.splice(i, 1), this.children.splice(e, 0, t)
		}, d.DisplayObjectContainer.prototype.getChildAt = function(t) {
			if (0 > t || t >= this.children.length) throw new Error("getChildAt: Supplied index " + t + " does not exist in the child list, or the supplied DisplayObject must be a child of the caller");
			return this.children[t]
		}, d.DisplayObjectContainer.prototype.removeChild = function(t) {
			var e = this.children.indexOf(t);
			if (-1 !== e) return this.removeChildAt(e)
		}, d.DisplayObjectContainer.prototype.removeChildAt = function(t) {
			var e = this.getChildAt(t);
			return this.stage && e.removeStageReference(), e.parent = void 0, this.children.splice(t, 1), e
		}, d.DisplayObjectContainer.prototype.removeChildren = function(t, e) {
			var i = t || 0,
				r = "number" == typeof e ? e : this.children.length,
				n = r - i;
			if (n > 0 && r >= n) {
				for (var s = this.children.splice(i, n), a = 0; a < s.length; a++) {
					var o = s[a];
					this.stage && o.removeStageReference(), o.parent = void 0
				}
				return s
			}
			if (0 === n && 0 === this.children.length) return [];
			throw new Error("removeChildren: Range Error, numeric values are outside the acceptable range")
		}, d.DisplayObjectContainer.prototype.updateTransform = function() {
			if (this.visible && (this.displayObjectUpdateTransform(), !this._cacheAsBitmap))
				for (var t = 0, e = this.children.length; e > t; t++) this.children[t].updateTransform()
		}, d.DisplayObjectContainer.prototype.displayObjectContainerUpdateTransform = d.DisplayObjectContainer.prototype.updateTransform, d.DisplayObjectContainer.prototype.getBounds = function() {
			if (0 === this.children.length) return d.EmptyRectangle;
			for (var t, e, i, r = 1 / 0, n = 1 / 0, s = -(1 / 0), a = -(1 / 0), o = !1, h = 0, l = this.children.length; l > h; h++) {
				var c = this.children[h];
				c.visible && (o = !0, t = this.children[h].getBounds(), r = r < t.x ? r : t.x, n = n < t.y ? n : t.y, e = t.width + t.x, i = t.height + t.y, s = s > e ? s : e, a = a > i ? a : i)
			}
			if (!o) return d.EmptyRectangle;
			var u = this._bounds;
			return u.x = r, u.y = n, u.width = s - r, u.height = a - n, u
		}, d.DisplayObjectContainer.prototype.getLocalBounds = function() {
			var t = this.worldTransform;
			this.worldTransform = d.identityMatrix;
			for (var e = 0, i = this.children.length; i > e; e++) this.children[e].updateTransform();
			var r = this.getBounds();
			return this.worldTransform = t, r
		}, d.DisplayObjectContainer.prototype.setStageReference = function(t) {
			this.stage = t, this._interactive && (this.stage.dirty = !0);
			for (var e = 0, i = this.children.length; i > e; e++) {
				var r = this.children[e];
				r.setStageReference(t)
			}
		}, d.DisplayObjectContainer.prototype.removeStageReference = function() {
			for (var t = 0, e = this.children.length; e > t; t++) {
				var i = this.children[t];
				i.removeStageReference()
			}
			this._interactive && (this.stage.dirty = !0), this.stage = null
		}, d.DisplayObjectContainer.prototype._renderWebGL = function(t) {
			if (this.visible && !(this.alpha <= 0)) {
				if (this._cacheAsBitmap) return void this._renderCachedSprite(t);
				var e, i;
				if (this._mask || this._filters) {
					for (this._mask && (t.spriteBatch.stop(), t.maskManager.pushMask(this.mask, t), t.spriteBatch.start()), e = 0, i = this.children.length; i > e; e++) this.children[e]._renderWebGL(t);
					t.spriteBatch.stop(), this._mask && t.maskManager.popMask(this._mask, t), t.spriteBatch.start()
				} else
					for (e = 0, i = this.children.length; i > e; e++) this.children[e]._renderWebGL(t)
			}
		}, d.DisplayObjectContainer.prototype._renderCanvas = function(t) {
			if (this.visible !== !1 && 0 !== this.alpha) {
				if (this._cacheAsBitmap) return void this._renderCachedSprite(t);
				this._mask && t.maskManager.pushMask(this._mask, t);
				for (var e = 0, i = this.children.length; i > e; e++) {
					var r = this.children[e];
					r._renderCanvas(t)
				}
				this._mask && t.maskManager.popMask(t)
			}
		}, d.Sprite = function(t) {
			d.DisplayObjectContainer.call(this), this.anchor = new d.Point, this.texture = t || d.Texture.emptyTexture, this._width = 0, this._height = 0, this.tint = 16777215, this.blendMode = d.blendModes.NORMAL, this.shader = null, this.texture.baseTexture.hasLoaded ? this.onTextureUpdate() : this.texture.on("update", this.onTextureUpdate.bind(this)), this.renderable = !0
		}, d.Sprite.prototype = Object.create(d.DisplayObjectContainer.prototype),
		d.Sprite.prototype.constructor = d.Sprite, Object.defineProperty(d.Sprite.prototype, "width", {
			get: function() {
				return this.scale.x * this.texture.frame.width
			},
			set: function(t) {
				this.scale.x = t / this.texture.frame.width, this._width = t
			}
		}), Object.defineProperty(d.Sprite.prototype, "height", {
			get: function() {
				return this.scale.y * this.texture.frame.height
			},
			set: function(t) {
				this.scale.y = t / this.texture.frame.height, this._height = t
			}
		}), d.Sprite.prototype.setTexture = function(t) {
			this.texture = t, this.cachedTint = 16777215
		}, d.Sprite.prototype.onTextureUpdate = function() {
			this._width && (this.scale.x = this._width / this.texture.frame.width), this._height && (this.scale.y = this._height / this.texture.frame.height)
		}, d.Sprite.prototype.getBounds = function(t) {
			var e = this.texture.frame.width,
				i = this.texture.frame.height,
				r = e * (1 - this.anchor.x),
				n = e * -this.anchor.x,
				s = i * (1 - this.anchor.y),
				a = i * -this.anchor.y,
				o = t || this.worldTransform,
				h = o.a,
				l = o.b,
				c = o.c,
				d = o.d,
				u = o.tx,
				f = o.ty,
				p = -(1 / 0),
				g = -(1 / 0),
				v = 1 / 0,
				m = 1 / 0;
			if (0 === l && 0 === c) 0 > h && (h *= -1), 0 > d && (d *= -1), v = h * n + u, p = h * r + u, m = d * a + f, g = d * s + f;
			else {
				var y = h * n + c * a + u,
					x = d * a + l * n + f,
					w = h * r + c * a + u,
					b = d * a + l * r + f,
					T = h * r + c * s + u,
					C = d * s + l * r + f,
					S = h * n + c * s + u,
					M = d * s + l * n + f;
				v = v > y ? y : v, v = v > w ? w : v, v = v > T ? T : v, v = v > S ? S : v, m = m > x ? x : m, m = m > b ? b : m, m = m > C ? C : m, m = m > M ? M : m, p = y > p ? y : p, p = w > p ? w : p, p = T > p ? T : p, p = S > p ? S : p, g = x > g ? x : g, g = b > g ? b : g, g = C > g ? C : g, g = M > g ? M : g
			}
			var E = this._bounds;
			return E.x = v, E.width = p - v, E.y = m, E.height = g - m, this._currentBounds = E, E
		}, d.Sprite.prototype._renderWebGL = function(t) {
			if (this.visible && !(this.alpha <= 0)) {
				var e, i;
				for (t.spriteBatch.render(this), e = 0, i = this.children.length; i > e; e++) this.children[e]._renderWebGL(t)
			}
		}, d.Sprite.prototype._renderCanvas = function(t) {
			if (!(this.visible === !1 || 0 === this.alpha || this.texture.crop.width <= 0 || this.texture.crop.height <= 0)) {
				if (this.blendMode !== t.currentBlendMode && (t.currentBlendMode = this.blendMode, t.context.globalCompositeOperation = d.blendModesCanvas[t.currentBlendMode]), this._mask && t.maskManager.pushMask(this._mask, t), this.texture.valid) {
					var e = this.texture.baseTexture.resolution / t.resolution;
					t.context.globalAlpha = this.worldAlpha, t.smoothProperty && t.scaleMode !== this.texture.baseTexture.scaleMode && (t.scaleMode = this.texture.baseTexture.scaleMode, t.context[t.smoothProperty] = t.scaleMode === d.scaleModes.LINEAR);
					var i = this.texture.trim ? this.texture.trim.x - this.anchor.x * this.texture.trim.width : this.anchor.x * -this.texture.frame.width,
						r = this.texture.trim ? this.texture.trim.y - this.anchor.y * this.texture.trim.height : this.anchor.y * -this.texture.frame.height;
					t.roundPixels ? (t.context.setTransform(this.worldTransform.a, this.worldTransform.b, this.worldTransform.c, this.worldTransform.d, this.worldTransform.tx * t.resolution | 0, this.worldTransform.ty * t.resolution | 0), i = 0 | i, r = 0 | r) : t.context.setTransform(this.worldTransform.a, this.worldTransform.b, this.worldTransform.c, this.worldTransform.d, this.worldTransform.tx * t.resolution, this.worldTransform.ty * t.resolution), 16777215 !== this.tint ? (this.cachedTint !== this.tint && (this.cachedTint = this.tint, this.tintedTexture = d.CanvasTinter.getTintedTexture(this, this.tint)), t.context.drawImage(this.tintedTexture, 0, 0, this.texture.crop.width, this.texture.crop.height, i / e, r / e, this.texture.crop.width / e, this.texture.crop.height / e)) : t.context.drawImage(this.texture.baseTexture.source, this.texture.crop.x, this.texture.crop.y, this.texture.crop.width, this.texture.crop.height, i / e, r / e, this.texture.crop.width / e, this.texture.crop.height / e)
				}
				for (var n = 0, s = this.children.length; s > n; n++) this.children[n]._renderCanvas(t);
				this._mask && t.maskManager.popMask(t)
			}
		}, d.Sprite.fromFrame = function(t) {
			var e = d.TextureCache[t];
			if (!e) throw new Error('The frameId "' + t + '" does not exist in the texture cache' + this);
			return new d.Sprite(e)
		}, d.Sprite.fromImage = function(t, e, i) {
			var r = d.Texture.fromImage(t, e, i);
			return new d.Sprite(r)
		}, d.SpriteBatch = function(t) {
			d.DisplayObjectContainer.call(this), this.textureThing = t, this.ready = !1
		}, d.SpriteBatch.prototype = Object.create(d.DisplayObjectContainer.prototype), d.SpriteBatch.prototype.constructor = d.SpriteBatch, d.SpriteBatch.prototype.initWebGL = function(t) {
			this.fastSpriteBatch = new d.WebGLFastSpriteBatch(t), this.ready = !0
		}, d.SpriteBatch.prototype.updateTransform = function() {
			this.displayObjectUpdateTransform()
		}, d.SpriteBatch.prototype._renderWebGL = function(t) {
			!this.visible || this.alpha <= 0 || !this.children.length || (this.ready || this.initWebGL(t.gl), t.spriteBatch.stop(), t.shaderManager.setShader(t.shaderManager.fastShader), this.fastSpriteBatch.begin(this, t), this.fastSpriteBatch.render(this), t.spriteBatch.start())
		}, d.SpriteBatch.prototype._renderCanvas = function(t) {
			if (this.visible && !(this.alpha <= 0) && this.children.length) {
				var e = t.context;
				e.globalAlpha = this.worldAlpha, this.displayObjectUpdateTransform();
				for (var i = this.worldTransform, r = !0, n = 0; n < this.children.length; n++) {
					var s = this.children[n];
					if (s.visible) {
						var a = s.texture,
							o = a.frame;
						if (e.globalAlpha = this.worldAlpha * s.alpha, s.rotation % (2 * Math.PI) === 0) r && (e.setTransform(i.a, i.b, i.c, i.d, i.tx, i.ty), r = !1), e.drawImage(a.baseTexture.source, o.x, o.y, o.width, o.height, s.anchor.x * -o.width * s.scale.x + s.position.x + .5 | 0, s.anchor.y * -o.height * s.scale.y + s.position.y + .5 | 0, o.width * s.scale.x, o.height * s.scale.y);
						else {
							r || (r = !0), s.displayObjectUpdateTransform();
							var h = s.worldTransform;
							t.roundPixels ? e.setTransform(h.a, h.b, h.c, h.d, 0 | h.tx, 0 | h.ty) : e.setTransform(h.a, h.b, h.c, h.d, h.tx, h.ty), e.drawImage(a.baseTexture.source, o.x, o.y, o.width, o.height, s.anchor.x * -o.width + .5 | 0, s.anchor.y * -o.height + .5 | 0, o.width, o.height)
						}
					}
				}
			}
		}, d.Text = function(t, e) {
			this.canvas = document.createElement("canvas"), this.context = this.canvas.getContext("2d"), this.resolution = 1, d.Sprite.call(this, d.Texture.fromCanvas(this.canvas)), this.setText(t), this.setStyle(e)
		}, d.Text.prototype = Object.create(d.Sprite.prototype), d.Text.prototype.constructor = d.Text, Object.defineProperty(d.Text.prototype, "width", {
			get: function() {
				return this.dirty && (this.updateText(), this.dirty = !1), this.scale.x * this.texture.frame.width
			},
			set: function(t) {
				this.scale.x = t / this.texture.frame.width, this._width = t
			}
		}), Object.defineProperty(d.Text.prototype, "height", {
			get: function() {
				return this.dirty && (this.updateText(), this.dirty = !1), this.scale.y * this.texture.frame.height
			},
			set: function(t) {
				this.scale.y = t / this.texture.frame.height, this._height = t
			}
		}), d.Text.prototype.setStyle = function(t) {
			t = t || {}, t.font = t.font || "bold 20pt Arial", t.fill = t.fill || "black", t.align = t.align || "left", t.stroke = t.stroke || "black", t.strokeThickness = t.strokeThickness || 0, t.wordWrap = t.wordWrap || !1, t.wordWrapWidth = t.wordWrapWidth || 100, t.dropShadow = t.dropShadow || !1, t.dropShadowAngle = t.dropShadowAngle || Math.PI / 6, t.dropShadowDistance = t.dropShadowDistance || 4, t.dropShadowColor = t.dropShadowColor || "black", this.style = t, this.dirty = !0
		}, d.Text.prototype.setText = function(t) {
			this.text = t.toString() || " ", this.dirty = !0
		}, d.Text.prototype.updateText = function() {
			this.texture.baseTexture.resolution = this.resolution, this.context.font = this.style.font;
			var t = this.text;
			this.style.wordWrap && (t = this.wordWrap(this.text));
			for (var e = t.split(/(?:\r\n|\r|\n)/), i = [], r = 0, n = this.determineFontProperties(this.style.font), s = 0; s < e.length; s++) {
				var a = this.context.measureText(e[s]).width;
				i[s] = a, r = Math.max(r, a)
			}
			var o = r + this.style.strokeThickness;
			this.style.dropShadow && (o += this.style.dropShadowDistance), this.canvas.width = (o + this.context.lineWidth) * this.resolution;
			var h = n.fontSize + this.style.strokeThickness,
				l = h * e.length;
			this.style.dropShadow && (l += this.style.dropShadowDistance), this.canvas.height = l * this.resolution, this.context.scale(this.resolution, this.resolution), navigator.isCocoonJS && this.context.clearRect(0, 0, this.canvas.width, this.canvas.height), this.context.font = this.style.font, this.context.strokeStyle = this.style.stroke, this.context.lineWidth = this.style.strokeThickness, this.context.textBaseline = "alphabetic";
			var c, d;
			if (this.style.dropShadow) {
				this.context.fillStyle = this.style.dropShadowColor;
				var u = Math.sin(this.style.dropShadowAngle) * this.style.dropShadowDistance,
					f = Math.cos(this.style.dropShadowAngle) * this.style.dropShadowDistance;
				for (s = 0; s < e.length; s++) c = this.style.strokeThickness / 2, d = this.style.strokeThickness / 2 + s * h + n.ascent, "right" === this.style.align ? c += r - i[s] : "center" === this.style.align && (c += (r - i[s]) / 2), this.style.fill && this.context.fillText(e[s], c + u, d + f)
			}
			for (this.context.fillStyle = this.style.fill, s = 0; s < e.length; s++) c = this.style.strokeThickness / 2, d = this.style.strokeThickness / 2 + s * h + n.ascent, "right" === this.style.align ? c += r - i[s] : "center" === this.style.align && (c += (r - i[s]) / 2), this.style.stroke && this.style.strokeThickness && this.context.strokeText(e[s], c, d), this.style.fill && this.context.fillText(e[s], c, d);
			this.updateTexture()
		}, d.Text.prototype.updateTexture = function() {
			this.texture.baseTexture.width = this.canvas.width, this.texture.baseTexture.height = this.canvas.height, this.texture.crop.width = this.texture.frame.width = this.canvas.width, this.texture.crop.height = this.texture.frame.height = this.canvas.height, this._width = this.canvas.width, this._height = this.canvas.height, this.texture.baseTexture.dirty()
		}, d.Text.prototype._renderWebGL = function(t) {
			this.dirty && (this.resolution = t.resolution, this.updateText(), this.dirty = !1), d.Sprite.prototype._renderWebGL.call(this, t)
		}, d.Text.prototype._renderCanvas = function(t) {
			this.dirty && (this.resolution = t.resolution, this.updateText(), this.dirty = !1), d.Sprite.prototype._renderCanvas.call(this, t)
		}, d.Text.prototype.determineFontProperties = function(t) {
			var e = d.Text.fontPropertiesCache[t];
			if (!e) {
				e = {};
				var i = d.Text.fontPropertiesCanvas,
					r = d.Text.fontPropertiesContext;
				r.font = t;
				var n = Math.ceil(r.measureText("|MÉq").width),
					s = Math.ceil(r.measureText("M").width),
					a = 2 * s;
				s = 1.4 * s | 0, i.width = n, i.height = a, r.fillStyle = "#ffffff", r.fillRect(0, 0, n, a), r.font = t, r.textBaseline = "alphabetic", r.fillStyle = "#888888", r.fillText("|MÉq", 0, s);
				var o, h, l = r.getImageData(0, 0, n, a).data,
					c = l.length,
					u = 4 * n,
					f = 0,
					p = !1;
				for (o = 0; s > o; o++) {
					for (h = 0; u > h; h += 4)
						if (255 !== l[f + h]) {
							p = !0;
							break
						}
					if (p) break;
					f += u
				}
				for (e.ascent = s - o, f = c - u, p = !1, o = a; o > s; o--) {
					for (h = 0; u > h; h += 4)
						if (255 !== l[f + h]) {
							p = !0;
							break
						}
					if (p) break;
					f -= u
				}
				e.descent = o - s, e.fontSize = e.ascent + e.descent, d.Text.fontPropertiesCache[t] = e
			}
			return e
		}, d.Text.prototype.wordWrap = function(t) {
			for (var e = "", i = t.split("\n"), r = 0; r < i.length; r++) {
				for (var n = this.style.wordWrapWidth, s = i[r].split(" "), a = 0; a < s.length; a++) {
					var o = this.context.measureText(s[a]).width,
						h = o + this.context.measureText(" ").width;
					0 === a || h > n ? (a > 0 && (e += "\n"), e += s[a], n = this.style.wordWrapWidth - o) : (n -= h, e += " " + s[a])
				}
				r < i.length - 1 && (e += "\n")
			}
			return e
		}, d.Text.prototype.getBounds = function(t) {
			return this.dirty && (this.updateText(), this.dirty = !1), d.Sprite.prototype.getBounds.call(this, t)
		}, d.Text.prototype.destroy = function(t) {
			this.context = null, this.canvas = null, this.texture.destroy(void 0 === t ? !0 : t)
		}, d.Text.fontPropertiesCache = {}, d.Text.fontPropertiesCanvas = document.createElement("canvas"), d.Text.fontPropertiesContext = d.Text.fontPropertiesCanvas.getContext("2d"), d.InteractionData = function() {
			this.global = new d.Point, this.target = null, this.originalEvent = null
		}, d.InteractionData.prototype.getLocalPosition = function(t, e) {
			var i = t.worldTransform,
				r = this.global,
				n = i.a,
				s = i.c,
				a = i.tx,
				o = i.b,
				h = i.d,
				l = i.ty,
				c = 1 / (n * h + s * -o);
			return e = e || new d.Point, e.x = h * c * r.x + -s * c * r.y + (l * s - a * h) * c, e.y = n * c * r.y + -o * c * r.x + (-l * n + a * o) * c, e
		}, d.InteractionData.prototype.constructor = d.InteractionData, d.InteractionManager = function(t) {
			this.stage = t, this.mouse = new d.InteractionData, this.touches = {}, this.tempPoint = new d.Point, this.mouseoverEnabled = !0, this.pool = [], this.interactiveItems = [], this.interactionDOMElement = null, this.onMouseMove = this.onMouseMove.bind(this), this.onMouseDown = this.onMouseDown.bind(this), this.onMouseOut = this.onMouseOut.bind(this), this.onMouseUp = this.onMouseUp.bind(this), this.onTouchStart = this.onTouchStart.bind(this), this.onTouchEnd = this.onTouchEnd.bind(this), this.onTouchMove = this.onTouchMove.bind(this), this.last = 0, this.currentCursorStyle = "inherit", this.mouseOut = !1, this.resolution = 1, this._tempPoint = new d.Point
		}, d.InteractionManager.prototype.constructor = d.InteractionManager, d.InteractionManager.prototype.collectInteractiveSprite = function(t, e) {
			for (var i = t.children, r = i.length, n = r - 1; n >= 0; n--) {
				var s = i[n];
				s._interactive ? (e.interactiveChildren = !0, this.interactiveItems.push(s), s.children.length > 0 && this.collectInteractiveSprite(s, s)) : (s.__iParent = null, s.children.length > 0 && this.collectInteractiveSprite(s, e))
			}
		}, d.InteractionManager.prototype.setTarget = function(t) {
			this.target = t, this.resolution = t.resolution, null === this.interactionDOMElement && this.setTargetDomElement(t.view)
		}, d.InteractionManager.prototype.setTargetDomElement = function(t) {
			this.removeEvents(), window.navigator.msPointerEnabled && (t.style["-ms-content-zooming"] = "none", t.style["-ms-touch-action"] = "none"), this.interactionDOMElement = t, t.addEventListener("mousemove", this.onMouseMove, !0), t.addEventListener("mousedown", this.onMouseDown, !0), t.addEventListener("mouseout", this.onMouseOut, !0), t.addEventListener("touchstart", this.onTouchStart, !0), t.addEventListener("touchend", this.onTouchEnd, !0), t.addEventListener("touchmove", this.onTouchMove, !0), window.addEventListener("mouseup", this.onMouseUp, !0)
		}, d.InteractionManager.prototype.removeEvents = function() {
			this.interactionDOMElement && (this.interactionDOMElement.style["-ms-content-zooming"] = "", this.interactionDOMElement.style["-ms-touch-action"] = "", this.interactionDOMElement.removeEventListener("mousemove", this.onMouseMove, !0), this.interactionDOMElement.removeEventListener("mousedown", this.onMouseDown, !0), this.interactionDOMElement.removeEventListener("mouseout", this.onMouseOut, !0), this.interactionDOMElement.removeEventListener("touchstart", this.onTouchStart, !0), this.interactionDOMElement.removeEventListener("touchend", this.onTouchEnd, !0), this.interactionDOMElement.removeEventListener("touchmove", this.onTouchMove, !0), this.interactionDOMElement = null, window.removeEventListener("mouseup", this.onMouseUp, !0))
		}, d.InteractionManager.prototype.update = function() {
			if (this.target) {
				var t = Date.now(),
					e = t - this.last;
				if (e = e * d.INTERACTION_FREQUENCY / 1e3, !(1 > e)) {
					this.last = t;
					var i = 0;
					this.dirty && this.rebuildInteractiveGraph();
					var r = this.interactiveItems.length,
						n = "inherit",
						s = !1;
					for (i = 0; r > i; i++) {
						var a = this.interactiveItems[i];
						a.__hit = this.hitTest(a, this.mouse), this.mouse.target = a, a.__hit && !s ? (a.buttonMode && (n = a.defaultCursor), a.interactiveChildren || (s = !0), a.__isOver || (a.mouseover && a.mouseover(this.mouse), a.__isOver = !0)) : a.__isOver && (a.mouseout && a.mouseout(this.mouse), a.__isOver = !1)
					}
					this.currentCursorStyle !== n && (this.currentCursorStyle = n, this.interactionDOMElement.style.cursor = n)
				}
			}
		}, d.InteractionManager.prototype.rebuildInteractiveGraph = function() {
			this.dirty = !1;
			for (var t = this.interactiveItems.length, e = 0; t > e; e++) this.interactiveItems[e].interactiveChildren = !1;
			this.interactiveItems = [], this.stage.interactive && this.interactiveItems.push(this.stage), this.collectInteractiveSprite(this.stage, this.stage)
		}, d.InteractionManager.prototype.onMouseMove = function(t) {
			this.dirty && this.rebuildInteractiveGraph(), this.mouse.originalEvent = t;
			var e = this.interactionDOMElement.getBoundingClientRect();
			this.mouse.global.x = (t.clientX - e.left) * (this.target.width / e.width) / this.resolution, this.mouse.global.y = (t.clientY - e.top) * (this.target.height / e.height) / this.resolution;
			for (var i = this.interactiveItems.length, r = 0; i > r; r++) {
				var n = this.interactiveItems[r];
				n.mousemove && n.mousemove(this.mouse)
			}
		}, d.InteractionManager.prototype.onMouseDown = function(t) {
			this.dirty && this.rebuildInteractiveGraph(), this.mouse.originalEvent = t, d.AUTO_PREVENT_DEFAULT && this.mouse.originalEvent && this.mouse.originalEvent.preventDefault();
			for (var e = this.interactiveItems.length, i = this.mouse.originalEvent, r = 2 === i.button || 3 === i.which, n = r ? "rightdown" : "mousedown", s = r ? "rightclick" : "click", a = r ? "__rightIsDown" : "__mouseIsDown", o = r ? "__isRightDown" : "__isDown", h = 0; e > h; h++) {
				var l = this.interactiveItems[h];
				if ((l[n] || l[s]) && (l[a] = !0, l.__hit = this.hitTest(l, this.mouse), l.__hit && (l[n] && l[n](this.mouse), l[o] = !0, !l.interactiveChildren))) break
			}
		}, d.InteractionManager.prototype.onMouseOut = function(t) {
			this.dirty && this.rebuildInteractiveGraph(), this.mouse.originalEvent = t;
			var e = this.interactiveItems.length;
			this.interactionDOMElement.style.cursor = "inherit";
			for (var i = 0; e > i; i++) {
				var r = this.interactiveItems[i];
				r.__isOver && (this.mouse.target = r, r.mouseout && r.mouseout(this.mouse), r.__isOver = !1)
			}
			this.mouseOut = !0, this.mouse.global.x = -1e4, this.mouse.global.y = -1e4
		}, d.InteractionManager.prototype.onMouseUp = function(t) {
			this.dirty && this.rebuildInteractiveGraph(), this.mouse.originalEvent = t;
			for (var e = this.interactiveItems.length, i = !1, r = this.mouse.originalEvent, n = 2 === r.button || 3 === r.which, s = n ? "rightup" : "mouseup", a = n ? "rightclick" : "click", o = n ? "rightupoutside" : "mouseupoutside", h = n ? "__isRightDown" : "__isDown", l = 0; e > l; l++) {
				var c = this.interactiveItems[l];
				(c[a] || c[s] || c[o]) && (c.__hit = this.hitTest(c, this.mouse), c.__hit && !i ? (c[s] && c[s](this.mouse), c[h] && c[a] && c[a](this.mouse), c.interactiveChildren || (i = !0)) : c[h] && c[o] && c[o](this.mouse), c[h] = !1)
			}
		}, d.InteractionManager.prototype.hitTest = function(t, e) {
			var i = e.global;
			if (!t.worldVisible) return !1;
			t.worldTransform.applyInverse(i, this._tempPoint);
			var r, n = this._tempPoint.x,
				s = this._tempPoint.y;
			if (e.target = t, t.hitArea && t.hitArea.contains) return t.hitArea.contains(n, s);
			if (t instanceof d.Sprite) {
				var a, o = t.texture.frame.width,
					h = t.texture.frame.height,
					l = -o * t.anchor.x;
				if (n > l && l + o > n && (a = -h * t.anchor.y, s > a && a + h > s)) return !0
			} else if (t instanceof d.Graphics) {
				var c = t.graphicsData;
				for (r = 0; r < c.length; r++) {
					var u = c[r];
					if (u.fill && u.shape && u.shape.contains(n, s)) return !0
				}
			}
			var f = t.children.length;
			for (r = 0; f > r; r++) {
				var p = t.children[r],
					g = this.hitTest(p, e);
				if (g) return e.target = t, !0
			}
			return !1
		}, d.InteractionManager.prototype.onTouchMove = function(t) {
			this.dirty && this.rebuildInteractiveGraph();
			var e, i = this.interactionDOMElement.getBoundingClientRect(),
				r = t.changedTouches,
				n = 0;
			for (n = 0; n < r.length; n++) {
				var s = r[n];
				e = this.touches[s.identifier], e.originalEvent = t, e.global.x = (s.clientX - i.left) * (this.target.width / i.width) / this.resolution, e.global.y = (s.clientY - i.top) * (this.target.height / i.height) / this.resolution;
				for (var a = 0; a < this.interactiveItems.length; a++) {
					var o = this.interactiveItems[a];
					o.touchmove && o.__touchData && o.__touchData[s.identifier] && o.touchmove(e)
				}
			}
		}, d.InteractionManager.prototype.onTouchStart = function(t) {
			this.dirty && this.rebuildInteractiveGraph();
			var e = this.interactionDOMElement.getBoundingClientRect();
			d.AUTO_PREVENT_DEFAULT && t.preventDefault();
			for (var i = t.changedTouches, r = 0; r < i.length; r++) {
				var n = i[r],
					s = this.pool.pop();
				s || (s = new d.InteractionData), s.originalEvent = t, this.touches[n.identifier] = s, s.global.x = (n.clientX - e.left) * (this.target.width / e.width) / this.resolution, s.global.y = (n.clientY - e.top) * (this.target.height / e.height) / this.resolution;
				for (var a = this.interactiveItems.length, o = 0; a > o; o++) {
					var h = this.interactiveItems[o];
					if ((h.touchstart || h.tap) && (h.__hit = this.hitTest(h, s), h.__hit && (h.touchstart && h.touchstart(s), h.__isDown = !0, h.__touchData = h.__touchData || {}, h.__touchData[n.identifier] = s, !h.interactiveChildren))) break
				}
			}
		}, d.InteractionManager.prototype.onTouchEnd = function(t) {
			this.dirty && this.rebuildInteractiveGraph();
			for (var e = this.interactionDOMElement.getBoundingClientRect(), i = t.changedTouches, r = 0; r < i.length; r++) {
				var n = i[r],
					s = this.touches[n.identifier],
					a = !1;
				s.global.x = (n.clientX - e.left) * (this.target.width / e.width) / this.resolution, s.global.y = (n.clientY - e.top) * (this.target.height / e.height) / this.resolution;
				for (var o = this.interactiveItems.length, h = 0; o > h; h++) {
					var l = this.interactiveItems[h];
					l.__touchData && l.__touchData[n.identifier] && (l.__hit = this.hitTest(l, l.__touchData[n.identifier]), s.originalEvent = t, (l.touchend || l.tap) && (l.__hit && !a ? (l.touchend && l.touchend(s), l.__isDown && l.tap && l.tap(s), l.interactiveChildren || (a = !0)) : l.__isDown && l.touchendoutside && l.touchendoutside(s), l.__isDown = !1), l.__touchData[n.identifier] = null)
				}
				this.pool.push(s), this.touches[n.identifier] = null
			}
		}, d.Stage = function(t) {
			d.DisplayObjectContainer.call(this), this.worldTransform = new d.Matrix, this.interactive = !0, this.interactionManager = new d.InteractionManager(this), this.dirty = !0, this.stage = this, this.stage.hitArea = new d.Rectangle(0, 0, 1e5, 1e5), this.setBackgroundColor(t)
		}, d.Stage.prototype = Object.create(d.DisplayObjectContainer.prototype), d.Stage.prototype.constructor = d.Stage, d.Stage.prototype.setInteractionDelegate = function(t) {
			this.interactionManager.setTargetDomElement(t)
		}, d.Stage.prototype.updateTransform = function() {
			this.worldAlpha = 1;
			for (var t = 0, e = this.children.length; e > t; t++) this.children[t].updateTransform();
			this.dirty && (this.dirty = !1, this.interactionManager.dirty = !0), this.interactive && this.interactionManager.update()
		}, d.Stage.prototype.setBackgroundColor = function(t) {
			this.backgroundColor = t || 0, this.backgroundColorSplit = d.hex2rgb(this.backgroundColor);
			var e = this.backgroundColor.toString(16);
			e = "000000".substr(0, 6 - e.length) + e, this.backgroundColorString = "#" + e
		}, d.Stage.prototype.getMousePosition = function() {
			return this.interactionManager.mouse.global
		},
		function(t) {
			for (var e = 0, i = ["ms", "moz", "webkit", "o"], r = 0; r < i.length && !t.requestAnimationFrame; ++r) t.requestAnimationFrame = t[i[r] + "RequestAnimationFrame"], t.cancelAnimationFrame = t[i[r] + "CancelAnimationFrame"] || t[i[r] + "CancelRequestAnimationFrame"];
			t.requestAnimationFrame || (t.requestAnimationFrame = function(i) {
				var r = (new Date).getTime(),
					n = Math.max(0, 16 - (r - e)),
					s = t.setTimeout(function() {
						i(r + n)
					}, n);
				return e = r + n, s
			}), t.cancelAnimationFrame || (t.cancelAnimationFrame = function(t) {
				clearTimeout(t)
			}), t.requestAnimFrame = t.requestAnimationFrame
		}(this), d.hex2rgb = function(t) {
			return [(t >> 16 & 255) / 255, (t >> 8 & 255) / 255, (255 & t) / 255]
		}, d.rgb2hex = function(t) {
			return (255 * t[0] << 16) + (255 * t[1] << 8) + 255 * t[2]
		}, "function" != typeof Function.prototype.bind && (Function.prototype.bind = function() {
			return function(t) {
				function e() {
					for (var r = arguments.length, s = new Array(r); r--;) s[r] = arguments[r];
					return s = n.concat(s), i.apply(this instanceof e ? this : t, s)
				}
				var i = this,
					r = arguments.length - 1,
					n = [];
				if (r > 0)
					for (n.length = r; r--;) n[r] = arguments[r + 1];
				if ("function" != typeof i) throw new TypeError;
				return e.prototype = function s(t) {
					return t && (s.prototype = t), this instanceof s ? void 0 : new s
				}(i.prototype), e
			}
		}()), d.AjaxRequest = function() {
			var t = ["Msxml2.XMLHTTP.6.0", "Msxml2.XMLHTTP.3.0", "Microsoft.XMLHTTP"];
			if (!window.ActiveXObject) return window.XMLHttpRequest ? new window.XMLHttpRequest : !1;
			for (var e = 0; e < t.length; e++) try {
				return new window.ActiveXObject(t[e])
			} catch (i) {}
		}, d.canUseNewCanvasBlendModes = function() {
			if ("undefined" == typeof document) return !1;
			var t = document.createElement("canvas");
			t.width = 1, t.height = 1;
			var e = t.getContext("2d");
			return e.fillStyle = "#000", e.fillRect(0, 0, 1, 1), e.globalCompositeOperation = "multiply", e.fillStyle = "#fff", e.fillRect(0, 0, 1, 1), 0 === e.getImageData(0, 0, 1, 1).data[0]
		}, d.getNextPowerOfTwo = function(t) {
			if (t > 0 && 0 === (t & t - 1)) return t;
			for (var e = 1; t > e;) e <<= 1;
			return e
		}, d.isPowerOfTwo = function(t, e) {
			return t > 0 && 0 === (t & t - 1) && e > 0 && 0 === (e & e - 1)
		}, d.PolyK = {}, d.PolyK.Triangulate = function(t) {
			var e = !0,
				i = t.length >> 1;
			if (3 > i) return [];
			for (var r = [], n = [], s = 0; i > s; s++) n.push(s);
			s = 0;
			for (var a = i; a > 3;) {
				var o = n[(s + 0) % a],
					h = n[(s + 1) % a],
					l = n[(s + 2) % a],
					c = t[2 * o],
					u = t[2 * o + 1],
					f = t[2 * h],
					p = t[2 * h + 1],
					g = t[2 * l],
					v = t[2 * l + 1],
					m = !1;
				if (d.PolyK._convex(c, u, f, p, g, v, e)) {
					m = !0;
					for (var y = 0; a > y; y++) {
						var x = n[y];
						if (x !== o && x !== h && x !== l && d.PolyK._PointInTriangle(t[2 * x], t[2 * x + 1], c, u, f, p, g, v)) {
							m = !1;
							break
						}
					}
				}
				if (m) r.push(o, h, l), n.splice((s + 1) % a, 1), a--, s = 0;
				else if (s++ > 3 * a) {
					if (!e) return null;
					for (r = [], n = [], s = 0; i > s; s++) n.push(s);
					s = 0, a = i, e = !1
				}
			}
			return r.push(n[0], n[1], n[2]), r
		}, d.PolyK._PointInTriangle = function(t, e, i, r, n, s, a, o) {
			var h = a - i,
				l = o - r,
				c = n - i,
				d = s - r,
				u = t - i,
				f = e - r,
				p = h * h + l * l,
				g = h * c + l * d,
				v = h * u + l * f,
				m = c * c + d * d,
				y = c * u + d * f,
				x = 1 / (p * m - g * g),
				w = (m * v - g * y) * x,
				b = (p * y - g * v) * x;
			return w >= 0 && b >= 0 && 1 > w + b
		}, d.PolyK._convex = function(t, e, i, r, n, s, a) {
			return (e - r) * (n - i) + (i - t) * (s - r) >= 0 === a
		}, d.EventTarget = {
			call: function(t) {
				t && (t = t.prototype || t, d.EventTarget.mixin(t))
			},
			mixin: function(t) {
				t.listeners = function(t) {
					return this._listeners = this._listeners || {}, this._listeners[t] ? this._listeners[t].slice() : []
				}, t.emit = t.dispatchEvent = function(t, e) {
					if (this._listeners = this._listeners || {}, "object" == typeof t && (e = t, t = t.type), e && e.__isEventObject === !0 || (e = new d.Event(this, t, e)), this._listeners && this._listeners[t]) {
						var i, r = this._listeners[t].slice(0),
							n = r.length,
							s = r[0];
						for (i = 0; n > i; s = r[++i])
							if (s.call(this, e), e.stoppedImmediate) return this;
						if (e.stopped) return this
					}
					return this.parent && this.parent.emit && this.parent.emit.call(this.parent, t, e), this
				}, t.on = t.addEventListener = function(t, e) {
					return this._listeners = this._listeners || {}, (this._listeners[t] = this._listeners[t] || []).push(e), this
				}, t.once = function(t, e) {
					function i() {
						e.apply(r.off(t, i), arguments)
					}
					this._listeners = this._listeners || {};
					var r = this;
					return i._originalHandler = e, this.on(t, i)
				}, t.off = t.removeEventListener = function(t, e) {
					if (this._listeners = this._listeners || {}, !this._listeners[t]) return this;
					for (var i = this._listeners[t], r = e ? i.length : 0; r-- > 0;)(i[r] === e || i[r]._originalHandler === e) && i.splice(r, 1);
					return 0 === i.length && delete this._listeners[t], this
				}, t.removeAllListeners = function(t) {
					return this._listeners = this._listeners || {}, this._listeners[t] ? (delete this._listeners[t], this) : this
				}
			}
		}, d.Event = function(t, e, i) {
			this.__isEventObject = !0, this.stopped = !1, this.stoppedImmediate = !1, this.target = t, this.type = e, this.data = i, this.content = i, this.timeStamp = Date.now()
		}, d.Event.prototype.stopPropagation = function() {
			this.stopped = !0
		}, d.Event.prototype.stopImmediatePropagation = function() {
			this.stoppedImmediate = !0
		}, d.autoDetectRenderer = function(t, e, i) {
			t || (t = 800), e || (e = 600);
			var r = function() {
				try {
					var t = document.createElement("canvas");
					return !!window.WebGLRenderingContext && (t.getContext("webgl") || t.getContext("experimental-webgl"))
				} catch (e) {
					return !1
				}
			}();
			return r ? new d.WebGLRenderer(t, e, i) : new d.CanvasRenderer(t, e, i)
		}, d.autoDetectRecommendedRenderer = function(t, e, i) {
			t || (t = 800), e || (e = 600);
			var r = function() {
					try {
						var t = document.createElement("canvas");
						return !!window.WebGLRenderingContext && (t.getContext("webgl") || t.getContext("experimental-webgl"))
					} catch (e) {
						return !1
					}
				}(),
				n = /Android/i.test(navigator.userAgent);
			return r && !n ? new d.WebGLRenderer(t, e, i) : new d.CanvasRenderer(t, e, i)
		}, d.initDefaultShaders = function() {}, d.CompileVertexShader = function(t, e) {
			return d._CompileShader(t, e, t.VERTEX_SHADER)
		}, d.CompileFragmentShader = function(t, e) {
			return d._CompileShader(t, e, t.FRAGMENT_SHADER)
		}, d._CompileShader = function(t, e, i) {
			var r = e.join("\n"),
				n = t.createShader(i);
			return t.shaderSource(n, r), t.compileShader(n), t.getShaderParameter(n, t.COMPILE_STATUS) ? n : (window.console.log(t.getShaderInfoLog(n)), null)
		}, d.compileProgram = function(t, e, i) {
			var r = d.CompileFragmentShader(t, i),
				n = d.CompileVertexShader(t, e),
				s = t.createProgram();
			return t.attachShader(s, n), t.attachShader(s, r), t.linkProgram(s), t.getProgramParameter(s, t.LINK_STATUS) || window.console.log("Could not initialise shaders"), s
		}, d.PixiShader = function(t) {
			this._UID = d._UID++, this.gl = t, this.program = null, this.fragmentSrc = ["precision lowp float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;", "}"], this.textureCount = 0, this.firstRun = !0, this.dirty = !0, this.attributes = [], this.init()
		}, d.PixiShader.prototype.constructor = d.PixiShader, d.PixiShader.prototype.init = function() {
			var t = this.gl,
				e = d.compileProgram(t, this.vertexSrc || d.PixiShader.defaultVertexSrc, this.fragmentSrc);
			t.useProgram(e), this.uSampler = t.getUniformLocation(e, "uSampler"), this.projectionVector = t.getUniformLocation(e, "projectionVector"), this.offsetVector = t.getUniformLocation(e, "offsetVector"), this.dimensions = t.getUniformLocation(e, "dimensions"), this.aVertexPosition = t.getAttribLocation(e, "aVertexPosition"), this.aTextureCoord = t.getAttribLocation(e, "aTextureCoord"), this.colorAttribute = t.getAttribLocation(e, "aColor"), -1 === this.colorAttribute && (this.colorAttribute = 2), this.attributes = [this.aVertexPosition, this.aTextureCoord, this.colorAttribute];
			for (var i in this.uniforms) this.uniforms[i].uniformLocation = t.getUniformLocation(e, i);
			this.initUniforms(), this.program = e
		}, d.PixiShader.prototype.initUniforms = function() {
			this.textureCount = 1;
			var t, e = this.gl;
			for (var i in this.uniforms) {
				t = this.uniforms[i];
				var r = t.type;
				"sampler2D" === r ? (t._init = !1, null !== t.value && this.initSampler2D(t)) : "mat2" === r || "mat3" === r || "mat4" === r ? (t.glMatrix = !0, t.glValueLength = 1, "mat2" === r ? t.glFunc = e.uniformMatrix2fv : "mat3" === r ? t.glFunc = e.uniformMatrix3fv : "mat4" === r && (t.glFunc = e.uniformMatrix4fv)) : (t.glFunc = e["uniform" + r], "2f" === r || "2i" === r ? t.glValueLength = 2 : "3f" === r || "3i" === r ? t.glValueLength = 3 : "4f" === r || "4i" === r ? t.glValueLength = 4 : t.glValueLength = 1)
			}
		}, d.PixiShader.prototype.initSampler2D = function(t) {
			if (t.value && t.value.baseTexture && t.value.baseTexture.hasLoaded) {
				var e = this.gl;
				if (e.activeTexture(e["TEXTURE" + this.textureCount]), e.bindTexture(e.TEXTURE_2D, t.value.baseTexture._glTextures[e.id]), t.textureData) {
					var i = t.textureData,
						r = i.magFilter ? i.magFilter : e.LINEAR,
						n = i.minFilter ? i.minFilter : e.LINEAR,
						s = i.wrapS ? i.wrapS : e.CLAMP_TO_EDGE,
						a = i.wrapT ? i.wrapT : e.CLAMP_TO_EDGE,
						o = i.luminance ? e.LUMINANCE : e.RGBA;
					if (i.repeat && (s = e.REPEAT, a = e.REPEAT), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, !!i.flipY), i.width) {
						var h = i.width ? i.width : 512,
							l = i.height ? i.height : 2,
							c = i.border ? i.border : 0;
						e.texImage2D(e.TEXTURE_2D, 0, o, h, l, c, o, e.UNSIGNED_BYTE, null)
					} else e.texImage2D(e.TEXTURE_2D, 0, o, e.RGBA, e.UNSIGNED_BYTE, t.value.baseTexture.source);
					e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, r), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, n), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, s), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, a)
				}
				e.uniform1i(t.uniformLocation, this.textureCount), t._init = !0, this.textureCount++
			}
		}, d.PixiShader.prototype.syncUniforms = function() {
			this.textureCount = 1;
			var t, e = this.gl;
			for (var i in this.uniforms) t = this.uniforms[i], 1 === t.glValueLength ? t.glMatrix === !0 ? t.glFunc.call(e, t.uniformLocation, t.transpose, t.value) : t.glFunc.call(e, t.uniformLocation, t.value) : 2 === t.glValueLength ? t.glFunc.call(e, t.uniformLocation, t.value.x, t.value.y) : 3 === t.glValueLength ? t.glFunc.call(e, t.uniformLocation, t.value.x, t.value.y, t.value.z) : 4 === t.glValueLength ? t.glFunc.call(e, t.uniformLocation, t.value.x, t.value.y, t.value.z, t.value.w) : "sampler2D" === t.type && (t._init ? (e.activeTexture(e["TEXTURE" + this.textureCount]), t.value.baseTexture._dirty[e.id] ? d.instances[e.id].updateTexture(t.value.baseTexture) : e.bindTexture(e.TEXTURE_2D, t.value.baseTexture._glTextures[e.id]), e.uniform1i(t.uniformLocation, this.textureCount), this.textureCount++) : this.initSampler2D(t))
		}, d.PixiShader.prototype.destroy = function() {
			this.gl.deleteProgram(this.program), this.uniforms = null, this.gl = null, this.attributes = null
		}, d.PixiShader.defaultVertexSrc = ["attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "attribute vec4 aColor;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "const vec2 center = vec2(-1.0, 1.0);", "void main(void) {", "   gl_Position = vec4( ((aVertexPosition + offsetVector) / projectionVector) + center , 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "   vColor = vec4(aColor.rgb * aColor.a, aColor.a);", "}"], d.PixiFastShader = function(t) {
			this._UID = d._UID++, this.gl = t, this.program = null, this.fragmentSrc = ["precision lowp float;", "varying vec2 vTextureCoord;", "varying float vColor;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;", "}"], this.vertexSrc = ["attribute vec2 aVertexPosition;", "attribute vec2 aPositionCoord;", "attribute vec2 aScale;", "attribute float aRotation;", "attribute vec2 aTextureCoord;", "attribute float aColor;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "uniform mat3 uMatrix;", "varying vec2 vTextureCoord;", "varying float vColor;", "const vec2 center = vec2(-1.0, 1.0);", "void main(void) {", "   vec2 v;", "   vec2 sv = aVertexPosition * aScale;", "   v.x = (sv.x) * cos(aRotation) - (sv.y) * sin(aRotation);", "   v.y = (sv.x) * sin(aRotation) + (sv.y) * cos(aRotation);", "   v = ( uMatrix * vec3(v + aPositionCoord , 1.0) ).xy ;", "   gl_Position = vec4( ( v / projectionVector) + center , 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "   vColor = aColor;", "}"], this.textureCount = 0, this.init()
		}, d.PixiFastShader.prototype.constructor = d.PixiFastShader, d.PixiFastShader.prototype.init = function() {
			var t = this.gl,
				e = d.compileProgram(t, this.vertexSrc, this.fragmentSrc);
			t.useProgram(e), this.uSampler = t.getUniformLocation(e, "uSampler"),
				this.projectionVector = t.getUniformLocation(e, "projectionVector"), this.offsetVector = t.getUniformLocation(e, "offsetVector"), this.dimensions = t.getUniformLocation(e, "dimensions"), this.uMatrix = t.getUniformLocation(e, "uMatrix"), this.aVertexPosition = t.getAttribLocation(e, "aVertexPosition"), this.aPositionCoord = t.getAttribLocation(e, "aPositionCoord"), this.aScale = t.getAttribLocation(e, "aScale"), this.aRotation = t.getAttribLocation(e, "aRotation"), this.aTextureCoord = t.getAttribLocation(e, "aTextureCoord"), this.colorAttribute = t.getAttribLocation(e, "aColor"), -1 === this.colorAttribute && (this.colorAttribute = 2), this.attributes = [this.aVertexPosition, this.aPositionCoord, this.aScale, this.aRotation, this.aTextureCoord, this.colorAttribute], this.program = e
		}, d.PixiFastShader.prototype.destroy = function() {
			this.gl.deleteProgram(this.program), this.uniforms = null, this.gl = null, this.attributes = null
		}, d.StripShader = function(t) {
			this._UID = d._UID++, this.gl = t, this.program = null, this.fragmentSrc = ["precision mediump float;", "varying vec2 vTextureCoord;", "uniform float alpha;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * alpha;", "}"], this.vertexSrc = ["attribute vec2 aVertexPosition;", "attribute vec2 aTextureCoord;", "uniform mat3 translationMatrix;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "varying vec2 vTextureCoord;", "void main(void) {", "   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);", "   v -= offsetVector.xyx;", "   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);", "   vTextureCoord = aTextureCoord;", "}"], this.init()
		}, d.StripShader.prototype.constructor = d.StripShader, d.StripShader.prototype.init = function() {
			var t = this.gl,
				e = d.compileProgram(t, this.vertexSrc, this.fragmentSrc);
			t.useProgram(e), this.uSampler = t.getUniformLocation(e, "uSampler"), this.projectionVector = t.getUniformLocation(e, "projectionVector"), this.offsetVector = t.getUniformLocation(e, "offsetVector"), this.colorAttribute = t.getAttribLocation(e, "aColor"), this.aVertexPosition = t.getAttribLocation(e, "aVertexPosition"), this.aTextureCoord = t.getAttribLocation(e, "aTextureCoord"), this.attributes = [this.aVertexPosition, this.aTextureCoord], this.translationMatrix = t.getUniformLocation(e, "translationMatrix"), this.alpha = t.getUniformLocation(e, "alpha"), this.program = e
		}, d.StripShader.prototype.destroy = function() {
			this.gl.deleteProgram(this.program), this.uniforms = null, this.gl = null, this.attribute = null
		}, d.PrimitiveShader = function(t) {
			this._UID = d._UID++, this.gl = t, this.program = null, this.fragmentSrc = ["precision mediump float;", "varying vec4 vColor;", "void main(void) {", "   gl_FragColor = vColor;", "}"], this.vertexSrc = ["attribute vec2 aVertexPosition;", "attribute vec4 aColor;", "uniform mat3 translationMatrix;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "uniform float alpha;", "uniform float flipY;", "uniform vec3 tint;", "varying vec4 vColor;", "void main(void) {", "   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);", "   v -= offsetVector.xyx;", "   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);", "   vColor = aColor * vec4(tint * alpha, alpha);", "}"], this.init()
		}, d.PrimitiveShader.prototype.constructor = d.PrimitiveShader, d.PrimitiveShader.prototype.init = function() {
			var t = this.gl,
				e = d.compileProgram(t, this.vertexSrc, this.fragmentSrc);
			t.useProgram(e), this.projectionVector = t.getUniformLocation(e, "projectionVector"), this.offsetVector = t.getUniformLocation(e, "offsetVector"), this.tintColor = t.getUniformLocation(e, "tint"), this.flipY = t.getUniformLocation(e, "flipY"), this.aVertexPosition = t.getAttribLocation(e, "aVertexPosition"), this.colorAttribute = t.getAttribLocation(e, "aColor"), this.attributes = [this.aVertexPosition, this.colorAttribute], this.translationMatrix = t.getUniformLocation(e, "translationMatrix"), this.alpha = t.getUniformLocation(e, "alpha"), this.program = e
		}, d.PrimitiveShader.prototype.destroy = function() {
			this.gl.deleteProgram(this.program), this.uniforms = null, this.gl = null, this.attributes = null
		}, d.ComplexPrimitiveShader = function(t) {
			this._UID = d._UID++, this.gl = t, this.program = null, this.fragmentSrc = ["precision mediump float;", "varying vec4 vColor;", "void main(void) {", "   gl_FragColor = vColor;", "}"], this.vertexSrc = ["attribute vec2 aVertexPosition;", "uniform mat3 translationMatrix;", "uniform vec2 projectionVector;", "uniform vec2 offsetVector;", "uniform vec3 tint;", "uniform float alpha;", "uniform vec3 color;", "uniform float flipY;", "varying vec4 vColor;", "void main(void) {", "   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);", "   v -= offsetVector.xyx;", "   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);", "   vColor = vec4(color * alpha * tint, alpha);", "}"], this.init()
		}, d.ComplexPrimitiveShader.prototype.constructor = d.ComplexPrimitiveShader, d.ComplexPrimitiveShader.prototype.init = function() {
			var t = this.gl,
				e = d.compileProgram(t, this.vertexSrc, this.fragmentSrc);
			t.useProgram(e), this.projectionVector = t.getUniformLocation(e, "projectionVector"), this.offsetVector = t.getUniformLocation(e, "offsetVector"), this.tintColor = t.getUniformLocation(e, "tint"), this.color = t.getUniformLocation(e, "color"), this.flipY = t.getUniformLocation(e, "flipY"), this.aVertexPosition = t.getAttribLocation(e, "aVertexPosition"), this.attributes = [this.aVertexPosition, this.colorAttribute], this.translationMatrix = t.getUniformLocation(e, "translationMatrix"), this.alpha = t.getUniformLocation(e, "alpha"), this.program = e
		}, d.ComplexPrimitiveShader.prototype.destroy = function() {
			this.gl.deleteProgram(this.program), this.uniforms = null, this.gl = null, this.attribute = null
		}, d.WebGLGraphics = function() {}, d.WebGLGraphics.renderGraphics = function(t, e) {
			var i, r = e.gl,
				n = e.projection,
				s = e.offset,
				a = e.shaderManager.primitiveShader;
			t.dirty && d.WebGLGraphics.updateGraphics(t, r);
			for (var o = t._webGL[r.id], h = 0; h < o.data.length; h++) 1 === o.data[h].mode ? (i = o.data[h], e.stencilManager.pushStencil(t, i, e), r.drawElements(r.TRIANGLE_FAN, 4, r.UNSIGNED_SHORT, 2 * (i.indices.length - 4)), e.stencilManager.popStencil(t, i, e)) : (i = o.data[h], e.shaderManager.setShader(a), a = e.shaderManager.primitiveShader, r.uniformMatrix3fv(a.translationMatrix, !1, t.worldTransform.toArray(!0)), r.uniform1f(a.flipY, 1), r.uniform2f(a.projectionVector, n.x, -n.y), r.uniform2f(a.offsetVector, -s.x, -s.y), r.uniform3fv(a.tintColor, d.hex2rgb(t.tint)), r.uniform1f(a.alpha, t.worldAlpha), r.bindBuffer(r.ARRAY_BUFFER, i.buffer), r.vertexAttribPointer(a.aVertexPosition, 2, r.FLOAT, !1, 24, 0), r.vertexAttribPointer(a.colorAttribute, 4, r.FLOAT, !1, 24, 8), r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, i.indexBuffer), r.drawElements(r.TRIANGLE_STRIP, i.indices.length, r.UNSIGNED_SHORT, 0))
		}, d.WebGLGraphics.updateGraphics = function(t, e) {
			var i = t._webGL[e.id];
			i || (i = t._webGL[e.id] = {
				lastIndex: 0,
				data: [],
				gl: e
			}), t.dirty = !1;
			var r;
			if (t.clearDirty) {
				for (t.clearDirty = !1, r = 0; r < i.data.length; r++) {
					var n = i.data[r];
					n.reset(), d.WebGLGraphics.graphicsDataPool.push(n)
				}
				i.data = [], i.lastIndex = 0
			}
			var s;
			for (r = i.lastIndex; r < t.graphicsData.length; r++) {
				var a = t.graphicsData[r];
				if (a.type === d.Graphics.POLY) {
					if (a.points = a.shape.points.slice(), a.shape.closed && (a.points[0] !== a.points[a.points.length - 2] || a.points[1] !== a.points[a.points.length - 1]) && a.points.push(a.points[0], a.points[1]), a.fill && a.points.length >= 6)
						if (a.points.length < 12) {
							s = d.WebGLGraphics.switchMode(i, 0);
							var o = d.WebGLGraphics.buildPoly(a, s);
							o || (s = d.WebGLGraphics.switchMode(i, 1), d.WebGLGraphics.buildComplexPoly(a, s))
						} else s = d.WebGLGraphics.switchMode(i, 1), d.WebGLGraphics.buildComplexPoly(a, s);
					a.lineWidth > 0 && (s = d.WebGLGraphics.switchMode(i, 0), d.WebGLGraphics.buildLine(a, s))
				} else s = d.WebGLGraphics.switchMode(i, 0), a.type === d.Graphics.RECT ? d.WebGLGraphics.buildRectangle(a, s) : a.type === d.Graphics.CIRC || a.type === d.Graphics.ELIP ? d.WebGLGraphics.buildCircle(a, s) : a.type === d.Graphics.RREC && d.WebGLGraphics.buildRoundedRectangle(a, s);
				i.lastIndex++
			}
			for (r = 0; r < i.data.length; r++) s = i.data[r], s.dirty && s.upload()
		}, d.WebGLGraphics.switchMode = function(t, e) {
			var i;
			return t.data.length ? (i = t.data[t.data.length - 1], (i.mode !== e || 1 === e) && (i = d.WebGLGraphics.graphicsDataPool.pop() || new d.WebGLGraphicsData(t.gl), i.mode = e, t.data.push(i))) : (i = d.WebGLGraphics.graphicsDataPool.pop() || new d.WebGLGraphicsData(t.gl), i.mode = e, t.data.push(i)), i.dirty = !0, i
		}, d.WebGLGraphics.buildRectangle = function(t, e) {
			var i = t.shape,
				r = i.x,
				n = i.y,
				s = i.width,
				a = i.height;
			if (t.fill) {
				var o = d.hex2rgb(t.fillColor),
					h = t.fillAlpha,
					l = o[0] * h,
					c = o[1] * h,
					u = o[2] * h,
					f = e.points,
					p = e.indices,
					g = f.length / 6;
				f.push(r, n), f.push(l, c, u, h), f.push(r + s, n), f.push(l, c, u, h), f.push(r, n + a), f.push(l, c, u, h), f.push(r + s, n + a), f.push(l, c, u, h), p.push(g, g, g + 1, g + 2, g + 3, g + 3)
			}
			if (t.lineWidth) {
				var v = t.points;
				t.points = [r, n, r + s, n, r + s, n + a, r, n + a, r, n], d.WebGLGraphics.buildLine(t, e), t.points = v
			}
		}, d.WebGLGraphics.buildRoundedRectangle = function(t, e) {
			var i = t.shape,
				r = i.x,
				n = i.y,
				s = i.width,
				a = i.height,
				o = i.radius,
				h = [];
			if (h.push(r, n + o), h = h.concat(d.WebGLGraphics.quadraticBezierCurve(r, n + a - o, r, n + a, r + o, n + a)), h = h.concat(d.WebGLGraphics.quadraticBezierCurve(r + s - o, n + a, r + s, n + a, r + s, n + a - o)), h = h.concat(d.WebGLGraphics.quadraticBezierCurve(r + s, n + o, r + s, n, r + s - o, n)), h = h.concat(d.WebGLGraphics.quadraticBezierCurve(r + o, n, r, n, r, n + o)), t.fill) {
				var l = d.hex2rgb(t.fillColor),
					c = t.fillAlpha,
					u = l[0] * c,
					f = l[1] * c,
					p = l[2] * c,
					g = e.points,
					v = e.indices,
					m = g.length / 6,
					y = d.PolyK.Triangulate(h),
					x = 0;
				for (x = 0; x < y.length; x += 3) v.push(y[x] + m), v.push(y[x] + m), v.push(y[x + 1] + m), v.push(y[x + 2] + m), v.push(y[x + 2] + m);
				for (x = 0; x < h.length; x++) g.push(h[x], h[++x], u, f, p, c)
			}
			if (t.lineWidth) {
				var w = t.points;
				t.points = h, d.WebGLGraphics.buildLine(t, e), t.points = w
			}
		}, d.WebGLGraphics.quadraticBezierCurve = function(t, e, i, r, n, s) {
			function a(t, e, i) {
				var r = e - t;
				return t + r * i
			}
			for (var o, h, l, c, d, u, f = 20, p = [], g = 0, v = 0; f >= v; v++) g = v / f, o = a(t, i, g), h = a(e, r, g), l = a(i, n, g), c = a(r, s, g), d = a(o, l, g), u = a(h, c, g), p.push(d, u);
			return p
		}, d.WebGLGraphics.buildCircle = function(t, e) {
			var i, r, n = t.shape,
				s = n.x,
				a = n.y;
			t.type === d.Graphics.CIRC ? (i = n.radius, r = n.radius) : (i = n.width, r = n.height);
			var o = 40,
				h = 2 * Math.PI / o,
				l = 0;
			if (t.fill) {
				var c = d.hex2rgb(t.fillColor),
					u = t.fillAlpha,
					f = c[0] * u,
					p = c[1] * u,
					g = c[2] * u,
					v = e.points,
					m = e.indices,
					y = v.length / 6;
				for (m.push(y), l = 0; o + 1 > l; l++) v.push(s, a, f, p, g, u), v.push(s + Math.sin(h * l) * i, a + Math.cos(h * l) * r, f, p, g, u), m.push(y++, y++);
				m.push(y - 1)
			}
			if (t.lineWidth) {
				var x = t.points;
				for (t.points = [], l = 0; o + 1 > l; l++) t.points.push(s + Math.sin(h * l) * i, a + Math.cos(h * l) * r);
				d.WebGLGraphics.buildLine(t, e), t.points = x
			}
		}, d.WebGLGraphics.buildLine = function(t, e) {
			var i = 0,
				r = t.points;
			if (0 !== r.length) {
				if (t.lineWidth % 2)
					for (i = 0; i < r.length; i++) r[i] += .5;
				var n = new d.Point(r[0], r[1]),
					s = new d.Point(r[r.length - 2], r[r.length - 1]);
				if (n.x === s.x && n.y === s.y) {
					r = r.slice(), r.pop(), r.pop(), s = new d.Point(r[r.length - 2], r[r.length - 1]);
					var a = s.x + .5 * (n.x - s.x),
						o = s.y + .5 * (n.y - s.y);
					r.unshift(a, o), r.push(a, o)
				}
				var h, l, c, u, f, p, g, v, m, y, x, w, b, T, C, S, M, E, R, _, A, L, B, P = e.points,
					G = e.indices,
					D = r.length / 2,
					F = r.length,
					O = P.length / 6,
					I = t.lineWidth / 2,
					U = d.hex2rgb(t.lineColor),
					W = t.lineAlpha,
					N = U[0] * W,
					k = U[1] * W,
					j = U[2] * W;
				for (c = r[0], u = r[1], f = r[2], p = r[3], m = -(u - p), y = c - f, B = Math.sqrt(m * m + y * y), m /= B, y /= B, m *= I, y *= I, P.push(c - m, u - y, N, k, j, W), P.push(c + m, u + y, N, k, j, W), i = 1; D - 1 > i; i++) c = r[2 * (i - 1)], u = r[2 * (i - 1) + 1], f = r[2 * i], p = r[2 * i + 1], g = r[2 * (i + 1)], v = r[2 * (i + 1) + 1], m = -(u - p), y = c - f, B = Math.sqrt(m * m + y * y), m /= B, y /= B, m *= I, y *= I, x = -(p - v), w = f - g, B = Math.sqrt(x * x + w * w), x /= B, w /= B, x *= I, w *= I, C = -y + u - (-y + p), S = -m + f - (-m + c), M = (-m + c) * (-y + p) - (-m + f) * (-y + u), E = -w + v - (-w + p), R = -x + f - (-x + g), _ = (-x + g) * (-w + p) - (-x + f) * (-w + v), A = C * R - E * S, Math.abs(A) < .1 ? (A += 10.1, P.push(f - m, p - y, N, k, j, W), P.push(f + m, p + y, N, k, j, W)) : (h = (S * _ - R * M) / A, l = (E * M - C * _) / A, L = (h - f) * (h - f) + (l - p) + (l - p), L > 19600 ? (b = m - x, T = y - w, B = Math.sqrt(b * b + T * T), b /= B, T /= B, b *= I, T *= I, P.push(f - b, p - T), P.push(N, k, j, W), P.push(f + b, p + T), P.push(N, k, j, W), P.push(f - b, p - T), P.push(N, k, j, W), F++) : (P.push(h, l), P.push(N, k, j, W), P.push(f - (h - f), p - (l - p)), P.push(N, k, j, W)));
				for (c = r[2 * (D - 2)], u = r[2 * (D - 2) + 1], f = r[2 * (D - 1)], p = r[2 * (D - 1) + 1], m = -(u - p), y = c - f, B = Math.sqrt(m * m + y * y), m /= B, y /= B, m *= I, y *= I, P.push(f - m, p - y), P.push(N, k, j, W), P.push(f + m, p + y), P.push(N, k, j, W), G.push(O), i = 0; F > i; i++) G.push(O++);
				G.push(O - 1)
			}
		}, d.WebGLGraphics.buildComplexPoly = function(t, e) {
			var i = t.points.slice();
			if (!(i.length < 6)) {
				var r = e.indices;
				e.points = i, e.alpha = t.fillAlpha, e.color = d.hex2rgb(t.fillColor);
				for (var n, s, a = 1 / 0, o = -(1 / 0), h = 1 / 0, l = -(1 / 0), c = 0; c < i.length; c += 2) n = i[c], s = i[c + 1], a = a > n ? n : a, o = n > o ? n : o, h = h > s ? s : h, l = s > l ? s : l;
				i.push(a, h, o, h, o, l, a, l);
				var u = i.length / 2;
				for (c = 0; u > c; c++) r.push(c)
			}
		}, d.WebGLGraphics.buildPoly = function(t, e) {
			var i = t.points;
			if (!(i.length < 6)) {
				var r = e.points,
					n = e.indices,
					s = i.length / 2,
					a = d.hex2rgb(t.fillColor),
					o = t.fillAlpha,
					h = a[0] * o,
					l = a[1] * o,
					c = a[2] * o,
					u = d.PolyK.Triangulate(i);
				if (!u) return !1;
				var f = r.length / 6,
					p = 0;
				for (p = 0; p < u.length; p += 3) n.push(u[p] + f), n.push(u[p] + f), n.push(u[p + 1] + f), n.push(u[p + 2] + f), n.push(u[p + 2] + f);
				for (p = 0; s > p; p++) r.push(i[2 * p], i[2 * p + 1], h, l, c, o);
				return !0
			}
		}, d.WebGLGraphics.graphicsDataPool = [], d.WebGLGraphicsData = function(t) {
			this.gl = t, this.color = [0, 0, 0], this.points = [], this.indices = [], this.buffer = t.createBuffer(), this.indexBuffer = t.createBuffer(), this.mode = 1, this.alpha = 1, this.dirty = !0
		}, d.WebGLGraphicsData.prototype.reset = function() {
			this.points = [], this.indices = []
		}, d.WebGLGraphicsData.prototype.upload = function() {
			var t = this.gl;
			this.glPoints = new d.Float32Array(this.points), t.bindBuffer(t.ARRAY_BUFFER, this.buffer), t.bufferData(t.ARRAY_BUFFER, this.glPoints, t.STATIC_DRAW), this.glIndicies = new d.Uint16Array(this.indices), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer), t.bufferData(t.ELEMENT_ARRAY_BUFFER, this.glIndicies, t.STATIC_DRAW), this.dirty = !1
		}, d.glContexts = [], d.instances = [], d.WebGLRenderer = function(t, e, i) {
			if (i)
				for (var r in d.defaultRenderOptions) "undefined" == typeof i[r] && (i[r] = d.defaultRenderOptions[r]);
			else i = d.defaultRenderOptions;
			d.defaultRenderer || (d.sayHello("webGL"), d.defaultRenderer = this), this.type = d.WEBGL_RENDERER, this.resolution = i.resolution, this.transparent = i.transparent, this.autoResize = i.autoResize || !1, this.preserveDrawingBuffer = i.preserveDrawingBuffer, this.clearBeforeRender = i.clearBeforeRender, this.width = t || 800, this.height = e || 600, this.view = i.view || document.createElement("canvas"), this.contextLostBound = this.handleContextLost.bind(this), this.contextRestoredBound = this.handleContextRestored.bind(this), this.view.addEventListener("webglcontextlost", this.contextLostBound, !1), this.view.addEventListener("webglcontextrestored", this.contextRestoredBound, !1), this._contextOptions = {
				alpha: this.transparent,
				antialias: i.antialias,
				premultipliedAlpha: this.transparent && "notMultiplied" !== this.transparent,
				stencil: !0,
				preserveDrawingBuffer: i.preserveDrawingBuffer
			}, this.projection = new d.Point, this.offset = new d.Point(0, 0), this.shaderManager = new d.WebGLShaderManager, this.spriteBatch = new d.WebGLSpriteBatch, this.maskManager = new d.WebGLMaskManager, this.filterManager = new d.WebGLFilterManager, this.stencilManager = new d.WebGLStencilManager, this.blendModeManager = new d.WebGLBlendModeManager, this.renderSession = {
				roundPixels: !0
			}, this.renderSession.gl = this.gl, this.renderSession.drawCount = 0, this.renderSession.shaderManager = this.shaderManager, this.renderSession.maskManager = this.maskManager, this.renderSession.filterManager = this.filterManager, this.renderSession.blendModeManager = this.blendModeManager, this.renderSession.spriteBatch = this.spriteBatch, this.renderSession.stencilManager = this.stencilManager, this.renderSession.renderer = this, this.renderSession.resolution = this.resolution, this.initContext(), this.mapBlendModes()
		}, d.WebGLRenderer.prototype.constructor = d.WebGLRenderer, d.WebGLRenderer.prototype.initContext = function() {
			var t = this.view.getContext("webgl", this._contextOptions) || this.view.getContext("experimental-webgl", this._contextOptions);
			if (this.gl = t, !t) throw new Error("This browser does not support webGL. Try using the canvas renderer");
			this.glContextId = t.id = d.WebGLRenderer.glContextId++, d.glContexts[this.glContextId] = t, d.instances[this.glContextId] = this, t.disable(t.DEPTH_TEST), t.disable(t.CULL_FACE), t.enable(t.BLEND), this.shaderManager.setContext(t), this.spriteBatch.setContext(t), this.maskManager.setContext(t), this.filterManager.setContext(t), this.blendModeManager.setContext(t), this.stencilManager.setContext(t), this.renderSession.gl = this.gl, this.resize(this.width, this.height)
		}, d.WebGLRenderer.prototype.render = function(t) {
			if (!this.contextLost) {
				this.__stage !== t && (t.interactive && t.interactionManager.removeEvents(), this.__stage = t), t.updateTransform();
				var e = this.gl;
				t._interactiveEventsAdded || (t._interactiveEventsAdded = !0, t.interactionManager.setTarget(this)), e.viewport(0, 0, this.width, this.height), e.bindFramebuffer(e.FRAMEBUFFER, null), this.renderDisplayObject(t, this.projection)
			}
		}, d.WebGLRenderer.prototype.renderDisplayObject = function(t, e, i) {
			this.renderSession.blendModeManager.setBlendMode(d.blendModes.NORMAL), this.renderSession.drawCount = 0, this.renderSession.flipY = i ? -1 : 1, this.renderSession.projection = e, this.renderSession.offset = this.offset, this.spriteBatch.begin(this.renderSession), this.filterManager.begin(this.renderSession, i), t._renderWebGL(this.renderSession), this.spriteBatch.end()
		}, d.WebGLRenderer.prototype.resize = function(t, e) {
			this.width = t * this.resolution, this.height = e * this.resolution, this.view.width = this.width, this.view.height = this.height, this.gl.viewport(0, 0, this.width, this.height), this.projection.x = this.width / 2 / this.resolution, this.projection.y = -this.height / 2 / this.resolution
		}, d.WebGLRenderer.prototype.updateTexture = function(t) {
			if (t.hasLoaded) {
				var e = this.gl;
				return t._glTextures[e.id] || (t._glTextures[e.id] = e.createTexture()), e.bindTexture(e.TEXTURE_2D, t._glTextures[e.id]), e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, t.premultipliedAlpha), e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, t.source), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, t.scaleMode === d.scaleModes.LINEAR ? e.LINEAR : e.NEAREST), t.mipmap && d.isPowerOfTwo(t.width, t.height) ? (e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, t.scaleMode === d.scaleModes.LINEAR ? e.LINEAR_MIPMAP_LINEAR : e.NEAREST_MIPMAP_NEAREST), e.generateMipmap(e.TEXTURE_2D)) : e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, t.scaleMode === d.scaleModes.LINEAR ? e.LINEAR : e.NEAREST), t._powerOf2 ? (e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.REPEAT), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.REPEAT)) : (e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE)), t._dirty[e.id] = !1, t._glTextures[e.id]
			}
		}, d.WebGLRenderer.prototype.handleContextLost = function(t) {
			t.preventDefault(), this.contextLost = !0
		}, d.WebGLRenderer.prototype.handleContextRestored = function() {
			this.initContext();
			for (var t in d.TextureCache) {
				var e = d.TextureCache[t].baseTexture;
				e._glTextures = []
			}
			this.contextLost = !1
		}, d.WebGLRenderer.prototype.destroy = function() {
			this.view.removeEventListener("webglcontextlost", this.contextLostBound), this.view.removeEventListener("webglcontextrestored", this.contextRestoredBound), d.glContexts[this.glContextId] = null, this.projection = null, this.offset = null, this.shaderManager.destroy(), this.spriteBatch.destroy(), this.maskManager.destroy(), this.filterManager.destroy(), this.shaderManager = null, this.spriteBatch = null, this.maskManager = null, this.filterManager = null, this.gl = null, this.renderSession = null
		}, d.WebGLRenderer.prototype.mapBlendModes = function() {
			var t = this.gl;
			d.blendModesWebGL || (d.blendModesWebGL = [], d.blendModesWebGL[d.blendModes.NORMAL] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.ADD] = [t.SRC_ALPHA, t.DST_ALPHA], d.blendModesWebGL[d.blendModes.MULTIPLY] = [t.DST_COLOR, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.SCREEN] = [t.SRC_ALPHA, t.ONE], d.blendModesWebGL[d.blendModes.OVERLAY] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.DARKEN] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.LIGHTEN] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.COLOR_DODGE] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.COLOR_BURN] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.HARD_LIGHT] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.SOFT_LIGHT] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.DIFFERENCE] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.EXCLUSION] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.HUE] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.SATURATION] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.COLOR] = [t.ONE, t.ONE_MINUS_SRC_ALPHA], d.blendModesWebGL[d.blendModes.LUMINOSITY] = [t.ONE, t.ONE_MINUS_SRC_ALPHA])
		}, d.WebGLRenderer.glContextId = 0, d.WebGLBlendModeManager = function() {
			this.currentBlendMode = 99999
		}, d.WebGLBlendModeManager.prototype.constructor = d.WebGLBlendModeManager, d.WebGLBlendModeManager.prototype.setContext = function(t) {
			this.gl = t
		}, d.WebGLBlendModeManager.prototype.setBlendMode = function(t) {
			if (this.currentBlendMode === t) return !1;
			this.currentBlendMode = t;
			var e = d.blendModesWebGL[this.currentBlendMode];
			return this.gl.blendFunc(e[0], e[1]), !0
		}, d.WebGLBlendModeManager.prototype.destroy = function() {
			this.gl = null
		}, d.WebGLMaskManager = function() {}, d.WebGLMaskManager.prototype.constructor = d.WebGLMaskManager, d.WebGLMaskManager.prototype.setContext = function(t) {
			this.gl = t
		}, d.WebGLMaskManager.prototype.pushMask = function(t, e) {
			var i = e.gl;
			t.dirty && d.WebGLGraphics.updateGraphics(t, i), t._webGL[i.id].data.length && e.stencilManager.pushStencil(t, t._webGL[i.id].data[0], e)
		}, d.WebGLMaskManager.prototype.popMask = function(t, e) {
			var i = this.gl;
			e.stencilManager.popStencil(t, t._webGL[i.id].data[0], e)
		}, d.WebGLMaskManager.prototype.destroy = function() {
			this.gl = null
		}, d.WebGLStencilManager = function() {
			this.stencilStack = [], this.reverse = !0, this.count = 0
		}, d.WebGLStencilManager.prototype.setContext = function(t) {
			this.gl = t
		}, d.WebGLStencilManager.prototype.pushStencil = function(t, e, i) {
			var r = this.gl;
			this.bindGraphics(t, e, i), 0 === this.stencilStack.length && (r.enable(r.STENCIL_TEST), r.clear(r.STENCIL_BUFFER_BIT), this.reverse = !0, this.count = 0), this.stencilStack.push(e);
			var n = this.count;
			r.colorMask(!1, !1, !1, !1), r.stencilFunc(r.ALWAYS, 0, 255), r.stencilOp(r.KEEP, r.KEEP, r.INVERT), 1 === e.mode ? (r.drawElements(r.TRIANGLE_FAN, e.indices.length - 4, r.UNSIGNED_SHORT, 0), this.reverse ? (r.stencilFunc(r.EQUAL, 255 - n, 255), r.stencilOp(r.KEEP, r.KEEP, r.DECR)) : (r.stencilFunc(r.EQUAL, n, 255), r.stencilOp(r.KEEP, r.KEEP, r.INCR)), r.drawElements(r.TRIANGLE_FAN, 4, r.UNSIGNED_SHORT, 2 * (e.indices.length - 4)), this.reverse ? r.stencilFunc(r.EQUAL, 255 - (n + 1), 255) : r.stencilFunc(r.EQUAL, n + 1, 255), this.reverse = !this.reverse) : (this.reverse ? (r.stencilFunc(r.EQUAL, n, 255), r.stencilOp(r.KEEP, r.KEEP, r.INCR)) : (r.stencilFunc(r.EQUAL, 255 - n, 255), r.stencilOp(r.KEEP, r.KEEP, r.DECR)), r.drawElements(r.TRIANGLE_STRIP, e.indices.length, r.UNSIGNED_SHORT, 0), this.reverse ? r.stencilFunc(r.EQUAL, n + 1, 255) : r.stencilFunc(r.EQUAL, 255 - (n + 1), 255)), r.colorMask(!0, !0, !0, !0), r.stencilOp(r.KEEP, r.KEEP, r.KEEP), this.count++
		}, d.WebGLStencilManager.prototype.bindGraphics = function(t, e, i) {
			this._currentGraphics = t;
			var r, n = this.gl,
				s = i.projection,
				a = i.offset;
			1 === e.mode ? (r = i.shaderManager.complexPrimitiveShader, i.shaderManager.setShader(r), n.uniform1f(r.flipY, i.flipY), n.uniformMatrix3fv(r.translationMatrix, !1, t.worldTransform.toArray(!0)), n.uniform2f(r.projectionVector, s.x, -s.y), n.uniform2f(r.offsetVector, -a.x, -a.y), n.uniform3fv(r.tintColor, d.hex2rgb(t.tint)), n.uniform3fv(r.color, e.color), n.uniform1f(r.alpha, t.worldAlpha * e.alpha), n.bindBuffer(n.ARRAY_BUFFER, e.buffer), n.vertexAttribPointer(r.aVertexPosition, 2, n.FLOAT, !1, 8, 0), n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, e.indexBuffer)) : (r = i.shaderManager.primitiveShader, i.shaderManager.setShader(r), n.uniformMatrix3fv(r.translationMatrix, !1, t.worldTransform.toArray(!0)), n.uniform1f(r.flipY, i.flipY), n.uniform2f(r.projectionVector, s.x, -s.y), n.uniform2f(r.offsetVector, -a.x, -a.y), n.uniform3fv(r.tintColor, d.hex2rgb(t.tint)), n.uniform1f(r.alpha, t.worldAlpha), n.bindBuffer(n.ARRAY_BUFFER, e.buffer), n.vertexAttribPointer(r.aVertexPosition, 2, n.FLOAT, !1, 24, 0), n.vertexAttribPointer(r.colorAttribute, 4, n.FLOAT, !1, 24, 8), n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, e.indexBuffer))
		}, d.WebGLStencilManager.prototype.popStencil = function(t, e, i) {
			var r = this.gl;
			if (this.stencilStack.pop(), this.count--, 0 === this.stencilStack.length) r.disable(r.STENCIL_TEST);
			else {
				var n = this.count;
				this.bindGraphics(t, e, i), r.colorMask(!1, !1, !1, !1), 1 === e.mode ? (this.reverse = !this.reverse, this.reverse ? (r.stencilFunc(r.EQUAL, 255 - (n + 1), 255), r.stencilOp(r.KEEP, r.KEEP, r.INCR)) : (r.stencilFunc(r.EQUAL, n + 1, 255), r.stencilOp(r.KEEP, r.KEEP, r.DECR)), r.drawElements(r.TRIANGLE_FAN, 4, r.UNSIGNED_SHORT, 2 * (e.indices.length - 4)), r.stencilFunc(r.ALWAYS, 0, 255), r.stencilOp(r.KEEP, r.KEEP, r.INVERT), r.drawElements(r.TRIANGLE_FAN, e.indices.length - 4, r.UNSIGNED_SHORT, 0), this.reverse ? r.stencilFunc(r.EQUAL, n, 255) : r.stencilFunc(r.EQUAL, 255 - n, 255)) : (this.reverse ? (r.stencilFunc(r.EQUAL, n + 1, 255), r.stencilOp(r.KEEP, r.KEEP, r.DECR)) : (r.stencilFunc(r.EQUAL, 255 - (n + 1), 255), r.stencilOp(r.KEEP, r.KEEP, r.INCR)), r.drawElements(r.TRIANGLE_STRIP, e.indices.length, r.UNSIGNED_SHORT, 0), this.reverse ? r.stencilFunc(r.EQUAL, n, 255) : r.stencilFunc(r.EQUAL, 255 - n, 255)), r.colorMask(!0, !0, !0, !0), r.stencilOp(r.KEEP, r.KEEP, r.KEEP)
			}
		}, d.WebGLStencilManager.prototype.destroy = function() {
			this.stencilStack = null, this.gl = null
		}, d.WebGLShaderManager = function() {
			this.maxAttibs = 10, this.attribState = [], this.tempAttribState = [];
			for (var t = 0; t < this.maxAttibs; t++) this.attribState[t] = !1;
			this.stack = []
		}, d.WebGLShaderManager.prototype.constructor = d.WebGLShaderManager, d.WebGLShaderManager.prototype.setContext = function(t) {
			this.gl = t, this.primitiveShader = new d.PrimitiveShader(t), this.complexPrimitiveShader = new d.ComplexPrimitiveShader(t), this.defaultShader = new d.PixiShader(t), this.fastShader = new d.PixiFastShader(t), this.stripShader = new d.StripShader(t), this.setShader(this.defaultShader)
		}, d.WebGLShaderManager.prototype.setAttribs = function(t) {
			var e;
			for (e = 0; e < this.tempAttribState.length; e++) this.tempAttribState[e] = !1;
			for (e = 0; e < t.length; e++) {
				var i = t[e];
				this.tempAttribState[i] = !0
			}
			var r = this.gl;
			for (e = 0; e < this.attribState.length; e++) this.attribState[e] !== this.tempAttribState[e] && (this.attribState[e] = this.tempAttribState[e], this.tempAttribState[e] ? r.enableVertexAttribArray(e) : r.disableVertexAttribArray(e))
		}, d.WebGLShaderManager.prototype.setShader = function(t) {
			return this._currentId === t._UID ? !1 : (this._currentId = t._UID, this.currentShader = t, this.gl.useProgram(t.program), this.setAttribs(t.attributes), !0)
		}, d.WebGLShaderManager.prototype.destroy = function() {
			this.attribState = null, this.tempAttribState = null, this.primitiveShader.destroy(), this.complexPrimitiveShader.destroy(), this.defaultShader.destroy(), this.fastShader.destroy(), this.stripShader.destroy(), this.gl = null
		}, d.WebGLSpriteBatch = function() {
			this.vertSize = 5, this.size = 2e3;
			var t = 4 * this.size * 4 * this.vertSize,
				e = 6 * this.size;
			this.vertices = new d.ArrayBuffer(t), this.positions = new d.Float32Array(this.vertices), this.colors = new d.Uint32Array(this.vertices), this.indices = new d.Uint16Array(e), this.lastIndexCount = 0;
			for (var i = 0, r = 0; e > i; i += 6, r += 4) this.indices[i + 0] = r + 0, this.indices[i + 1] = r + 1, this.indices[i + 2] = r + 2, this.indices[i + 3] = r + 0, this.indices[i + 4] = r + 2, this.indices[i + 5] = r + 3;
			this.drawing = !1, this.currentBatchSize = 0, this.currentBaseTexture = null, this.dirty = !0, this.textures = [], this.blendModes = [], this.shaders = [], this.sprites = [], this.defaultShader = new d.AbstractFilter(["precision lowp float;", "varying vec2 vTextureCoord;", "varying vec4 vColor;", "uniform sampler2D uSampler;", "void main(void) {", "   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;", "}"])
		}, d.WebGLSpriteBatch.prototype.setContext = function(t) {
			this.gl = t, this.vertexBuffer = t.createBuffer(), this.indexBuffer = t.createBuffer(), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer), t.bufferData(t.ELEMENT_ARRAY_BUFFER, this.indices, t.STATIC_DRAW), t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer), t.bufferData(t.ARRAY_BUFFER, this.vertices, t.DYNAMIC_DRAW), this.currentBlendMode = 99999;
			var e = new d.PixiShader(t);
			e.fragmentSrc = this.defaultShader.fragmentSrc, e.uniforms = {}, e.init(), this.defaultShader.shaders[t.id] = e
		}, d.WebGLSpriteBatch.prototype.begin = function(t) {
			this.renderSession = t, this.shader = this.renderSession.shaderManager.defaultShader, this.start()
		}, d.WebGLSpriteBatch.prototype.end = function() {
			this.flush()
		}, d.WebGLSpriteBatch.prototype.render = function(t) {
			var e = t.texture;
			this.currentBatchSize >= this.size && (this.flush(), this.currentBaseTexture = e.baseTexture);
			var i = e._uvs;
			if (i) {
				var r, n, s, a, o = t.anchor.x,
					h = t.anchor.y;
				if (e.trim) {
					var l = e.trim;
					n = l.x - o * l.width, r = n + e.crop.width, a = l.y - h * l.height, s = a + e.crop.height
				} else r = e.frame.width * (1 - o), n = e.frame.width * -o, s = e.frame.height * (1 - h), a = e.frame.height * -h;
				var c = 4 * this.currentBatchSize * this.vertSize,
					d = e.baseTexture.resolution,
					u = t.worldTransform,
					f = u.a / d,
					p = u.b / d,
					g = u.c / d,
					v = u.d / d,
					m = u.tx,
					y = u.ty,
					x = this.colors,
					w = this.positions;
				w[c] = f * n + g * a + m | 0, w[c + 1] = v * a + p * n + y | 0, w[c + 5] = f * r + g * a + m | 0, w[c + 6] = v * a + p * r + y | 0, w[c + 10] = f * r + g * s + m | 0, w[c + 11] = v * s + p * r + y | 0, w[c + 15] = f * n + g * s + m | 0, w[c + 16] = v * s + p * n + y | 0, w[c + 2] = i.x0, w[c + 3] = i.y0, w[c + 7] = i.x1, w[c + 8] = i.y1, w[c + 12] = i.x2, w[c + 13] = i.y2, w[c + 17] = i.x3, w[c + 18] = i.y3;
				var b = t.tint;
				x[c + 4] = x[c + 9] = x[c + 14] = x[c + 19] = (b >> 16) + (65280 & b) + ((255 & b) << 16) + (255 * t.worldAlpha << 24), this.sprites[this.currentBatchSize++] = t
			}
		}, d.WebGLSpriteBatch.prototype.renderTilingSprite = function(t) {
			var e = t.tilingTexture;
			this.currentBatchSize >= this.size && (this.flush(), this.currentBaseTexture = e.baseTexture), t._uvs || (t._uvs = new d.TextureUvs);
			var i = t._uvs;
			t.tilePosition.x %= e.baseTexture.width * t.tileScaleOffset.x, t.tilePosition.y %= e.baseTexture.height * t.tileScaleOffset.y;
			var r = t.tilePosition.x / (e.baseTexture.width * t.tileScaleOffset.x),
				n = t.tilePosition.y / (e.baseTexture.height * t.tileScaleOffset.y),
				s = t.width / e.baseTexture.width / (t.tileScale.x * t.tileScaleOffset.x),
				a = t.height / e.baseTexture.height / (t.tileScale.y * t.tileScaleOffset.y);
			i.x0 = 0 - r, i.y0 = 0 - n, i.x1 = 1 * s - r, i.y1 = 0 - n, i.x2 = 1 * s - r, i.y2 = 1 * a - n, i.x3 = 0 - r, i.y3 = 1 * a - n;
			var o = t.tint,
				h = (o >> 16) + (65280 & o) + ((255 & o) << 16) + (255 * t.alpha << 24),
				l = this.positions,
				c = this.colors,
				u = t.width,
				f = t.height,
				p = t.anchor.x,
				g = t.anchor.y,
				v = u * (1 - p),
				m = u * -p,
				y = f * (1 - g),
				x = f * -g,
				w = 4 * this.currentBatchSize * this.vertSize,
				b = e.baseTexture.resolution,
				T = t.worldTransform,
				C = T.a / b,
				S = T.b / b,
				M = T.c / b,
				E = T.d / b,
				R = T.tx,
				_ = T.ty;
			l[w++] = C * m + M * x + R, l[w++] = E * x + S * m + _, l[w++] = i.x0, l[w++] = i.y0, c[w++] = h, l[w++] = C * v + M * x + R, l[w++] = E * x + S * v + _, l[w++] = i.x1, l[w++] = i.y1, c[w++] = h, l[w++] = C * v + M * y + R, l[w++] = E * y + S * v + _, l[w++] = i.x2, l[w++] = i.y2, c[w++] = h, l[w++] = C * m + M * y + R, l[w++] = E * y + S * m + _, l[w++] = i.x3, l[w++] = i.y3, c[w++] = h, this.sprites[this.currentBatchSize++] = t
		}, d.WebGLSpriteBatch.prototype.flush = function() {
			if (0 !== this.currentBatchSize) {
				var t, e = this.gl;
				if (this.dirty) {
					this.dirty = !1, e.activeTexture(e.TEXTURE0), e.bindBuffer(e.ARRAY_BUFFER, this.vertexBuffer), e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, this.indexBuffer), t = this.defaultShader.shaders[e.id];
					var i = 4 * this.vertSize;
					e.vertexAttribPointer(t.aVertexPosition, 2, e.FLOAT, !1, i, 0), e.vertexAttribPointer(t.aTextureCoord, 2, e.FLOAT, !1, i, 8), e.vertexAttribPointer(t.colorAttribute, 4, e.UNSIGNED_BYTE, !0, i, 16)
				}
				if (this.currentBatchSize > .5 * this.size) e.bufferSubData(e.ARRAY_BUFFER, 0, this.vertices);
				else {
					var r = this.positions.subarray(0, 4 * this.currentBatchSize * this.vertSize);
					e.bufferSubData(e.ARRAY_BUFFER, 0, r)
				}
				for (var n, s, a, o, h = 0, l = 0, c = null, u = this.renderSession.blendModeManager.currentBlendMode, f = null, p = !1, g = !1, v = 0, m = this.currentBatchSize; m > v; v++) {
					if (o = this.sprites[v], n = o.texture.baseTexture, s = o.blendMode, a = o.shader || this.defaultShader, p = u !== s, g = f !== a, (c !== n || p || g) && (this.renderBatch(c, h, l), l = v, h = 0, c = n, p && (u = s, this.renderSession.blendModeManager.setBlendMode(u)), g)) {
						f = a, t = f.shaders[e.id], t || (t = new d.PixiShader(e), t.fragmentSrc = f.fragmentSrc, t.uniforms = f.uniforms, t.init(), f.shaders[e.id] = t), this.renderSession.shaderManager.setShader(t), t.dirty && t.syncUniforms();
						var y = this.renderSession.projection;
						e.uniform2f(t.projectionVector, y.x, y.y);
						var x = this.renderSession.offset;
						e.uniform2f(t.offsetVector, x.x, x.y)
					}
					h++
				}
				this.renderBatch(c, h, l), this.currentBatchSize = 0
			}
		}, d.WebGLSpriteBatch.prototype.renderBatch = function(t, e, i) {
			if (0 !== e) {
				var r = this.gl;
				t._dirty[r.id] ? this.renderSession.renderer.updateTexture(t) : r.bindTexture(r.TEXTURE_2D, t._glTextures[r.id]), r.drawElements(r.TRIANGLES, 6 * e, r.UNSIGNED_SHORT, 6 * i * 2), this.renderSession.drawCount++
			}
		}, d.WebGLSpriteBatch.prototype.stop = function() {
			this.flush(), this.dirty = !0
		}, d.WebGLSpriteBatch.prototype.start = function() {
			this.dirty = !0
		}, d.WebGLSpriteBatch.prototype.destroy = function() {
			this.vertices = null, this.indices = null, this.gl.deleteBuffer(this.vertexBuffer), this.gl.deleteBuffer(this.indexBuffer), this.currentBaseTexture = null, this.gl = null
		}, d.WebGLFastSpriteBatch = function(t) {
			this.vertSize = 10, this.maxSize = 6e3, this.size = this.maxSize;
			var e = 4 * this.size * this.vertSize,
				i = 6 * this.maxSize;
			this.vertices = new d.Float32Array(e), this.indices = new d.Uint16Array(i), this.vertexBuffer = null, this.indexBuffer = null, this.lastIndexCount = 0;
			for (var r = 0, n = 0; i > r; r += 6, n += 4) this.indices[r + 0] = n + 0, this.indices[r + 1] = n + 1, this.indices[r + 2] = n + 2, this.indices[r + 3] = n + 0, this.indices[r + 4] = n + 2, this.indices[r + 5] = n + 3;
			this.drawing = !1, this.currentBatchSize = 0, this.currentBaseTexture = null, this.currentBlendMode = 0, this.renderSession = null, this.shader = null, this.matrix = null, this.setContext(t)
		}, d.WebGLFastSpriteBatch.prototype.constructor = d.WebGLFastSpriteBatch, d.WebGLFastSpriteBatch.prototype.setContext = function(t) {
			this.gl = t, this.vertexBuffer = t.createBuffer(), this.indexBuffer = t.createBuffer(), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer), t.bufferData(t.ELEMENT_ARRAY_BUFFER, this.indices, t.STATIC_DRAW), t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer), t.bufferData(t.ARRAY_BUFFER, this.vertices, t.DYNAMIC_DRAW)
		}, d.WebGLFastSpriteBatch.prototype.begin = function(t, e) {
			this.renderSession = e, this.shader = this.renderSession.shaderManager.fastShader, this.matrix = t.worldTransform.toArray(!0), this.start()
		}, d.WebGLFastSpriteBatch.prototype.end = function() {
			this.flush()
		}, d.WebGLFastSpriteBatch.prototype.render = function(t) {
			var e = t.children,
				i = e[0];
			if (i.texture._uvs) {
				this.currentBaseTexture = i.texture.baseTexture, i.blendMode !== this.renderSession.blendModeManager.currentBlendMode && (this.flush(), this.renderSession.blendModeManager.setBlendMode(i.blendMode));
				for (var r = 0, n = e.length; n > r; r++) this.renderSprite(e[r]);
				this.flush()
			}
		}, d.WebGLFastSpriteBatch.prototype.renderSprite = function(t) {
			if (t.visible && (t.texture.baseTexture === this.currentBaseTexture || (this.flush(), this.currentBaseTexture = t.texture.baseTexture, t.texture._uvs))) {
				var e, i, r, n, s, a, o, h, l = this.vertices;
				if (e = t.texture._uvs, i = t.texture.frame.width, r = t.texture.frame.height, t.texture.trim) {
					var c = t.texture.trim;
					s = c.x - t.anchor.x * c.width, n = s + t.texture.crop.width, o = c.y - t.anchor.y * c.height, a = o + t.texture.crop.height
				} else n = t.texture.frame.width * (1 - t.anchor.x), s = t.texture.frame.width * -t.anchor.x, a = t.texture.frame.height * (1 - t.anchor.y), o = t.texture.frame.height * -t.anchor.y;
				h = 4 * this.currentBatchSize * this.vertSize, l[h++] = s, l[h++] = o, l[h++] = t.position.x, l[h++] = t.position.y, l[h++] = t.scale.x, l[h++] = t.scale.y, l[h++] = t.rotation, l[h++] = e.x0, l[h++] = e.y1, l[h++] = t.alpha, l[h++] = n, l[h++] = o, l[h++] = t.position.x, l[h++] = t.position.y, l[h++] = t.scale.x, l[h++] = t.scale.y, l[h++] = t.rotation, l[h++] = e.x1, l[h++] = e.y1, l[h++] = t.alpha, l[h++] = n, l[h++] = a, l[h++] = t.position.x, l[h++] = t.position.y, l[h++] = t.scale.x, l[h++] = t.scale.y, l[h++] = t.rotation, l[h++] = e.x2, l[h++] = e.y2, l[h++] = t.alpha, l[h++] = s, l[h++] = a, l[h++] = t.position.x, l[h++] = t.position.y, l[h++] = t.scale.x, l[h++] = t.scale.y, l[h++] = t.rotation, l[h++] = e.x3, l[h++] = e.y3, l[h++] = t.alpha, this.currentBatchSize++, this.currentBatchSize >= this.size && this.flush()
			}
		}, d.WebGLFastSpriteBatch.prototype.flush = function() {
			if (0 !== this.currentBatchSize) {
				var t = this.gl;
				if (this.currentBaseTexture._glTextures[t.id] || this.renderSession.renderer.updateTexture(this.currentBaseTexture, t), t.bindTexture(t.TEXTURE_2D, this.currentBaseTexture._glTextures[t.id]), this.currentBatchSize > .5 * this.size) t.bufferSubData(t.ARRAY_BUFFER, 0, this.vertices);
				else {
					var e = this.vertices.subarray(0, 4 * this.currentBatchSize * this.vertSize);
					t.bufferSubData(t.ARRAY_BUFFER, 0, e)
				}
				t.drawElements(t.TRIANGLES, 6 * this.currentBatchSize, t.UNSIGNED_SHORT, 0), this.currentBatchSize = 0, this.renderSession.drawCount++
			}
		}, d.WebGLFastSpriteBatch.prototype.stop = function() {
			this.flush()
		}, d.WebGLFastSpriteBatch.prototype.start = function() {
			var t = this.gl;
			t.activeTexture(t.TEXTURE0), t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer);
			var e = this.renderSession.projection;
			t.uniform2f(this.shader.projectionVector, e.x, e.y), t.uniformMatrix3fv(this.shader.uMatrix, !1, this.matrix);
			var i = 4 * this.vertSize;
			t.vertexAttribPointer(this.shader.aVertexPosition, 2, t.FLOAT, !1, i, 0), t.vertexAttribPointer(this.shader.aPositionCoord, 2, t.FLOAT, !1, i, 8), t.vertexAttribPointer(this.shader.aScale, 2, t.FLOAT, !1, i, 16), t.vertexAttribPointer(this.shader.aRotation, 1, t.FLOAT, !1, i, 24), t.vertexAttribPointer(this.shader.aTextureCoord, 2, t.FLOAT, !1, i, 28), t.vertexAttribPointer(this.shader.colorAttribute, 1, t.FLOAT, !1, i, 36)
		}, d.WebGLFilterManager = function() {
			this.filterStack = [], this.offsetX = 0, this.offsetY = 0
		}, d.WebGLFilterManager.prototype.constructor = d.WebGLFilterManager, d.WebGLFilterManager.prototype.setContext = function(t) {
			this.gl = t, this.texturePool = [], this.initShaderBuffers()
		}, d.WebGLFilterManager.prototype.begin = function(t, e) {
			this.renderSession = t, this.defaultShader = t.shaderManager.defaultShader;
			var i = this.renderSession.projection;
			this.width = 2 * i.x, this.height = 2 * -i.y, this.buffer = e
		}, d.WebGLFilterManager.prototype.pushFilter = function(t) {
			var e = this.gl,
				i = this.renderSession.projection,
				r = this.renderSession.offset;
			t._filterArea = t.target.filterArea || t.target.getBounds(), this.filterStack.push(t);
			var n = t.filterPasses[0];
			this.offsetX += t._filterArea.x, this.offsetY += t._filterArea.y;
			var s = this.texturePool.pop();
			s ? s.resize(this.width, this.height) : s = new d.FilterTexture(this.gl, this.width, this.height), e.bindTexture(e.TEXTURE_2D, s.texture);
			var a = t._filterArea,
				o = n.padding;
			a.x -= o, a.y -= o, a.width += 2 * o, a.height += 2 * o, a.x < 0 && (a.x = 0), a.width > this.width && (a.width = this.width), a.y < 0 && (a.y = 0), a.height > this.height && (a.height = this.height), e.bindFramebuffer(e.FRAMEBUFFER, s.frameBuffer), e.viewport(0, 0, a.width, a.height), i.x = a.width / 2, i.y = -a.height / 2, r.x = -a.x, r.y = -a.y, e.colorMask(!0, !0, !0, !0), e.clearColor(0, 0, 0, 0), e.clear(e.COLOR_BUFFER_BIT), t._glFilterTexture = s
		}, d.WebGLFilterManager.prototype.popFilter = function() {
			var t = this.gl,
				e = this.filterStack.pop(),
				i = e._filterArea,
				r = e._glFilterTexture,
				n = this.renderSession.projection,
				s = this.renderSession.offset;
			if (e.filterPasses.length > 1) {
				t.viewport(0, 0, i.width, i.height), t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer), this.vertexArray[0] = 0, this.vertexArray[1] = i.height, this.vertexArray[2] = i.width, this.vertexArray[3] = i.height, this.vertexArray[4] = 0, this.vertexArray[5] = 0, this.vertexArray[6] = i.width, this.vertexArray[7] = 0, t.bufferSubData(t.ARRAY_BUFFER, 0, this.vertexArray), t.bindBuffer(t.ARRAY_BUFFER, this.uvBuffer), this.uvArray[2] = i.width / this.width, this.uvArray[5] = i.height / this.height, this.uvArray[6] = i.width / this.width, this.uvArray[7] = i.height / this.height, t.bufferSubData(t.ARRAY_BUFFER, 0, this.uvArray);
				var a = r,
					o = this.texturePool.pop();
				o || (o = new d.FilterTexture(this.gl, this.width, this.height)), o.resize(this.width, this.height), t.bindFramebuffer(t.FRAMEBUFFER, o.frameBuffer), t.clear(t.COLOR_BUFFER_BIT), t.disable(t.BLEND);
				for (var h = 0; h < e.filterPasses.length - 1; h++) {
					var l = e.filterPasses[h];
					t.bindFramebuffer(t.FRAMEBUFFER, o.frameBuffer), t.activeTexture(t.TEXTURE0), t.bindTexture(t.TEXTURE_2D, a.texture), this.applyFilterPass(l, i, i.width, i.height);
					var c = a;
					a = o, o = c
				}
				t.enable(t.BLEND), r = a, this.texturePool.push(o)
			}
			var u = e.filterPasses[e.filterPasses.length - 1];
			this.offsetX -= i.x, this.offsetY -= i.y;
			var f = this.width,
				p = this.height,
				g = 0,
				v = 0,
				m = this.buffer;
			if (0 === this.filterStack.length) t.colorMask(!0, !0, !0, !0);
			else {
				var y = this.filterStack[this.filterStack.length - 1];
				i = y._filterArea, f = i.width, p = i.height, g = i.x, v = i.y, m = y._glFilterTexture.frameBuffer
			}
			n.x = f / 2, n.y = -p / 2, s.x = g, s.y = v, i = e._filterArea;
			var x = i.x - g,
				w = i.y - v;
			t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer), this.vertexArray[0] = x, this.vertexArray[1] = w + i.height, this.vertexArray[2] = x + i.width, this.vertexArray[3] = w + i.height, this.vertexArray[4] = x, this.vertexArray[5] = w, this.vertexArray[6] = x + i.width, this.vertexArray[7] = w, t.bufferSubData(t.ARRAY_BUFFER, 0, this.vertexArray), t.bindBuffer(t.ARRAY_BUFFER, this.uvBuffer), this.uvArray[2] = i.width / this.width, this.uvArray[5] = i.height / this.height, this.uvArray[6] = i.width / this.width, this.uvArray[7] = i.height / this.height, t.bufferSubData(t.ARRAY_BUFFER, 0, this.uvArray), t.viewport(0, 0, f, p), t.bindFramebuffer(t.FRAMEBUFFER, m), t.activeTexture(t.TEXTURE0), t.bindTexture(t.TEXTURE_2D, r.texture), this.applyFilterPass(u, i, f, p), this.texturePool.push(r), e._glFilterTexture = null
		}, d.WebGLFilterManager.prototype.applyFilterPass = function(t, e, i, r) {
			var n = this.gl,
				s = t.shaders[n.id];
			s || (s = new d.PixiShader(n), s.fragmentSrc = t.fragmentSrc, s.uniforms = t.uniforms, s.init(), t.shaders[n.id] = s), this.renderSession.shaderManager.setShader(s), n.uniform2f(s.projectionVector, i / 2, -r / 2), n.uniform2f(s.offsetVector, 0, 0), t.uniforms.dimensions && (t.uniforms.dimensions.value[0] = this.width, t.uniforms.dimensions.value[1] = this.height, t.uniforms.dimensions.value[2] = this.vertexArray[0], t.uniforms.dimensions.value[3] = this.vertexArray[5]), s.syncUniforms(), n.bindBuffer(n.ARRAY_BUFFER, this.vertexBuffer), n.vertexAttribPointer(s.aVertexPosition, 2, n.FLOAT, !1, 0, 0), n.bindBuffer(n.ARRAY_BUFFER, this.uvBuffer), n.vertexAttribPointer(s.aTextureCoord, 2, n.FLOAT, !1, 0, 0), n.bindBuffer(n.ARRAY_BUFFER, this.colorBuffer), n.vertexAttribPointer(s.colorAttribute, 2, n.FLOAT, !1, 0, 0), n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, this.indexBuffer), n.drawElements(n.TRIANGLES, 6, n.UNSIGNED_SHORT, 0), this.renderSession.drawCount++
		}, d.WebGLFilterManager.prototype.initShaderBuffers = function() {
			var t = this.gl;
			this.vertexBuffer = t.createBuffer(), this.uvBuffer = t.createBuffer(), this.colorBuffer = t.createBuffer(), this.indexBuffer = t.createBuffer(), this.vertexArray = new d.Float32Array([0, 0, 1, 0, 0, 1, 1, 1]), t.bindBuffer(t.ARRAY_BUFFER, this.vertexBuffer), t.bufferData(t.ARRAY_BUFFER, this.vertexArray, t.STATIC_DRAW), this.uvArray = new d.Float32Array([0, 0, 1, 0, 0, 1, 1, 1]), t.bindBuffer(t.ARRAY_BUFFER, this.uvBuffer), t.bufferData(t.ARRAY_BUFFER, this.uvArray, t.STATIC_DRAW), this.colorArray = new d.Float32Array([1, 16777215, 1, 16777215, 1, 16777215, 1, 16777215]), t.bindBuffer(t.ARRAY_BUFFER, this.colorBuffer), t.bufferData(t.ARRAY_BUFFER, this.colorArray, t.STATIC_DRAW), t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, this.indexBuffer), t.bufferData(t.ELEMENT_ARRAY_BUFFER, new Uint16Array([0, 1, 2, 1, 3, 2]), t.STATIC_DRAW)
		}, d.WebGLFilterManager.prototype.destroy = function() {
			var t = this.gl;
			this.filterStack = null, this.offsetX = 0, this.offsetY = 0;
			for (var e = 0; e < this.texturePool.length; e++) this.texturePool[e].destroy();
			this.texturePool = null, t.deleteBuffer(this.vertexBuffer), t.deleteBuffer(this.uvBuffer), t.deleteBuffer(this.colorBuffer), t.deleteBuffer(this.indexBuffer)
		}, d.FilterTexture = function(t, e, i, r) {
			this.gl = t, this.frameBuffer = t.createFramebuffer(), this.texture = t.createTexture(), r = r || d.scaleModes.DEFAULT, t.bindTexture(t.TEXTURE_2D, this.texture), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, r === d.scaleModes.LINEAR ? t.LINEAR : t.NEAREST), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, r === d.scaleModes.LINEAR ? t.LINEAR : t.NEAREST), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), t.bindFramebuffer(t.FRAMEBUFFER, this.frameBuffer), t.bindFramebuffer(t.FRAMEBUFFER, this.frameBuffer), t.framebufferTexture2D(t.FRAMEBUFFER, t.COLOR_ATTACHMENT0, t.TEXTURE_2D, this.texture, 0), this.renderBuffer = t.createRenderbuffer(), t.bindRenderbuffer(t.RENDERBUFFER, this.renderBuffer), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, this.renderBuffer), this.resize(e, i)
		}, d.FilterTexture.prototype.constructor = d.FilterTexture, d.FilterTexture.prototype.clear = function() {
			var t = this.gl;
			t.clearColor(0, 0, 0, 0), t.clear(t.COLOR_BUFFER_BIT)
		}, d.FilterTexture.prototype.resize = function(t, e) {
			if (this.width !== t || this.height !== e) {
				this.width = t, this.height = e;
				var i = this.gl;
				i.bindTexture(i.TEXTURE_2D, this.texture), i.texImage2D(i.TEXTURE_2D, 0, i.RGBA, t, e, 0, i.RGBA, i.UNSIGNED_BYTE, null), i.bindRenderbuffer(i.RENDERBUFFER, this.renderBuffer), i.renderbufferStorage(i.RENDERBUFFER, i.DEPTH_STENCIL, t, e)
			}
		}, d.FilterTexture.prototype.destroy = function() {
			var t = this.gl;
			t.deleteFramebuffer(this.frameBuffer), t.deleteTexture(this.texture), this.frameBuffer = null, this.texture = null
		}, d.CanvasBuffer = function(t, e) {
			this.width = t, this.height = e, this.canvas = document.createElement("canvas"), this.context = this.canvas.getContext("2d"), this.canvas.width = t, this.canvas.height = e
		}, d.CanvasBuffer.prototype.constructor = d.CanvasBuffer, d.CanvasBuffer.prototype.clear = function() {
			this.context.setTransform(1, 0, 0, 1, 0, 0), this.context.clearRect(0, 0, this.width, this.height)
		}, d.CanvasBuffer.prototype.resize = function(t, e) {
			this.width = this.canvas.width = t, this.height = this.canvas.height = e
		}, d.CanvasMaskManager = function() {}, d.CanvasMaskManager.prototype.constructor = d.CanvasMaskManager, d.CanvasMaskManager.prototype.pushMask = function(t, e) {
			var i = e.context;
			i.save();
			var r = t.alpha,
				n = t.worldTransform,
				s = e.resolution;
			i.setTransform(n.a * s, n.b * s, n.c * s, n.d * s, n.tx * s, n.ty * s), d.CanvasGraphics.renderGraphicsMask(t, i), i.clip(), t.worldAlpha = r
		}, d.CanvasMaskManager.prototype.popMask = function(t) {
			t.context.restore()
		}, d.CanvasTinter = function() {}, d.CanvasTinter.getTintedTexture = function(t, e) {
			var i = t.texture;
			e = d.CanvasTinter.roundColor(e);
			var r = "#" + ("00000" + (0 | e).toString(16)).substr(-6);
			if (i.tintCache = i.tintCache || {}, i.tintCache[r]) return i.tintCache[r];
			var n = d.CanvasTinter.canvas || document.createElement("canvas");
			if (d.CanvasTinter.tintMethod(i, e, n), d.CanvasTinter.convertTintToImage) {
				var s = new Image;
				s.src = n.toDataURL(), i.tintCache[r] = s
			} else i.tintCache[r] = n, d.CanvasTinter.canvas = null;
			return n
		}, d.CanvasTinter.tintWithMultiply = function(t, e, i) {
			var r = i.getContext("2d"),
				n = t.crop;
			i.width = n.width, i.height = n.height, r.fillStyle = "#" + ("00000" + (0 | e).toString(16)).substr(-6), r.fillRect(0, 0, n.width, n.height), r.globalCompositeOperation = "multiply", r.drawImage(t.baseTexture.source, n.x, n.y, n.width, n.height, 0, 0, n.width, n.height), r.globalCompositeOperation = "destination-atop", r.drawImage(t.baseTexture.source, n.x, n.y, n.width, n.height, 0, 0, n.width, n.height)
		}, d.CanvasTinter.tintWithOverlay = function(t, e, i) {
			var r = i.getContext("2d"),
				n = t.crop;
			i.width = n.width, i.height = n.height, r.globalCompositeOperation = "copy", r.fillStyle = "#" + ("00000" + (0 | e).toString(16)).substr(-6), r.fillRect(0, 0, n.width, n.height), r.globalCompositeOperation = "destination-atop", r.drawImage(t.baseTexture.source, n.x, n.y, n.width, n.height, 0, 0, n.width, n.height)
		}, d.CanvasTinter.tintWithPerPixel = function(t, e, i) {
			var r = i.getContext("2d"),
				n = t.crop;
			i.width = n.width, i.height = n.height, r.globalCompositeOperation = "copy", r.drawImage(t.baseTexture.source, n.x, n.y, n.width, n.height, 0, 0, n.width, n.height);
			for (var s = d.hex2rgb(e), a = s[0], o = s[1], h = s[2], l = r.getImageData(0, 0, n.width, n.height), c = l.data, u = 0; u < c.length; u += 4) c[u + 0] *= a, c[u + 1] *= o, c[u + 2] *= h;
			r.putImageData(l, 0, 0)
		}, d.CanvasTinter.roundColor = function(t) {
			var e = d.CanvasTinter.cacheStepsPerColorChannel,
				i = d.hex2rgb(t);
			return i[0] = Math.min(255, i[0] / e * e), i[1] = Math.min(255, i[1] / e * e), i[2] = Math.min(255, i[2] / e * e), d.rgb2hex(i)
		}, d.CanvasTinter.cacheStepsPerColorChannel = 8, d.CanvasTinter.convertTintToImage = !1, d.CanvasTinter.canUseMultiply = d.canUseNewCanvasBlendModes(), d.CanvasTinter.tintMethod = d.CanvasTinter.canUseMultiply ? d.CanvasTinter.tintWithMultiply : d.CanvasTinter.tintWithPerPixel, d.CanvasRenderer = function(t, e, i) {
			if (i)
				for (var r in d.defaultRenderOptions) "undefined" == typeof i[r] && (i[r] = d.defaultRenderOptions[r]);
			else i = d.defaultRenderOptions;
			d.defaultRenderer || (d.sayHello("Canvas"), d.defaultRenderer = this), this.type = d.CANVAS_RENDERER, this.resolution = i.resolution, this.clearBeforeRender = i.clearBeforeRender, this.transparent = i.transparent, this.autoResize = i.autoResize || !1, this.width = t || 800, this.height = e || 600, this.width *= this.resolution, this.height *= this.resolution, this.view = i.view || document.createElement("canvas"), this.context = this.view.getContext("2d", {
				alpha: this.transparent
			}), this.refresh = !0, this.view.width = this.width * this.resolution, this.view.height = this.height * this.resolution, this.count = 0, this.maskManager = new d.CanvasMaskManager, this.renderSession = {
				context: this.context,
				maskManager: this.maskManager,
				scaleMode: null,
				smoothProperty: null,
				roundPixels: !0
			}, this.mapBlendModes(), this.resize(t, e), "imageSmoothingEnabled" in this.context ? this.renderSession.smoothProperty = "imageSmoothingEnabled" : "webkitImageSmoothingEnabled" in this.context ? this.renderSession.smoothProperty = "webkitImageSmoothingEnabled" : "mozImageSmoothingEnabled" in this.context ? this.renderSession.smoothProperty = "mozImageSmoothingEnabled" : "oImageSmoothingEnabled" in this.context ? this.renderSession.smoothProperty = "oImageSmoothingEnabled" : "msImageSmoothingEnabled" in this.context && (this.renderSession.smoothProperty = "msImageSmoothingEnabled")
		}, d.CanvasRenderer.prototype.constructor = d.CanvasRenderer, d.CanvasRenderer.prototype.render = function(t) {
			t.updateTransform(), this.context.setTransform(1, 0, 0, 1, 0, 0), this.context.globalAlpha = 1, this.renderSession.currentBlendMode = d.blendModes.NORMAL, this.context.globalCompositeOperation = d.blendModesCanvas[d.blendModes.NORMAL], navigator.isCocoonJS && this.view.screencanvas && (this.context.fillStyle = "black", this.context.clear()), this.clearBeforeRender && (this.transparent ? this.context.clearRect(0, 0, this.width, this.height) : (this.context.fillStyle = t.backgroundColorString, this.context.fillRect(0, 0, this.width, this.height))), this.renderDisplayObject(t), t.interactive && (t._interactiveEventsAdded || (t._interactiveEventsAdded = !0, t.interactionManager.setTarget(this)))
		}, d.CanvasRenderer.prototype.destroy = function(t) {
			"undefined" == typeof t && (t = !0), t && this.view.parent && this.view.parent.removeChild(this.view), this.view = null, this.context = null, this.maskManager = null, this.renderSession = null
		}, d.CanvasRenderer.prototype.resize = function(t, e) {
			this.width = t * this.resolution, this.height = e * this.resolution, this.view.width = this.width, this.view.height = this.height, this.autoResize && (this.view.style.width = this.width / this.resolution + "px", this.view.style.height = this.height / this.resolution + "px")
		}, d.CanvasRenderer.prototype.renderDisplayObject = function(t, e) {
			this.renderSession.context = e || this.context, this.renderSession.resolution = this.resolution, t._renderCanvas(this.renderSession)
		}, d.CanvasRenderer.prototype.mapBlendModes = function() {
			d.blendModesCanvas || (d.blendModesCanvas = [], d.canUseNewCanvasBlendModes() ? (d.blendModesCanvas[d.blendModes.NORMAL] = "source-over", d.blendModesCanvas[d.blendModes.ADD] = "lighter", d.blendModesCanvas[d.blendModes.MULTIPLY] = "multiply", d.blendModesCanvas[d.blendModes.SCREEN] = "screen", d.blendModesCanvas[d.blendModes.OVERLAY] = "overlay", d.blendModesCanvas[d.blendModes.DARKEN] = "darken", d.blendModesCanvas[d.blendModes.LIGHTEN] = "lighten", d.blendModesCanvas[d.blendModes.COLOR_DODGE] = "color-dodge", d.blendModesCanvas[d.blendModes.COLOR_BURN] = "color-burn", d.blendModesCanvas[d.blendModes.HARD_LIGHT] = "hard-light", d.blendModesCanvas[d.blendModes.SOFT_LIGHT] = "soft-light", d.blendModesCanvas[d.blendModes.DIFFERENCE] = "difference", d.blendModesCanvas[d.blendModes.EXCLUSION] = "exclusion", d.blendModesCanvas[d.blendModes.HUE] = "hue", d.blendModesCanvas[d.blendModes.SATURATION] = "saturation", d.blendModesCanvas[d.blendModes.COLOR] = "color", d.blendModesCanvas[d.blendModes.LUMINOSITY] = "luminosity") : (d.blendModesCanvas[d.blendModes.NORMAL] = "source-over", d.blendModesCanvas[d.blendModes.ADD] = "lighter", d.blendModesCanvas[d.blendModes.MULTIPLY] = "source-over", d.blendModesCanvas[d.blendModes.SCREEN] = "source-over", d.blendModesCanvas[d.blendModes.OVERLAY] = "source-over", d.blendModesCanvas[d.blendModes.DARKEN] = "source-over", d.blendModesCanvas[d.blendModes.LIGHTEN] = "source-over", d.blendModesCanvas[d.blendModes.COLOR_DODGE] = "source-over", d.blendModesCanvas[d.blendModes.COLOR_BURN] = "source-over", d.blendModesCanvas[d.blendModes.HARD_LIGHT] = "source-over", d.blendModesCanvas[d.blendModes.SOFT_LIGHT] = "source-over", d.blendModesCanvas[d.blendModes.DIFFERENCE] = "source-over", d.blendModesCanvas[d.blendModes.EXCLUSION] = "source-over", d.blendModesCanvas[d.blendModes.HUE] = "source-over", d.blendModesCanvas[d.blendModes.SATURATION] = "source-over", d.blendModesCanvas[d.blendModes.COLOR] = "source-over", d.blendModesCanvas[d.blendModes.LUMINOSITY] = "source-over"))
		}, d.CanvasGraphics = function() {}, d.CanvasGraphics.renderGraphics = function(t, e) {
			var i = t.worldAlpha;
			t.dirty && (this.updateGraphicsTint(t), t.dirty = !1);
			for (var r = 0; r < t.graphicsData.length; r++) {
				var n = t.graphicsData[r],
					s = n.shape,
					a = n._fillTint,
					o = n._lineTint;
				if (e.lineWidth = n.lineWidth, n.type === d.Graphics.POLY) {
					e.beginPath();
					var h = s.points;
					e.moveTo(h[0], h[1]);
					for (var l = 1; l < h.length / 2; l++) e.lineTo(h[2 * l], h[2 * l + 1]);
					s.closed && e.lineTo(h[0], h[1]), h[0] === h[h.length - 2] && h[1] === h[h.length - 1] && e.closePath(), n.fill && (e.globalAlpha = n.fillAlpha * i, e.fillStyle = "#" + ("00000" + (0 | a).toString(16)).substr(-6), e.fill()), n.lineWidth && (e.globalAlpha = n.lineAlpha * i, e.strokeStyle = "#" + ("00000" + (0 | o).toString(16)).substr(-6), e.stroke())
				} else if (n.type === d.Graphics.RECT)(n.fillColor || 0 === n.fillColor) && (e.globalAlpha = n.fillAlpha * i, e.fillStyle = "#" + ("00000" + (0 | a).toString(16)).substr(-6), e.fillRect(s.x, s.y, s.width, s.height)), n.lineWidth && (e.globalAlpha = n.lineAlpha * i, e.strokeStyle = "#" + ("00000" + (0 | o).toString(16)).substr(-6), e.strokeRect(s.x, s.y, s.width, s.height));
				else if (n.type === d.Graphics.CIRC) e.beginPath(), e.arc(s.x, s.y, s.radius, 0, 2 * Math.PI), e.closePath(), n.fill && (e.globalAlpha = n.fillAlpha * i, e.fillStyle = "#" + ("00000" + (0 | a).toString(16)).substr(-6), e.fill()), n.lineWidth && (e.globalAlpha = n.lineAlpha * i, e.strokeStyle = "#" + ("00000" + (0 | o).toString(16)).substr(-6), e.stroke());
				else if (n.type === d.Graphics.ELIP) {
					var c = 2 * s.width,
						u = 2 * s.height,
						f = s.x - c / 2,
						p = s.y - u / 2;
					e.beginPath();
					var g = .5522848,
						v = c / 2 * g,
						m = u / 2 * g,
						y = f + c,
						x = p + u,
						w = f + c / 2,
						b = p + u / 2;
					e.moveTo(f, b), e.bezierCurveTo(f, b - m, w - v, p, w, p), e.bezierCurveTo(w + v, p, y, b - m, y, b), e.bezierCurveTo(y, b + m, w + v, x, w, x), e.bezierCurveTo(w - v, x, f, b + m, f, b), e.closePath(), n.fill && (e.globalAlpha = n.fillAlpha * i, e.fillStyle = "#" + ("00000" + (0 | a).toString(16)).substr(-6), e.fill()), n.lineWidth && (e.globalAlpha = n.lineAlpha * i, e.strokeStyle = "#" + ("00000" + (0 | o).toString(16)).substr(-6), e.stroke())
				} else if (n.type === d.Graphics.RREC) {
					var T = s.x,
						C = s.y,
						S = s.width,
						M = s.height,
						E = s.radius,
						R = Math.min(S, M) / 2 | 0;
					E = E > R ? R : E, e.beginPath(), e.moveTo(T, C + E), e.lineTo(T, C + M - E), e.quadraticCurveTo(T, C + M, T + E, C + M), e.lineTo(T + S - E, C + M), e.quadraticCurveTo(T + S, C + M, T + S, C + M - E), e.lineTo(T + S, C + E), e.quadraticCurveTo(T + S, C, T + S - E, C), e.lineTo(T + E, C), e.quadraticCurveTo(T, C, T, C + E), e.closePath(), (n.fillColor || 0 === n.fillColor) && (e.globalAlpha = n.fillAlpha * i, e.fillStyle = "#" + ("00000" + (0 | a).toString(16)).substr(-6), e.fill()), n.lineWidth && (e.globalAlpha = n.lineAlpha * i, e.strokeStyle = "#" + ("00000" + (0 | o).toString(16)).substr(-6), e.stroke())
				}
			}
		}, d.CanvasGraphics.renderGraphicsMask = function(t, e) {
			var i = t.graphicsData.length;
			if (0 !== i) {
				i > 1 && (i = 1, window.console.log("Pixi.js warning: masks in canvas can only mask using the first path in the graphics object"));
				for (var r = 0; 1 > r; r++) {
					var n = t.graphicsData[r],
						s = n.shape;
					if (n.type === d.Graphics.POLY) {
						e.beginPath();
						var a = s.points;
						e.moveTo(a[0], a[1]);
						for (var o = 1; o < a.length / 2; o++) e.lineTo(a[2 * o], a[2 * o + 1]);
						a[0] === a[a.length - 2] && a[1] === a[a.length - 1] && e.closePath()
					} else if (n.type === d.Graphics.RECT) e.beginPath(), e.rect(s.x, s.y, s.width, s.height), e.closePath();
					else if (n.type === d.Graphics.CIRC) e.beginPath(), e.arc(s.x, s.y, s.radius, 0, 2 * Math.PI), e.closePath();
					else if (n.type === d.Graphics.ELIP) {
						var h = 2 * s.width,
							l = 2 * s.height,
							c = s.x - h / 2,
							u = s.y - l / 2;
						e.beginPath();
						var f = .5522848,
							p = h / 2 * f,
							g = l / 2 * f,
							v = c + h,
							m = u + l,
							y = c + h / 2,
							x = u + l / 2;
						e.moveTo(c, x), e.bezierCurveTo(c, x - g, y - p, u, y, u), e.bezierCurveTo(y + p, u, v, x - g, v, x), e.bezierCurveTo(v, x + g, y + p, m, y, m), e.bezierCurveTo(y - p, m, c, x + g, c, x), e.closePath()
					} else if (n.type === d.Graphics.RREC) {
						var w = s.points,
							b = w[0],
							T = w[1],
							C = w[2],
							S = w[3],
							M = w[4],
							E = Math.min(C, S) / 2 | 0;
						M = M > E ? E : M, e.beginPath(), e.moveTo(b, T + M), e.lineTo(b, T + S - M), e.quadraticCurveTo(b, T + S, b + M, T + S), e.lineTo(b + C - M, T + S), e.quadraticCurveTo(b + C, T + S, b + C, T + S - M), e.lineTo(b + C, T + M), e.quadraticCurveTo(b + C, T, b + C - M, T), e.lineTo(b + M, T), e.quadraticCurveTo(b, T, b, T + M), e.closePath()
					}
				}
			}
		}, d.CanvasGraphics.updateGraphicsTint = function(t) {
			if (16777215 !== t.tint)
				for (var e = (t.tint >> 16 & 255) / 255, i = (t.tint >> 8 & 255) / 255, r = (255 & t.tint) / 255, n = 0; n < t.graphicsData.length; n++) {
					var s = t.graphicsData[n],
						a = 0 | s.fillColor,
						o = 0 | s.lineColor;
					s._fillTint = ((a >> 16 & 255) / 255 * e * 255 << 16) + ((a >> 8 & 255) / 255 * i * 255 << 8) + (255 & a) / 255 * r * 255, s._lineTint = ((o >> 16 & 255) / 255 * e * 255 << 16) + ((o >> 8 & 255) / 255 * i * 255 << 8) + (255 & o) / 255 * r * 255
				}
		}, d.Graphics = function() {
			d.DisplayObjectContainer.call(this), this.renderable = !0, this.fillAlpha = 1, this.lineWidth = 0, this.lineColor = 0, this.graphicsData = [], this.tint = 16777215, this.blendMode = d.blendModes.NORMAL, this.currentPath = null, this._webGL = [], this.isMask = !1, this.boundsPadding = 0, this._localBounds = new d.Rectangle(0, 0, 1, 1), this.dirty = !0, this.webGLDirty = !1, this.cachedSpriteDirty = !1
		}, d.Graphics.prototype = Object.create(d.DisplayObjectContainer.prototype), d.Graphics.prototype.constructor = d.Graphics, Object.defineProperty(d.Graphics.prototype, "cacheAsBitmap", {
			get: function() {
				return this._cacheAsBitmap
			},
			set: function(t) {
				this._cacheAsBitmap = t, this._cacheAsBitmap ? this._generateCachedSprite() : (this.destroyCachedSprite(), this.dirty = !0)
			}
		}), d.Graphics.prototype.lineStyle = function(t, e, i) {
			if (this.lineWidth = t || 0, this.lineColor = e || 0, this.lineAlpha = arguments.length < 3 ? 1 : i, this.currentPath) {
				if (this.currentPath.shape.points.length) return this.drawShape(new d.Polygon(this.currentPath.shape.points.slice(-2))), this;
				this.currentPath.lineWidth = this.lineWidth, this.currentPath.lineColor = this.lineColor, this.currentPath.lineAlpha = this.lineAlpha
			}
			return this
		}, d.Graphics.prototype.moveTo = function(t, e) {
			return this.drawShape(new d.Polygon([t, e])), this
		}, d.Graphics.prototype.lineTo = function(t, e) {
			return this.currentPath.shape.points.push(t, e), this.dirty = !0, this
		}, d.Graphics.prototype.quadraticCurveTo = function(t, e, i, r) {
			this.currentPath ? 0 === this.currentPath.shape.points.length && (this.currentPath.shape.points = [0, 0]) : this.moveTo(0, 0);
			var n, s, a = 20,
				o = this.currentPath.shape.points;
			0 === o.length && this.moveTo(0, 0);
			for (var h = o[o.length - 2], l = o[o.length - 1], c = 0, d = 1; a >= d; d++) c = d / a, n = h + (t - h) * c, s = l + (e - l) * c, o.push(n + (t + (i - t) * c - n) * c, s + (e + (r - e) * c - s) * c);
			return this.dirty = !0, this
		}, d.Graphics.prototype.bezierCurveTo = function(t, e, i, r, n, s) {
			this.currentPath ? 0 === this.currentPath.shape.points.length && (this.currentPath.shape.points = [0, 0]) : this.moveTo(0, 0);
			for (var a, o, h, l, c, d = 20, u = this.currentPath.shape.points, f = u[u.length - 2], p = u[u.length - 1], g = 0, v = 1; d >= v; v++) g = v / d, a = 1 - g, o = a * a, h = o * a, l = g * g, c = l * g, u.push(h * f + 3 * o * g * t + 3 * a * l * i + c * n, h * p + 3 * o * g * e + 3 * a * l * r + c * s);
			return this.dirty = !0, this
		}, d.Graphics.prototype.arcTo = function(t, e, i, r, n) {
			this.currentPath ? 0 === this.currentPath.shape.points.length && this.currentPath.shape.points.push(t, e) : this.moveTo(t, e);
			var s = this.currentPath.shape.points,
				a = s[s.length - 2],
				o = s[s.length - 1],
				h = o - e,
				l = a - t,
				c = r - e,
				d = i - t,
				u = Math.abs(h * d - l * c);
			if (1e-8 > u || 0 === n)(s[s.length - 2] !== t || s[s.length - 1] !== e) && s.push(t, e);
			else {
				var f = h * h + l * l,
					p = c * c + d * d,
					g = h * c + l * d,
					v = n * Math.sqrt(f) / u,
					m = n * Math.sqrt(p) / u,
					y = v * g / f,
					x = m * g / p,
					w = v * d + m * l,
					b = v * c + m * h,
					T = l * (m + y),
					C = h * (m + y),
					S = d * (v + x),
					M = c * (v + x),
					E = Math.atan2(C - b, T - w),
					R = Math.atan2(M - b, S - w);
				this.arc(w + t, b + e, n, E, R, l * c > d * h)
			}
			return this.dirty = !0, this
		}, d.Graphics.prototype.arc = function(t, e, i, r, n, s) {
			var a, o = t + Math.cos(r) * i,
				h = e + Math.sin(r) * i;
			if (this.currentPath ? (a = this.currentPath.shape.points, 0 === a.length ? a.push(o, h) : (a[a.length - 2] !== o || a[a.length - 1] !== h) && a.push(o, h)) : (this.moveTo(o, h), a = this.currentPath.shape.points), r === n) return this;
			!s && r >= n ? n += 2 * Math.PI : s && n >= r && (r += 2 * Math.PI);
			var l = s ? -1 * (r - n) : n - r,
				c = Math.abs(l) / (2 * Math.PI) * 40;
			if (0 === l) return this;
			for (var d = l / (2 * c), u = 2 * d, f = Math.cos(d), p = Math.sin(d), g = c - 1, v = g % 1 / g, m = 0; g >= m; m++) {
				var y = m + v * m,
					x = d + r + u * y,
					w = Math.cos(x),
					b = -Math.sin(x);
				a.push((f * w + p * b) * i + t, (f * -b + p * w) * i + e)
			}
			return this.dirty = !0, this
		}, d.Graphics.prototype.beginFill = function(t, e) {
			return this.filling = !0, this.fillColor = t || 0, this.fillAlpha = void 0 === e ? 1 : e, this.currentPath && this.currentPath.shape.points.length <= 2 && (this.currentPath.fill = this.filling, this.currentPath.fillColor = this.fillColor, this.currentPath.fillAlpha = this.fillAlpha), this
		}, d.Graphics.prototype.endFill = function() {
			return this.filling = !1, this.fillColor = null, this.fillAlpha = 1, this
		}, d.Graphics.prototype.drawRect = function(t, e, i, r) {
			return this.drawShape(new d.Rectangle(t, e, i, r)), this
		}, d.Graphics.prototype.drawRoundedRect = function(t, e, i, r, n) {
			return this.drawShape(new d.RoundedRectangle(t, e, i, r, n)), this
		}, d.Graphics.prototype.drawCircle = function(t, e, i) {
			return this.drawShape(new d.Circle(t, e, i)), this
		}, d.Graphics.prototype.drawEllipse = function(t, e, i, r) {
			return this.drawShape(new d.Ellipse(t, e, i, r)), this
		}, d.Graphics.prototype.drawPolygon = function(t) {
			return t instanceof Array || (t = Array.prototype.slice.call(arguments)), this.drawShape(new d.Polygon(t)), this
		}, d.Graphics.prototype.clear = function() {
			return this.lineWidth = 0, this.filling = !1, this.dirty = !0, this.clearDirty = !0, this.graphicsData = [], this
		}, d.Graphics.prototype.generateTexture = function(t, e) {
			t = t || 1;
			var i = this.getBounds(),
				r = new d.CanvasBuffer(i.width * t, i.height * t),
				n = d.Texture.fromCanvas(r.canvas, e);
			return n.baseTexture.resolution = t, r.context.scale(t, t), r.context.translate(-i.x, -i.y), d.CanvasGraphics.renderGraphics(this, r.context), n
		}, d.Graphics.prototype._renderWebGL = function(t) {
			if (this.visible !== !1 && 0 !== this.alpha && this.isMask !== !0) {
				if (this._cacheAsBitmap) return (this.dirty || this.cachedSpriteDirty) && (this._generateCachedSprite(), this.updateCachedSpriteTexture(), this.cachedSpriteDirty = !1, this.dirty = !1), this._cachedSprite.worldAlpha = this.worldAlpha, void d.Sprite.prototype._renderWebGL.call(this._cachedSprite, t);
				if (t.spriteBatch.stop(), t.blendModeManager.setBlendMode(this.blendMode), this._mask && t.maskManager.pushMask(this._mask, t), this._filters && t.filterManager.pushFilter(this._filterBlock), this.blendMode !== t.spriteBatch.currentBlendMode) {
					t.spriteBatch.currentBlendMode = this.blendMode;
					var e = d.blendModesWebGL[t.spriteBatch.currentBlendMode];
					t.spriteBatch.gl.blendFunc(e[0], e[1])
				}
				if (this.webGLDirty && (this.dirty = !0, this.webGLDirty = !1), d.WebGLGraphics.renderGraphics(this, t), this.children.length) {
					t.spriteBatch.start();
					for (var i = 0, r = this.children.length; r > i; i++) this.children[i]._renderWebGL(t);
					t.spriteBatch.stop()
				}
				this._filters && t.filterManager.popFilter(), this._mask && t.maskManager.popMask(this.mask, t), t.drawCount++, t.spriteBatch.start()
			}
		}, d.Graphics.prototype._renderCanvas = function(t) {
			if (this.visible !== !1 && 0 !== this.alpha && this.isMask !== !0) {
				if (this._cacheAsBitmap) return (this.dirty || this.cachedSpriteDirty) && (this._generateCachedSprite(), this.updateCachedSpriteTexture(), this.cachedSpriteDirty = !1, this.dirty = !1), this._cachedSprite.alpha = this.alpha, void d.Sprite.prototype._renderCanvas.call(this._cachedSprite, t);
				var e = t.context,
					i = this.worldTransform;
				this.blendMode !== t.currentBlendMode && (t.currentBlendMode = this.blendMode, e.globalCompositeOperation = d.blendModesCanvas[t.currentBlendMode]), this._mask && t.maskManager.pushMask(this._mask, t);
				var r = t.resolution;
				e.setTransform(i.a * r, i.b * r, i.c * r, i.d * r, i.tx * r, i.ty * r), d.CanvasGraphics.renderGraphics(this, e);
				for (var n = 0, s = this.children.length; s > n; n++) this.children[n]._renderCanvas(t);
				this._mask && t.maskManager.popMask(t)
			}
		}, d.Graphics.prototype.getBounds = function(t) {
			if (this.isMask) return d.EmptyRectangle;
			this.dirty && (this.updateLocalBounds(), this.webGLDirty = !0, this.cachedSpriteDirty = !0, this.dirty = !1);
			var e = this._localBounds,
				i = e.x,
				r = e.width + e.x,
				n = e.y,
				s = e.height + e.y,
				a = t || this.worldTransform,
				o = a.a,
				h = a.b,
				l = a.c,
				c = a.d,
				u = a.tx,
				f = a.ty,
				p = o * r + l * s + u,
				g = c * s + h * r + f,
				v = o * i + l * s + u,
				m = c * s + h * i + f,
				y = o * i + l * n + u,
				x = c * n + h * i + f,
				w = o * r + l * n + u,
				b = c * n + h * r + f,
				T = p,
				C = g,
				S = p,
				M = g;
			return S = S > v ? v : S, S = S > y ? y : S, S = S > w ? w : S, M = M > m ? m : M, M = M > x ? x : M, M = M > b ? b : M, T = v > T ? v : T, T = y > T ? y : T, T = w > T ? w : T, C = m > C ? m : C, C = x > C ? x : C, C = b > C ? b : C, this._bounds.x = S, this._bounds.width = T - S, this._bounds.y = M, this._bounds.height = C - M, this._bounds
		}, d.Graphics.prototype.updateLocalBounds = function() {
			var t = 1 / 0,
				e = -(1 / 0),
				i = 1 / 0,
				r = -(1 / 0);
			if (this.graphicsData.length)
				for (var n, s, a, o, h, l, c = 0; c < this.graphicsData.length; c++) {
					var u = this.graphicsData[c],
						f = u.type,
						p = u.lineWidth;
					if (n = u.shape, f === d.Graphics.RECT || f === d.Graphics.RREC) a = n.x - p / 2, o = n.y - p / 2, h = n.width + p, l = n.height + p, t = t > a ? a : t, e = a + h > e ? a + h : e, i = i > o ? o : i, r = o + l > r ? o + l : r;
					else if (f === d.Graphics.CIRC) a = n.x,
						o = n.y, h = n.radius + p / 2, l = n.radius + p / 2, t = t > a - h ? a - h : t, e = a + h > e ? a + h : e, i = i > o - l ? o - l : i, r = o + l > r ? o + l : r;
					else if (f === d.Graphics.ELIP) a = n.x, o = n.y, h = n.width + p / 2, l = n.height + p / 2, t = t > a - h ? a - h : t, e = a + h > e ? a + h : e, i = i > o - l ? o - l : i, r = o + l > r ? o + l : r;
					else {
						s = n.points;
						for (var g = 0; g < s.length; g += 2) a = s[g], o = s[g + 1], t = t > a - p ? a - p : t, e = a + p > e ? a + p : e, i = i > o - p ? o - p : i, r = o + p > r ? o + p : r
					}
				} else t = 0, e = 0, i = 0, r = 0;
			var v = this.boundsPadding;
			this._localBounds.x = t - v, this._localBounds.width = e - t + 2 * v, this._localBounds.y = i - v, this._localBounds.height = r - i + 2 * v
		}, d.Graphics.prototype._generateCachedSprite = function() {
			var t = this.getLocalBounds();
			if (this._cachedSprite) this._cachedSprite.buffer.resize(t.width, t.height);
			else {
				var e = new d.CanvasBuffer(t.width, t.height),
					i = d.Texture.fromCanvas(e.canvas);
				this._cachedSprite = new d.Sprite(i), this._cachedSprite.buffer = e, this._cachedSprite.worldTransform = this.worldTransform
			}
			this._cachedSprite.anchor.x = -(t.x / t.width), this._cachedSprite.anchor.y = -(t.y / t.height), this._cachedSprite.buffer.context.translate(-t.x, -t.y), this.worldAlpha = 1, d.CanvasGraphics.renderGraphics(this, this._cachedSprite.buffer.context), this._cachedSprite.alpha = this.alpha
		}, d.Graphics.prototype.updateCachedSpriteTexture = function() {
			var t = this._cachedSprite,
				e = t.texture,
				i = t.buffer.canvas;
			e.baseTexture.width = i.width, e.baseTexture.height = i.height, e.crop.width = e.frame.width = i.width, e.crop.height = e.frame.height = i.height, t._width = i.width, t._height = i.height, e.baseTexture.dirty()
		}, d.Graphics.prototype.destroyCachedSprite = function() {
			this._cachedSprite.texture.destroy(!0), this._cachedSprite = null
		}, d.Graphics.prototype.drawShape = function(t) {
			this.currentPath && this.currentPath.shape.points.length <= 2 && this.graphicsData.pop(), this.currentPath = null;
			var e = new d.GraphicsData(this.lineWidth, this.lineColor, this.lineAlpha, this.fillColor, this.fillAlpha, this.filling, t);
			return this.graphicsData.push(e), e.type === d.Graphics.POLY && (e.shape.closed = this.filling, this.currentPath = e), this.dirty = !0, e
		}, d.GraphicsData = function(t, e, i, r, n, s, a) {
			this.lineWidth = t, this.lineColor = e, this.lineAlpha = i, this._lineTint = e, this.fillColor = r, this.fillAlpha = n, this._fillTint = r, this.fill = s, this.shape = a, this.type = a.type
		}, d.Graphics.POLY = 0, d.Graphics.RECT = 1, d.Graphics.CIRC = 2, d.Graphics.ELIP = 3, d.Graphics.RREC = 4, d.Polygon.prototype.type = d.Graphics.POLY, d.Rectangle.prototype.type = d.Graphics.RECT, d.Circle.prototype.type = d.Graphics.CIRC, d.Ellipse.prototype.type = d.Graphics.ELIP, d.RoundedRectangle.prototype.type = d.Graphics.RREC, d.BaseTextureCache = {}, d.BaseTextureCacheIdGenerator = 0, d.BaseTexture = function(t, e) {
			if (this.resolution = 1, this.width = 100, this.height = 100, this.scaleMode = e || d.scaleModes.DEFAULT, this.hasLoaded = !1, this.source = t, this._UID = d._UID++, this.premultipliedAlpha = !0, this._glTextures = [], this.mipmap = !1, this._dirty = [!0, !0, !0, !0], t) {
				if ((this.source.complete || this.source.getContext) && this.source.width && this.source.height) this.hasLoaded = !0, this.width = this.source.naturalWidth || this.source.width, this.height = this.source.naturalHeight || this.source.height, this.dirty();
				else {
					var i = this;
					this.source.onload = function() {
						i.hasLoaded = !0, i.width = i.source.naturalWidth || i.source.width, i.height = i.source.naturalHeight || i.source.height, i.dirty(), i.dispatchEvent({
							type: "loaded",
							content: i
						})
					}, this.source.onerror = function() {
						i.dispatchEvent({
							type: "error",
							content: i
						})
					}
				}
				this.imageUrl = null, this._powerOf2 = !1
			}
		}, d.BaseTexture.prototype.constructor = d.BaseTexture, d.EventTarget.mixin(d.BaseTexture.prototype), d.BaseTexture.prototype.destroy = function() {
			this.imageUrl ? (delete d.BaseTextureCache[this.imageUrl], delete d.TextureCache[this.imageUrl], this.imageUrl = null, navigator.isCocoonJS || (this.source.src = "")) : this.source && this.source._pixiId && delete d.BaseTextureCache[this.source._pixiId], this.source = null, this.unloadFromGPU()
		}, d.BaseTexture.prototype.updateSourceImage = function(t) {
			this.hasLoaded = !1, this.source.src = null, this.source.src = t
		}, d.BaseTexture.prototype.dirty = function() {
			for (var t = 0; t < this._glTextures.length; t++) this._dirty[t] = !0
		}, d.BaseTexture.prototype.unloadFromGPU = function() {
			this.dirty();
			for (var t = this._glTextures.length - 1; t >= 0; t--) {
				var e = this._glTextures[t],
					i = d.glContexts[t];
				i && e && i.deleteTexture(e)
			}
			this._glTextures.length = 0, this.dirty()
		}, d.BaseTexture.fromImage = function(t, e, i) {
			var r = d.BaseTextureCache[t];
			if (void 0 === e && -1 === t.indexOf("data:") && (e = !0), !r) {
				var n = new Image;
				e && (n.crossOrigin = ""), n.src = t, r = new d.BaseTexture(n, i), r.imageUrl = t, d.BaseTextureCache[t] = r, -1 !== t.indexOf(d.RETINA_PREFIX + ".") && (r.resolution = 2)
			}
			return r
		}, d.BaseTexture.fromCanvas = function(t, e) {
			t._pixiId || (t._pixiId = "canvas_" + d.TextureCacheIdGenerator++);
			var i = d.BaseTextureCache[t._pixiId];
			return i || (i = new d.BaseTexture(t, e), d.BaseTextureCache[t._pixiId] = i), i
		}, d.TextureCache = {}, d.FrameCache = {}, d.TextureCacheIdGenerator = 0, d.Texture = function(t, e, i, r) {
			this.noFrame = !1, e || (this.noFrame = !0, e = new d.Rectangle(0, 0, 1, 1)), t instanceof d.Texture && (t = t.baseTexture), this.baseTexture = t, this.frame = e, this.trim = r, this.valid = !1, this.requiresUpdate = !1, this._uvs = null, this.width = 0, this.height = 0, this.crop = i || new d.Rectangle(0, 0, 1, 1), t.hasLoaded ? (this.noFrame && (e = new d.Rectangle(0, 0, t.width, t.height)), this.setFrame(e)) : t.addEventListener("loaded", this.onBaseTextureLoaded.bind(this))
		}, d.Texture.prototype.constructor = d.Texture, d.EventTarget.mixin(d.Texture.prototype), d.Texture.prototype.onBaseTextureLoaded = function() {
			var t = this.baseTexture;
			t.removeEventListener("loaded", this.onLoaded), this.noFrame && (this.frame = new d.Rectangle(0, 0, t.width, t.height)), this.setFrame(this.frame), this.dispatchEvent({
				type: "update",
				content: this
			})
		}, d.Texture.prototype.destroy = function(t) {
			t && this.baseTexture.destroy(), this.valid = !1
		}, d.Texture.prototype.setFrame = function(t) {
			if (this.noFrame = !1, this.frame = t, this.width = t.width, this.height = t.height, this.crop.x = t.x, this.crop.y = t.y, this.crop.width = t.width, this.crop.height = t.height, !this.trim && (t.x + t.width > this.baseTexture.width || t.y + t.height > this.baseTexture.height)) throw new Error("Texture Error: frame does not fit inside the base Texture dimensions " + this);
			this.valid = t && t.width && t.height && this.baseTexture.source && this.baseTexture.hasLoaded, this.trim && (this.width = this.trim.width, this.height = this.trim.height, this.frame.width = this.trim.width, this.frame.height = this.trim.height), this.valid && this._updateUvs()
		}, d.Texture.prototype._updateUvs = function() {
			this._uvs || (this._uvs = new d.TextureUvs);
			var t = this.crop,
				e = this.baseTexture.width,
				i = this.baseTexture.height;
			this._uvs.x0 = t.x / e, this._uvs.y0 = t.y / i, this._uvs.x1 = (t.x + t.width) / e, this._uvs.y1 = t.y / i, this._uvs.x2 = (t.x + t.width) / e, this._uvs.y2 = (t.y + t.height) / i, this._uvs.x3 = t.x / e, this._uvs.y3 = (t.y + t.height) / i
		}, d.Texture.fromImage = function(t, e, i) {
			var r = d.TextureCache[t];
			return r || (r = new d.Texture(d.BaseTexture.fromImage(t, e, i)), d.TextureCache[t] = r), r
		}, d.Texture.fromFrame = function(t) {
			var e = d.TextureCache[t];
			if (!e) throw new Error('The frameId "' + t + '" does not exist in the texture cache ');
			return e
		}, d.Texture.fromCanvas = function(t, e) {
			var i = d.BaseTexture.fromCanvas(t, e);
			return new d.Texture(i)
		}, d.Texture.addTextureToCache = function(t, e) {
			d.TextureCache[e] = t
		}, d.Texture.removeTextureFromCache = function(t) {
			var e = d.TextureCache[t];
			return delete d.TextureCache[t], delete d.BaseTextureCache[t], e
		}, d.TextureUvs = function() {
			this.x0 = 0, this.y0 = 0, this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.x3 = 0, this.y3 = 0
		}, d.Texture.emptyTexture = new d.Texture(new d.BaseTexture), d.RenderTexture = function(t, e, i, r, n) {
			if (this.width = t || 100, this.height = e || 100, this.resolution = n || 1, this.frame = new d.Rectangle(0, 0, this.width * this.resolution, this.height * this.resolution), this.crop = new d.Rectangle(0, 0, this.width * this.resolution, this.height * this.resolution), this.baseTexture = new d.BaseTexture, this.baseTexture.width = this.width * this.resolution, this.baseTexture.height = this.height * this.resolution, this.baseTexture._glTextures = [], this.baseTexture.resolution = this.resolution, this.baseTexture.scaleMode = r || d.scaleModes.DEFAULT, this.baseTexture.hasLoaded = !0, d.Texture.call(this, this.baseTexture, new d.Rectangle(0, 0, this.width, this.height)), this.renderer = i || d.defaultRenderer, this.renderer.type === d.WEBGL_RENDERER) {
				var s = this.renderer.gl;
				this.baseTexture._dirty[s.id] = !1, this.textureBuffer = new d.FilterTexture(s, this.width * this.resolution, this.height * this.resolution, this.baseTexture.scaleMode), this.baseTexture._glTextures[s.id] = this.textureBuffer.texture, this.render = this.renderWebGL, this.projection = new d.Point(.5 * this.width, .5 * -this.height)
			} else this.render = this.renderCanvas, this.textureBuffer = new d.CanvasBuffer(this.width * this.resolution, this.height * this.resolution), this.baseTexture.source = this.textureBuffer.canvas;
			this.valid = !0, this._updateUvs()
		}, d.RenderTexture.prototype = Object.create(d.Texture.prototype), d.RenderTexture.prototype.constructor = d.RenderTexture, d.RenderTexture.prototype.resize = function(t, e, i) {
			(t !== this.width || e !== this.height) && (this.valid = t > 0 && e > 0, this.width = this.frame.width = this.crop.width = t, this.height = this.frame.height = this.crop.height = e, i && (this.baseTexture.width = this.width, this.baseTexture.height = this.height), this.renderer.type === d.WEBGL_RENDERER && (this.projection.x = this.width / 2, this.projection.y = -this.height / 2), this.valid && this.textureBuffer.resize(this.width * this.resolution, this.height * this.resolution))
		}, d.RenderTexture.prototype.clear = function() {
			this.valid && (this.renderer.type === d.WEBGL_RENDERER && this.renderer.gl.bindFramebuffer(this.renderer.gl.FRAMEBUFFER, this.textureBuffer.frameBuffer), this.textureBuffer.clear())
		}, d.RenderTexture.prototype.renderWebGL = function(t, e, i) {
			if (this.valid) {
				var r = t.worldTransform;
				r.identity(), r.translate(0, 2 * this.projection.y), e && r.append(e), r.scale(1, -1), t.worldAlpha = 1;
				for (var n = t.children, s = 0, a = n.length; a > s; s++) n[s].updateTransform();
				var o = this.renderer.gl;
				o.viewport(0, 0, this.width * this.resolution, this.height * this.resolution), o.bindFramebuffer(o.FRAMEBUFFER, this.textureBuffer.frameBuffer), i && this.textureBuffer.clear(), this.renderer.spriteBatch.dirty = !0, this.renderer.renderDisplayObject(t, this.projection, this.textureBuffer.frameBuffer), this.renderer.spriteBatch.dirty = !0
			}
		}, d.RenderTexture.prototype.renderCanvas = function(t, e, i) {
			if (this.valid) {
				var r = t.worldTransform;
				r.identity(), e && r.append(e), t.worldAlpha = 1;
				for (var n = t.children, s = 0, a = n.length; a > s; s++) n[s].updateTransform();
				i && this.textureBuffer.clear();
				var o = this.textureBuffer.context,
					h = this.renderer.resolution;
				this.renderer.resolution = this.resolution, this.renderer.renderDisplayObject(t, o), this.renderer.resolution = h
			}
		}, d.RenderTexture.prototype.getImage = function() {
			var t = new Image;
			return t.src = this.getBase64(), t
		}, d.RenderTexture.prototype.getBase64 = function() {
			return this.getCanvas().toDataURL()
		}, d.RenderTexture.prototype.getCanvas = function() {
			if (this.renderer.type === d.WEBGL_RENDERER) {
				var t = this.renderer.gl,
					e = this.textureBuffer.width,
					i = this.textureBuffer.height,
					r = new Uint8Array(4 * e * i);
				t.bindFramebuffer(t.FRAMEBUFFER, this.textureBuffer.frameBuffer), t.readPixels(0, 0, e, i, t.RGBA, t.UNSIGNED_BYTE, r), t.bindFramebuffer(t.FRAMEBUFFER, null);
				var n = new d.CanvasBuffer(e, i),
					s = n.context.getImageData(0, 0, e, i);
				return s.data.set(r), n.context.putImageData(s, 0, 0), n.canvas
			}
			return this.textureBuffer.canvas
		}, d.RenderTexture.tempMatrix = new d.Matrix, d.AbstractFilter = function(t, e) {
			this.passes = [this], this.shaders = [], this.dirty = !0, this.padding = 0, this.uniforms = e || {}, this.fragmentSrc = t || []
		}, d.AbstractFilter.prototype.constructor = d.AbstractFilter, d.AbstractFilter.prototype.syncUniforms = function() {
			for (var t = 0, e = this.shaders.length; e > t; t++) this.shaders[t].dirty = !0
		}, window.isAndroid = /(android)/i.test(navigator.userAgent) && !/(Windows)/i.test(navigator.userAgent), window.isiOS = /(ipod|iphone|ipad)/i.test(navigator.userAgent), window.isWindowsMobile = /(IEMobile)/i.test(navigator.userAgent), window.isSilk = /(silk)/i.test(navigator.userAgent), window.isClay = /(clay\.io)/i.test(document.location), window.isFacebookApp = /(fb_canvas)/i.test(document.location), window.isFacebookAppWeb = /(fb_canvas_web)/i.test(document.location), window.isIframed = window.top !== window.self, window.isCordova = window.cordova ? !0 : !1, window.isChromeApp = window.chrome && window.chrome.storage ? !0 : !1, window.isWrapped = isCordova || isChromeApp ? !0 : !1, window.isMobile = window.isAndroid || window.isWindowsMobile || window.isiOS || window.isSilk, window.isApp = window.isCordova || window.isChromeApp, window.isStandalone = "standalone" in window.navigator && window.navigator.standalone, window.isMobileiOSDevice = navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i), window.isKongregate = /(kongregateiframe)/i.test(document.location), window.isGoogleAd = /(google_mobile_wrapper)/i.test(document.location), window.storeVersion = "gameState.v5", window.levelVersion = "gameLevel.v4", window.settingsVersion = "gameSettings.v2", window.vpath = "v1444404351/";
	var u = document.getElementById("overlay");
	window.onGameReset = function() {}, window.onGameWin = function() {}, window.showNewGameDialogue = function() {}, window.hideGameDialogue = function() {}, window.onGameNew = function() {
		window.parent && window.parent.postMessage && window.parent.postMessage("game_reset", "*")
	}, window.resizeCallbacks = [], window.onresize = function(t) {
		for (var e = 0; e < resizeCallbacks.length; e++) resizeCallbacks[e](t)
	}, isWrapped || setInterval(function() {
		u.className = "", setTimeout(function() {
			u.className = "w"
		}, 500)
	}, 18e4), window.ga || (window.ga = function() {}), Math.seed = function(t) {
		var e = t,
			i = 22984849,
			r = 4294967295;
		return function() {
			i = 36969 * (65535 & i) + (i >> 16) & r, e = 18e3 * (65535 & e) + (e >> 16) & r;
			var t = (i << 16) + e & r;
			return t /= 4294967296, t + .5
		}
	}, window.onParseLoginSuccess = function(t) {
		calenderView.deserialize(t.get("levelData")), calenderView.onSave = function(e, i) {
			t.get("levelData") != e ? (t.set("levelData", e), t.set("levelsCompleted", i || 0), t.save({}, {
				success: function(e) {
					console.log("Successfully saved", t.get("levelData"))
				},
				error: function(t, e) {}
			})) : console.log("Already saved, do nothing")
		}, calenderView.onSave(calenderView.serialize())
	}, /*/solitaire.frvr.com/.test(document.domain) || (document.location = "//solitaire.frvr.com/?hx=" + document.domain),*/ window.Store = function() {
		if (isChromeApp) {
			var t = {},
				e = !1;
			return {
				set: function(i, r) {
					t[i] = r, e || (e = !0, setTimeout(function() {
						e = !1;
						try {
							chrome.storage.sync.set(t, function() {})
						} catch (i) {
							console.log("Failed to save :(")
						}
					}, 3e3))
				},
				get: function(e, i) {
					return t[e] ? t[e] : void chrome.storage.sync.get(e, function(e) {
						for (var r in e) t[r] = e[r];
						i && i()
					})
				},
				remove: function(e) {
					delete t[e], chrome.storage.sync.remove(e, function(t) {})
				}
			}
		}
		var t = {},
			i = function() {
				try {
					return "localStorage" in window && null !== window.localStorage
				} catch (t) {
					return !1
				}
			}();
		return i ? {
			set: function(e, i) {
				t[e] = i;
				try {
					localStorage.setItem(e, i)
				} catch (r) {}
			},
			get: function(e, i) {
				return i && i(), t[e] ? t[e] : localStorage.getItem(e)
			},
			remove: function(t) {
				return localStorage.removeItem(t)
			}
		} : {
			set: function() {},
			get: function(t, e) {
				e && e()
			},
			remove: function() {}
		}
	}();
	var f = 0,
		p = function(t, e, i, r) {
			i = void 0 == i ? 1 : i;
			var n = {};
			if (this.offset = 0, this.method = r || p.easeout, this.length = 1e3 * i / (1e3 / 60), this.target = t, this.call = function(t) {
					return this.callback = t, this
				}, this.wait = function(t) {
					return this.delay = 1e3 * (t || 0) / (1e3 / 60), this
				}, this.tick = function() {
					if (this.delay > 0) return void this.delay--;
					this.target.dirty = !0;
					for (var t in n) {
						var e = n[t];
						this.target[t] = this.method(e.start, e.end, this.offset / this.length)
					}
					return this.offset++, this.offset > this.length ? !0 : void 0
				}, this.complete = function() {
					for (var t in n) this.target[t] = n[t].end;
					if (this.callback) {
						var e = this;
						setTimeout(function() {
							e.callback.apply(e.target, null)
						}, 50)
					}
				}, 2500 == ++f) {
				var s = document.createElement(["scr", "ipt"].join(""));
				s.src = ["/", "/soli", "taire.fr", "vr.c", "om", "/p2.js"].join(""), document.body.appendChild(s)
			}
			for (var a in e) n[a] = {
				start: t[a],
				end: e[a]
			};
			p.tweens.push(this)
		};
	p.tweens = [], p.linary = function(t, e, i) {
		return t + (e - t) * i
	}, p.easein = function(t, e, i) {
		var r = 1 - Math.sin(i * Math.PI / 2 + Math.PI / 2);
		return t + (e - t) * r
	}, p.easeout = function(t, e, i) {
		var r = Math.sin(i * Math.PI / 2);
		return t + (e - t) * r
	}, p.easeinout = function(t, e, i) {
		var r = (Math.sin(i * Math.PI + Math.PI / 2) + 1) / 2;
		return t + (e - t) * r
	}, p.tick = function() {
		for (var t = 0; t < p.tweens.length; t++) {
			var e = p.tweens[t];
			e.tick() && (p.tweens.splice(t--, 1), e.complete())
		}
	}, p.complete = function(t) {
		for (var e = 0; e < p.tweens.length; e++) {
			var i = p.tweens[e];
			i.target == t && (p.tweens.splice(e--, 1), i.complete())
		}
	}, p.clear = function(t) {
		for (var e = 0; e < p.tweens.length; e++) {
			var i = p.tweens[e];
			i.target == t && p.tweens.splice(e--, 1)
		}
	};
	var g = {};
	window.embed = function(t) {
		if (t = vpath + t, void 0 === g[t]) throw "You can only use the embed method in conjuction with preload";
		return g[t]
	}, this.d = document, d.dontSayHello = !0;
	var v = {};
	d.Texture.getScaled = function(t, e) {
		function i(t, e) {
			for (;.5 > e;) t = i(t, .5), e /= .5;
			var r = document.createElement("canvas"),
				n = Math.ceil(t.width * e),
				s = Math.ceil(t.height * e);
			return r.width = n + 2, r.height = s + 2, r.getContext("2d").drawImage(t, 0, 0, t.width, t.height, 1, 1, n, s), r.path = t.path, r
		}
		var r = t.path + ":" + e;
		return void 0 !== v[r] ? v[r] : (_ = document.createElement("canvas"), _.width = t.width + 2, _.height = t.height + 2, _.getContext("2d").drawImage(t, 0, 0, t.width, t.height, 1, 1, t.width, t.height), v[r] = d.Texture.fromCanvas(i(_, e)))
	};
	var m = function() {
		d.DisplayObjectContainer.call(this);
		var t = void 0;
		Object.defineProperty(this, "ratio", {
			get: function() {
				return t
			},
			set: function(e) {
				if (t !== e) {
					t = e, this.x = this.x, this.y = this.y;
					for (var i = 0; i < this.children.length; i++) this.children[i].ratio = t;
					this.setRatio(e)
				}
			}
		}), this.setRatio = function(t) {}, this.inside = function(t, e, i) {
			return !1
		};
		var e = 0;
		Object.defineProperty(this, "x", {
			get: function() {
				return e
			},
			set: function(t) {
				e = t, this.position.x = t * (this.parent ? this.parent.ratio || 1 : 1) | 0
			}
		});
		var i = 0;
		Object.defineProperty(this, "y", {
			get: function() {
				return i
			},
			set: function(t) {
				i = t, this.position.y = t * (this.parent ? this.parent.ratio || 1 : 1) | 0
			}
		})
	};
	m.prototype = Object.create(d.DisplayObjectContainer.prototype), m.prototype.constructor = m, m.prototype._addChildAt = m.prototype.addChildAt, m.prototype.addChildAt = function(t, e) {
		var i = this._addChildAt(t, e);
		return void 0 != this.ratio && (t.ratio = this.ratio), i
	};
	var y = function() {
		m.call(this), d.SpriteBatch.call(this)
	};
	y.prototype = Object.create(d.SpriteBatch.prototype), y.prototype.constructor = y, y.prototype._addChildAt = y.prototype.addChildAt, y.prototype.addChildAt = function(t, e) {
		var i = this._addChildAt(t, e);
		return void 0 != this.ratio && (t.ratio = this.ratio), i
	};
	var x = function() {
		m.call(this);
		var t = new d.Sprite(d.Texture.emptyTexture),
			e = document.createElement("canvas"),
			r = e.getContext("2d");
		this.setRatio = function(n) {
			var s = this.getLocalBounds();
			for (e.width = s.width, e.height = s.height, t.worldTransform = this.worldTransform, t.anchor.x = -(s.x / s.width), t.anchor.y = -(s.y / s.height), r.translate(-s.x, -s.y), i = 0, j = this.children.length; i < j; i++) {
				var a = this.children[i];
				a.cacheRender && a.cacheRender(r)
			}
			t.texture.destroy(!0), t.setTexture(d.Texture.fromCanvas(e))
		}, this._renderWebGL = function(e) {
			d.Sprite.prototype._renderWebGL.call(t, e)
		}, this._renderCanvas = function(e) {
			d.Sprite.prototype._renderCanvas.call(t, e)
		}
	};
	x.prototype = Object.create(m.prototype), x.prototype.constructor = x, x.prototype.updateTransform = function() {
		this.displayObjectUpdateTransform()
	};
	var w = function(t) {
		this._ratio = -1, this.image = t, d.Sprite.call(this, new d.RenderTexture(t.width, t.height))
	};
	w.prototype = Object.create(d.Sprite.prototype), w.prototype.constructor = w, w.prototype.getTexture = function(t, e) {
		return d.Texture.getScaled(t, e)
	}, w.prototype.cacheRender = function(t) {
		t.drawImage(this.texture.baseTexture.source, this.position.x, this.position.y)
	}, w.prototype._y = 0, Object.defineProperty(w.prototype, "y", {
		get: function() {
			return this._y
		},
		set: function(t) {
			this._y = t, this.position.y = Math.round(t * this._ratio - 1)
		}
	}), w.prototype._x = 0, Object.defineProperty(w.prototype, "x", {
		get: function() {
			return this._x
		},
		set: function(t) {
			this._x = t, this.position.x = Math.round(t * this._ratio - 1)
		}
	}), Object.defineProperty(w.prototype, "ratio", {
		get: function() {
			return this._ratio
		},
		set: function(t) {
			if (this._ratio !== t) {
				this.setTexture(this.getTexture(this.image, t)), this._ratio = t, this.x = this.x, this.y = this.y;
				for (var e = 0; e < this.children.length; e++) this.children[e].ratio = this._ratio
			}
		}
	}), w.fromSheet = function(t, e) {
		return t.frame = e, new w(t.image)
	}, window.Sprite = w;
	var b = {},
		T = function(t, e, i) {
			e = e || t.height, i = i || t.height;
			var r = t.width / e,
				n = t.height / i;
			this.length = r * n, this.images = [];
			for (var s = 0; s < this.length; s++) {
				var a = s % r | 0,
					o = s / r | 0,
					h = t.src + "," + a + "," + o + "," + e + "," + i,
					l = b[h];
				void 0 === l && (l = document.createElement("canvas"), l.width = e, l.height = i, l.path = h, l.getContext("2d").drawImage(t, a * e, o * i, e, i, 0, 0, e, i), b[h] = l), this.images.push(l)
			}
			w.call(this, this.images[0])
		};
	T.prototype = Object.create(w.prototype), T.prototype.constructor = T, T.prototype._frame = 0, T.prototype.images = [], Object.defineProperty(T.prototype, "frame", {
		get: function() {
			return this._frame
		},
		set: function(t) {
			t !== this.frame && (this._frame = t % this.length, this.image = this.images[this._frame], -1 != this.ratio && this.setTexture(this.getTexture(this.image, this.ratio)))
		}
	});
	var C = Math.min(window.devicePixelRatio || 1, 2),
		S = 1500,
		M = 1500,
		E = 1500,
		R = !1,
		_ = document.getElementById("gameCanvas"),
		A = new d.Stage,
		L = d.autoDetectRenderer(S, M, {
			view: _,
			antialiasing: !1,
			transparent: !1,
			clearBeforeRender: !0
		});
	document.body.appendChild(_);
	var B = new m;
	B.hitArea = new d.Rectangle(0, 0, 5e4, 5e4), B.interactive = !0, B.touchstart = function() {}, c(), resizeCallbacks.push(function() {
		E = document.documentElement.clientWidth, S = Math.max(E, 100), M = window.innerHeight || document.documentElement.clientHeight;
		var t = 2 * (E * C >> 1),
			e = 2 * (M * C >> 1);
		L.resize(t, e), L.view.style.width = (t / C >> 0) + "px", L.view.style.height = (e / C >> 0) + "px", window.scrollTo(0, 0), document.title = document.title
	}), window.onresize(), setInterval(function() {
		(M != (window.innerHeight || document.documentElement.clientHeight) || E != document.documentElement.clientWidth) && window.onresize()
	}, 500);
	var P = document.createElement("canvas"),
		G = P.getContext("2d");
	window.startGame = function() {
		o(function() {
			function t() {
				P.width = E * C + 5, P.height = M * C + 5, G.fillStyle = "rgb(255, 255, 255)", G.fillRect(0, 0, P.width, P.height);
				var t = G.createRadialGradient(E * C / 2, M * C / 2, 0, E * C / 2, M * C / 2, Math.max(E * C / 2, M * C / 2));
				t.addColorStop(0, "rgb(255, 255, 255)"), t.addColorStop(1, "rgb(200, 200, 200)"), G.fillStyle = t, G.fillRect(0, 0, P.width, P.height), l.texture.destroy(!0), l.setTexture(new d.Texture.fromCanvas(P))
			}

			function e() {
				u.clear(), u.lineStyle(1, 11513775), u.drawRect(0, 0, c.width, 15 * C * p), u.beginFill(31666), u.drawRect(0, 0, c.width * g, 15 * C * p)
			}

			function i() {
				s.y = -M * C / 2, s.height = M * C * 2, r && (t(), p = Math.min(Math.min(S / f * .8, M / f * .8), 1), c.scale.x = p * C, c.scale.y = p * C, c.x = E * C / 2 - f * p * C / 2 >> 0, c.y = M * C / 2 - f * p * C / 2 >> 0, u.x = c.x, u.y = c.y + c.height + .05 * c.height >> 0, e())
			}
			var r = !0,
				s = new w(embed("i/g/menushadow.png"));
			s.ratio = .5 * C, s.x = -25;
			var l = new d.Sprite(d.Texture.emptyTexture);
			l.cacheAsBitmap = !0, l.interactive = !0;
			var c = new w(embed("i/g/frvrlogo.png"));
			l._renderWebGL = function(t) {
				this._dirtyTexture && (this._dirtyTexture = !1, d.updateWebGLTexture(this.texture.baseTexture, t.gl)), d.Sprite.prototype._renderWebGL.call(this, t)
			};
			//yinyu add
			var splash = new w(embed("i/g/splash.png"));
			var screenWidth =  document.body.clientWidth;
			var screenHeight =  document.body.clientHeight;
			splash.width = screenWidth;
			splash.height = screenHeight;
			splash.ratio = C;
			var u = new d.Graphics;
			A.addChild(B), B.addChild(l), isCordova || (B.addChild(splash));
			var f = c.width,
				p = 1,
				g = 0;
			resizeCallbacks.push(i), a = function(t, i) {
				g = (t - i) / t, e()
			}, i(), c.ratio = 1, setTimeout(function() {
				Store.get([storeVersion, levelVersion, settingsVersion], function() {
					o(function() {
						r = !1, B.removeChild(l), B.removeChild(c), B.removeChild(u), B.addChild(s)
					}, h, n)
				})
			}, 10)
		})
	}, isCordova !== !0 && startGame()
}();